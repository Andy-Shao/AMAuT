training=True
_parameters=OrderedDict([('cls_token', Parameter containing:
tensor([[[ 0.0409,  0.0149,  0.0135, -0.0157,  0.0325,  0.0238,  0.0067,
           0.0221, -0.0064, -0.0551, -0.0182, -0.0133,  0.0151,  0.0377,
          -0.0239, -0.0092, -0.0090, -0.0177,  0.0182, -0.0054,  0.0161,
           0.0012,  0.0308, -0.0029, -0.0277,  0.0147,  0.0081,  0.0079,
           0.0107, -0.0203, -0.0057, -0.0100, -0.0081,  0.0035,  0.0145,
           0.0089, -0.0122,  0.0312, -0.0023,  0.0132,  0.0261,  0.0146,
           0.0026, -0.0144, -0.0098, -0.0176,  0.0130,  0.0154,  0.0213,
          -0.0341,  0.0238, -0.0038, -0.0331,  0.0208, -0.0138, -0.0139,
           0.0388, -0.0484,  0.0090, -0.0194, -0.0381,  0.0033,  0.0087,
          -0.0258,  0.0201, -0.0080, -0.0169,  0.0449,  0.0182,  0.0003,
          -0.0004,  0.0016,  0.0151,  0.0014, -0.0153, -0.0379,  0.0103,
          -0.0286, -0.0296, -0.0033, -0.0220,  0.0188, -0.0229, -0.0045,
           0.0100,  0.0363, -0.0211, -0.0179,  0.0012, -0.0028,  0.0135,
           0.0109,  0.0025, -0.0091, -0.0207, -0.0068, -0.0085,  0.0078,
           0.0178,  0.0148,  0.0094, -0.0062,  0.0574,  0.0466,  0.0350,
          -0.0107, -0.0223, -0.0029, -0.0141, -0.0106,  0.0130,  0.0256,
          -0.0053,  0.0008, -0.0010, -0.0376,  0.0041,  0.0412, -0.0003,
          -0.0224, -0.0310, -0.0128,  0.0218, -0.0194,  0.0116, -0.0132,
           0.0073,  0.0014, -0.0186,  0.0195,  0.0248, -0.0213, -0.0021,
           0.0068, -0.0163,  0.0275,  0.0228, -0.0108, -0.0265,  0.0008,
           0.0054,  0.0017,  0.0096,  0.0049, -0.0129,  0.0290,  0.0184,
          -0.0287,  0.0127,  0.0167, -0.0040, -0.0009,  0.0295,  0.0011,
           0.0077, -0.0146, -0.0187,  0.0118,  0.0075, -0.0243, -0.0122,
          -0.0169,  0.0019,  0.0044,  0.0074,  0.0183, -0.0011,  0.0187,
           0.0249, -0.0255, -0.0129,  0.0152,  0.0085,  0.0012, -0.0126,
          -0.0155,  0.0236, -0.0454,  0.0124,  0.0091,  0.0145,  0.0120,
           0.0019,  0.0295,  0.0225, -0.0294, -0.0142,  0.0183,  0.0009,
           0.0053, -0.0190, -0.0113,  0.0020,  0.0058,  0.0251,  0.0042,
          -0.0134,  0.0271,  0.0174, -0.0174, -0.0240, -0.0070,  0.0233,
          -0.0139,  0.0038,  0.0036, -0.0324,  0.0095, -0.0071,  0.0140,
          -0.0087, -0.0050, -0.0026,  0.0013, -0.0263, -0.0173, -0.0012,
          -0.0144, -0.0362, -0.0382, -0.0230, -0.0060, -0.0267,  0.0083,
          -0.0313,  0.0222, -0.0030,  0.0155, -0.0096, -0.0194,  0.0264,
           0.0404,  0.0216, -0.0024, -0.0076,  0.0201, -0.0224,  0.0165,
           0.0087,  0.0065, -0.0088,  0.0471,  0.0065,  0.0090,  0.0061,
           0.0057, -0.0070, -0.0182,  0.0141, -0.0051,  0.0072,  0.0278,
          -0.0033, -0.0316,  0.0019,  0.0033,  0.0131, -0.0196,  0.0249,
          -0.0031, -0.0226,  0.0097, -0.0306, -0.0251, -0.0420,  0.0191,
           0.0071,  0.0068,  0.0335, -0.0040, -0.0187,  0.0107, -0.0282,
           0.0098,  0.0173,  0.0228,  0.0322, -0.0187,  0.0079, -0.0022,
          -0.0158, -0.0092, -0.0061,  0.0024, -0.0148,  0.0015, -0.0060,
           0.0005,  0.0114, -0.0105,  0.0023, -0.0291, -0.0083,  0.0251,
           0.0316,  0.0320,  0.0064, -0.0227, -0.0178,  0.0047, -0.0056,
           0.0202,  0.0440, -0.0213, -0.0107, -0.0041, -0.0170,  0.0187,
          -0.0349, -0.0430, -0.0021,  0.0325,  0.0123, -0.0520,  0.0429,
           0.0287,  0.0044,  0.0170,  0.0081, -0.0180,  0.0164,  0.0231,
          -0.0374, -0.0171,  0.0268,  0.0077, -0.0195,  0.0078, -0.0025,
          -0.0066,  0.0088, -0.0107, -0.0230, -0.0314, -0.0222,  0.0072,
           0.0141,  0.0211,  0.0073,  0.0160,  0.0301, -0.0199,  0.0101,
           0.0308,  0.0121, -0.0003, -0.0030,  0.0125,  0.0049,  0.0283,
          -0.0007,  0.0133,  0.0002, -0.0240,  0.0068,  0.0468, -0.0200,
          -0.0028,  0.0244,  0.0169, -0.0146,  0.0221,  0.0028,  0.0274,
           0.0131,  0.0302,  0.0195, -0.0204, -0.0165, -0.0028,  0.0030,
          -0.0117, -0.0037, -0.0081,  0.0362,  0.0097, -0.0004,  0.0408,
          -0.0034,  0.0228, -0.0169, -0.0285,  0.0010, -0.0045,  0.0023,
          -0.0367,  0.0043,  0.0476,  0.0288,  0.0137, -0.0015,  0.0168,
           0.0163, -0.0088,  0.0069,  0.0039, -0.0231,  0.0061,  0.0386,
          -0.0058, -0.0051,  0.0177,  0.0037,  0.0160, -0.0233,  0.0010,
          -0.0373, -0.0146, -0.0038,  0.0336, -0.0115,  0.0062,  0.0098,
          -0.0129,  0.0166, -0.0230, -0.0203, -0.0088, -0.0106,  0.0309,
           0.0111, -0.0261,  0.0228, -0.0125,  0.0232,  0.0181,  0.0098,
          -0.0226,  0.0166, -0.0007, -0.0030, -0.0137, -0.0010,  0.0239,
           0.0031, -0.0026,  0.0316, -0.0074, -0.0103, -0.0102, -0.0002,
          -0.0130, -0.0154,  0.0526,  0.0309, -0.0052, -0.0040, -0.0189,
           0.0445, -0.0286, -0.0258, -0.0287, -0.0055,  0.0307, -0.0121,
          -0.0035,  0.0125,  0.0226,  0.0349,  0.0019, -0.0147, -0.0353,
           0.0522, -0.0059,  0.0246, -0.0221,  0.0013,  0.0315, -0.0128,
          -0.0183,  0.0315, -0.0167, -0.0206, -0.0091,  0.0301, -0.0121,
           0.0197,  0.0072,  0.0170, -0.0228,  0.0051,  0.0149, -0.0033,
          -0.0190,  0.0200,  0.0033,  0.0045,  0.0033,  0.0190,  0.0264,
           0.0286,  0.0117,  0.0110,  0.0291,  0.0020,  0.0137,  0.0036,
           0.0050,  0.0116,  0.0186, -0.0406,  0.0150,  0.0233, -0.0185,
          -0.0117, -0.0037,  0.0149,  0.0178,  0.0421,  0.0148,  0.0044,
          -0.0089,  0.0274,  0.0199,  0.0162, -0.0076,  0.0022, -0.0284,
           0.0234, -0.0353,  0.0118,  0.0244,  0.0165, -0.0075, -0.0103,
           0.0079, -0.0038, -0.0271, -0.0199, -0.0135, -0.0049, -0.0010,
           0.0338, -0.0040,  0.0131, -0.0098, -0.0377,  0.0022, -0.0082,
           0.0098, -0.0564,  0.0306,  0.0127, -0.0073,  0.0053, -0.0048,
           0.0148,  0.0023,  0.0180,  0.0027, -0.0054,  0.0149,  0.0046,
          -0.0075, -0.0102,  0.0034, -0.0219,  0.0157, -0.0102, -0.0308,
          -0.0175, -0.0133, -0.0090, -0.0137, -0.0033, -0.0137,  0.0110,
          -0.0207,  0.0003, -0.0099,  0.0106, -0.0084, -0.0106, -0.0145,
           0.0234,  0.0208,  0.0196, -0.0123,  0.0270, -0.0290, -0.0372,
           0.0115, -0.0205,  0.0234,  0.0084,  0.0149, -0.0151,  0.0015,
           0.0550, -0.0066, -0.0090,  0.0175,  0.0136, -0.0228, -0.0347,
           0.0183, -0.0309, -0.0071, -0.0274,  0.0426, -0.0012, -0.0059,
           0.0195,  0.0157, -0.0090,  0.0189, -0.0213,  0.0053,  0.0016,
           0.0298, -0.0332, -0.0060, -0.0299, -0.0349,  0.0037,  0.0242,
           0.0006, -0.0046,  0.0014, -0.0013, -0.0118,  0.0209,  0.0129,
          -0.0075, -0.0233, -0.0060,  0.0064, -0.0046,  0.0121,  0.0121,
           0.0335,  0.0299, -0.0051,  0.0057,  0.0036,  0.0045, -0.0084,
          -0.0161,  0.0341, -0.0457, -0.0105, -0.0056, -0.0147, -0.0295,
          -0.0185,  0.0086,  0.0056, -0.0409, -0.0292, -0.0085, -0.0344,
           0.0030, -0.0225, -0.0251,  0.0100, -0.0009, -0.0127,  0.0339,
          -0.0074, -0.0137,  0.0016, -0.0171, -0.0227,  0.0131, -0.0045,
           0.0098, -0.0074, -0.0069, -0.0210, -0.0281,  0.0231,  0.0130,
          -0.0015, -0.0215, -0.0086,  0.0228,  0.0055,  0.0296,  0.0514,
           0.0194, -0.0014,  0.0140, -0.0067,  0.0156,  0.0026, -0.0042,
          -0.0386, -0.0248, -0.0237,  0.0113,  0.0178,  0.0311, -0.0258,
          -0.0215,  0.0056,  0.0040, -0.0052,  0.0102, -0.0315,  0.0184,
           0.0339, -0.0086,  0.0494,  0.0268,  0.0097,  0.0423, -0.0064,
           0.0062, -0.0041, -0.0262, -0.0239,  0.0045, -0.0023,  0.0251,
          -0.0167,  0.0191, -0.0055, -0.0098, -0.0063, -0.0052, -0.0318,
          -0.0123,  0.0558, -0.0044, -0.0222,  0.0089,  0.0063, -0.0312,
           0.0391, -0.0005, -0.0227, -0.0079,  0.0217, -0.0397, -0.0043,
           0.0162, -0.0149,  0.0066,  0.0260,  0.0118, -0.0326, -0.0192,
           0.0277, -0.0092,  0.0129,  0.0056,  0.0044, -0.0141,  0.0034,
           0.0099,  0.0051,  0.0099, -0.0461,  0.0019, -0.0312,  0.0293,
           0.0173, -0.0226,  0.0041,  0.0103,  0.0159, -0.0062, -0.0071,
          -0.0144,  0.0096, -0.0142, -0.0156, -0.0107]]], requires_grad=True)), ('pos_embed', Parameter containing:
tensor([[[-0.0128, -0.0005, -0.0054,  ..., -0.0120,  0.0166, -0.0041],
         [-0.0034,  0.0399, -0.0263,  ...,  0.0152,  0.0218, -0.0273],
         [ 0.0025,  0.0148,  0.0039,  ...,  0.0237,  0.0295, -0.0374],
         ...,
         [ 0.0598,  0.0092, -0.0193,  ...,  0.0186,  0.0043, -0.0027],
         [-0.0402,  0.0545, -0.0158,  ..., -0.0117,  0.0013,  0.0126],
         [ 0.0122, -0.0339,  0.0028,  ...,  0.0600, -0.0131,  0.0428]]],
       requires_grad=True)), ('dist_token', Parameter containing:
tensor([[[-3.3205e-02,  3.9609e-03,  4.8611e-02,  1.0312e-02,  5.9565e-03,
           4.3427e-02, -6.5203e-03, -1.1102e-02, -4.1310e-03,  2.8330e-03,
           3.3761e-02,  1.0554e-02, -2.9376e-02,  1.0895e-03, -2.1073e-02,
           2.6529e-02,  1.1461e-02,  1.9645e-02,  2.6887e-02,  2.0164e-02,
           2.3958e-02, -6.7278e-03, -3.6919e-02, -1.7871e-02,  6.6583e-03,
          -1.8135e-04, -3.5398e-03,  1.6370e-02,  1.1405e-02, -7.7910e-03,
           1.2492e-03, -1.3158e-02,  2.0229e-02,  1.1513e-03, -2.8248e-03,
          -3.9914e-04, -1.3363e-02, -1.8218e-02, -4.1505e-02, -2.1220e-03,
          -1.7942e-02,  1.7515e-02, -1.7786e-03, -1.9318e-02, -1.1665e-02,
           4.0746e-03, -1.9225e-03, -5.6257e-03,  5.2458e-03, -3.0863e-02,
           3.5336e-02, -2.6017e-03,  1.4466e-02,  1.9191e-02,  9.0338e-03,
          -1.3065e-03,  4.1320e-02,  8.3324e-03, -3.3180e-02,  3.4551e-03,
          -1.6000e-02, -1.5040e-02, -8.7987e-03,  2.6021e-02, -1.7457e-03,
           1.9927e-02,  3.8634e-02,  5.7501e-03,  5.6809e-03,  2.5505e-02,
           2.1391e-02,  2.4604e-02,  2.5355e-02, -6.2297e-03,  2.6539e-02,
          -1.3857e-02,  3.1064e-02, -8.6840e-03,  3.5027e-03, -6.0160e-04,
           2.1116e-02,  2.9135e-02, -1.3284e-02,  9.4516e-03, -2.7205e-02,
           3.0001e-02,  2.1627e-02, -1.1122e-03, -1.2297e-02,  4.7881e-03,
          -7.6778e-03, -7.1706e-03,  1.4083e-02, -1.1971e-02, -1.0126e-02,
          -1.4559e-02,  1.9428e-02,  2.7111e-03,  1.1571e-03,  3.3612e-02,
          -3.4830e-03, -1.6441e-02, -1.8949e-02, -9.0174e-03,  2.3866e-02,
          -2.3098e-03, -2.3544e-02,  3.4678e-03,  1.2979e-03, -9.3716e-03,
           2.5156e-02, -3.1301e-02,  2.5339e-02, -2.5027e-02, -3.9029e-03,
          -9.8568e-03, -2.4938e-03, -1.3301e-02,  2.7494e-02, -5.3896e-03,
           3.0377e-02, -1.1862e-02,  7.5405e-03, -2.9096e-02, -1.2521e-02,
          -2.9523e-02,  1.5237e-03, -1.6030e-02,  1.9694e-02, -1.3785e-03,
          -7.5056e-03, -3.5135e-02,  7.5405e-03, -2.3203e-02, -1.5502e-02,
          -2.5499e-02, -3.5127e-03,  2.4316e-02,  1.9121e-02, -1.6374e-02,
          -2.3652e-02,  1.4395e-02,  2.5224e-03, -8.4153e-03, -2.1388e-02,
          -3.8577e-03,  6.4496e-03,  7.1794e-03, -2.9478e-04,  4.1866e-02,
          -2.0973e-02,  2.9234e-02,  1.6087e-02, -1.0257e-02, -3.0350e-02,
          -2.8856e-02, -1.7902e-02,  3.4548e-02, -2.6396e-02,  1.0970e-02,
           6.8460e-03,  8.9790e-03, -2.0913e-02, -3.1724e-02, -3.2377e-02,
          -2.1506e-02,  1.6944e-02, -8.2087e-03,  8.6657e-03,  3.7762e-02,
          -1.4304e-03, -9.9216e-03,  2.4849e-03, -7.0335e-04, -1.5765e-03,
           1.2433e-02, -5.8546e-03,  1.4653e-02, -2.3367e-02,  4.5650e-03,
           1.1324e-02,  5.2128e-02, -3.0965e-02, -1.8413e-05,  3.3356e-04,
          -2.7310e-02, -9.7202e-03,  2.2667e-02,  1.1944e-02, -1.5691e-02,
          -1.9150e-02, -6.1814e-03, -6.6691e-03,  3.8456e-02, -1.3194e-02,
           5.1866e-03, -3.2493e-02, -1.3018e-02,  2.7867e-02,  3.7518e-03,
           7.2597e-03, -9.6047e-03,  4.5442e-03, -3.3539e-02, -1.1641e-02,
           1.0435e-03,  3.4559e-02,  3.9042e-02,  4.3361e-03, -3.6106e-02,
          -2.8513e-03, -1.4454e-04, -1.9759e-02,  1.8201e-02, -1.0762e-02,
           6.1995e-03,  1.7864e-02, -1.5946e-02, -1.9288e-02,  3.9702e-03,
          -5.2873e-03, -2.1274e-02, -4.6385e-03,  7.0778e-03, -2.1435e-02,
          -3.7077e-02,  2.6263e-02,  5.2711e-03,  6.0819e-03,  8.1470e-03,
          -1.0514e-02, -5.4421e-02, -1.7711e-02, -8.6366e-03,  1.1073e-02,
          -1.4908e-02, -2.5641e-02,  2.9708e-02,  1.5662e-02, -6.1672e-04,
           2.6212e-02, -5.5140e-03,  2.2804e-02,  2.3474e-02,  2.6713e-02,
           1.3561e-02, -1.0654e-02,  1.4124e-02,  1.9586e-02, -2.5565e-03,
           6.5525e-03,  2.7316e-02, -2.0250e-02,  8.9196e-03,  2.4482e-02,
           3.6451e-03, -2.8888e-02, -2.6246e-02, -1.7874e-02,  1.2256e-02,
          -1.7645e-03, -9.5668e-03,  2.6481e-03,  1.1071e-02, -1.0497e-02,
           2.1409e-02,  2.2352e-03,  7.1892e-03, -2.7834e-02,  2.2899e-02,
          -2.8527e-02, -2.0527e-02, -3.1582e-02,  1.7277e-02, -7.2463e-03,
           4.4551e-02, -3.7475e-03, -5.3075e-03,  5.0139e-02,  2.2648e-02,
           2.4927e-02, -4.1995e-02,  3.9367e-03,  1.0210e-02,  1.9214e-03,
          -2.3248e-02, -1.4866e-02,  1.0866e-02, -5.6189e-03, -7.4083e-03,
           8.1316e-03,  2.1270e-02, -1.1311e-02, -1.6393e-02, -1.9743e-02,
           3.1915e-02,  2.6529e-02,  4.3495e-03,  8.1814e-03, -9.0192e-03,
           5.0362e-03,  2.6170e-02,  8.0639e-03,  3.2160e-02,  2.3752e-02,
          -5.2748e-02,  8.7008e-03, -8.8791e-03, -1.2916e-02,  1.3658e-02,
           1.3958e-02, -7.7567e-03,  1.7125e-02, -1.8378e-02,  2.4057e-02,
          -1.0667e-02, -2.1467e-02,  1.2316e-02,  2.1522e-02, -7.8392e-03,
          -1.9542e-02, -4.8944e-03,  5.8374e-03,  1.4358e-02, -2.6694e-02,
           5.4795e-03, -4.5679e-03, -4.4474e-03,  5.0524e-02,  1.5816e-02,
           1.0171e-02,  9.4138e-04, -1.2406e-02, -3.8459e-02,  2.9244e-02,
           5.4256e-03, -8.5627e-03,  8.7076e-04, -5.8676e-03,  3.2367e-02,
           1.3487e-02,  1.4148e-03,  3.7437e-02,  1.0995e-02,  3.4180e-03,
           2.3436e-02,  1.3380e-02,  3.1014e-02,  2.3127e-02,  5.5830e-03,
           5.4654e-02, -1.1205e-02, -6.3619e-03, -4.2877e-02, -1.5862e-02,
           1.4193e-02, -8.4245e-03, -1.8972e-03,  8.2115e-03,  1.3275e-02,
           3.4952e-03, -2.8502e-03, -2.3414e-02, -2.5066e-02,  5.3181e-03,
          -1.3053e-02, -8.8241e-03, -2.5986e-02,  5.3197e-02,  6.3591e-03,
          -2.9457e-03,  6.3208e-02, -4.0953e-03,  1.1927e-02, -3.4737e-02,
           2.2053e-03, -1.2372e-02,  5.1206e-02, -2.3613e-02, -3.5897e-04,
          -1.3140e-02, -5.2580e-02, -8.1047e-03,  2.3916e-02,  2.5631e-02,
           1.4951e-02, -3.1269e-02,  4.2428e-03,  3.0477e-02, -7.5209e-03,
          -2.3298e-02,  7.7489e-03,  6.4318e-02, -7.8895e-03,  1.5208e-02,
          -1.6053e-02,  2.4688e-02,  1.5294e-02, -4.4209e-03, -7.8220e-04,
           2.3068e-02,  1.4507e-02,  1.0162e-02,  9.0884e-05, -1.3671e-02,
          -2.6766e-02, -7.2843e-04,  1.3855e-03,  1.8406e-02, -9.5226e-03,
           5.5073e-03, -1.7665e-02,  5.5702e-03, -1.0623e-02, -2.3791e-02,
           3.1633e-02,  1.9493e-02,  1.7779e-02, -3.9025e-03,  2.3523e-02,
          -8.7548e-03, -1.5844e-02, -3.4588e-04, -6.9655e-03,  2.6830e-02,
          -3.3359e-02, -5.0011e-03, -1.4995e-02,  5.7342e-03, -1.2318e-02,
           1.0141e-02, -2.1144e-02, -2.5431e-02, -1.6244e-02,  7.5973e-03,
           2.3151e-03, -2.2707e-02,  2.7613e-02, -1.3835e-02, -2.3793e-02,
           3.3007e-02, -1.0084e-02, -3.9304e-03,  1.4393e-02,  9.2244e-04,
          -9.8279e-03, -2.2852e-02, -7.0538e-03,  1.4977e-03, -4.2769e-03,
          -2.6770e-02, -7.9462e-03, -3.2284e-03,  2.2357e-02,  2.7879e-02,
          -3.6808e-02, -1.8242e-02, -3.6169e-02, -1.1040e-02, -7.1260e-03,
          -2.5807e-03, -2.9100e-02, -2.2577e-02, -2.3135e-03, -3.5368e-02,
          -1.0219e-03, -1.2673e-02, -2.5019e-02,  8.5973e-03,  8.3739e-03,
          -1.8787e-02,  3.7274e-02,  9.1366e-03, -3.2289e-02,  7.7429e-03,
           7.2353e-03, -1.8457e-02,  8.3531e-04,  1.8608e-02,  1.0099e-02,
           1.8009e-02,  2.5185e-02,  1.5242e-02,  1.3851e-02,  1.6467e-02,
          -1.7080e-02, -1.9994e-02, -2.8391e-03, -1.0824e-02,  6.6937e-03,
          -4.0725e-02, -7.8470e-03,  1.4446e-02, -4.6805e-03,  1.3170e-02,
          -1.9766e-02,  1.4087e-02, -3.4444e-02,  8.9762e-03, -8.3364e-03,
          -3.1587e-02, -1.4926e-02,  8.5953e-03, -1.5419e-02, -3.2554e-02,
          -1.5956e-02, -1.9386e-02, -7.0221e-03, -2.0851e-02,  8.1491e-03,
          -2.7573e-03,  1.6433e-02,  8.6073e-03, -5.8875e-03,  5.3787e-02,
           5.9612e-03,  1.3819e-03,  7.7246e-04, -4.1173e-04,  2.9016e-02,
           3.1208e-02,  1.4476e-02,  3.1875e-02, -3.4063e-02, -2.1877e-03,
           4.7084e-02, -2.4539e-02, -1.3420e-02,  2.2858e-02,  7.0138e-03,
          -2.0053e-02,  1.3940e-02, -2.1998e-02, -1.3253e-02, -1.7320e-02,
           2.7326e-02,  1.0620e-02, -4.2268e-02, -1.0948e-02,  5.9167e-03,
           1.1900e-02,  3.0441e-02,  1.7358e-02, -4.9079e-03,  2.3151e-02,
          -2.1755e-02, -2.6551e-02,  2.8709e-02, -1.5134e-02,  1.2914e-02,
          -1.0525e-02,  1.3408e-02, -1.1613e-02, -1.7101e-03, -2.9792e-02,
           9.9252e-04,  2.7293e-02, -2.0479e-02,  1.2986e-02,  1.0875e-02,
           1.8828e-02,  8.4696e-03, -1.3311e-02, -2.5484e-02,  1.0595e-02,
          -7.9393e-03,  2.4146e-02,  3.3320e-02,  1.2769e-03,  3.9095e-02,
          -4.3546e-03, -2.4501e-02, -2.5274e-03, -3.9754e-02,  7.1004e-03,
           5.5804e-03, -1.0350e-02,  4.1387e-02,  8.1063e-04, -2.8949e-03,
          -9.0565e-03, -8.0393e-03, -1.3685e-02,  6.3883e-03, -3.2099e-03,
           1.3524e-02,  1.0409e-02, -1.0725e-02, -2.6718e-03,  2.9421e-03,
          -9.2426e-03,  3.2052e-02, -7.0320e-03,  1.3116e-02,  1.1449e-02,
           7.2556e-03, -1.5946e-02,  1.1925e-02,  5.8813e-03, -1.8928e-02,
          -1.0049e-02,  1.6518e-03, -7.1143e-02,  1.4405e-02,  4.2386e-03,
          -1.9627e-02,  3.4260e-02, -1.4939e-02,  4.1785e-03, -5.7245e-03,
           9.3386e-03, -2.1341e-02,  9.3383e-04,  2.1288e-02,  2.5432e-03,
          -2.1428e-02, -2.6888e-02, -6.4783e-03, -5.7639e-03,  8.5941e-03,
           2.7590e-02, -7.6739e-03,  8.8062e-03,  3.3061e-02, -2.7587e-03,
          -3.9874e-03, -5.7130e-02, -4.8845e-02,  1.8114e-02, -2.1993e-03,
          -1.6955e-02,  3.3596e-02,  3.2360e-02, -7.5018e-03, -2.1537e-02,
          -8.7891e-03,  1.3617e-02, -3.2949e-02, -8.5127e-03,  8.4917e-03,
          -8.3301e-03, -2.2336e-02, -9.7334e-03, -3.6253e-02,  3.3993e-02,
          -6.1871e-03,  6.4782e-03, -4.6990e-02, -9.6891e-03,  1.7040e-03,
          -6.8655e-04,  2.7765e-02,  1.0465e-02, -1.0413e-02,  1.6354e-02,
           1.7556e-02, -1.6362e-02,  9.8569e-03, -2.1287e-02, -8.7952e-03,
          -1.3225e-02,  1.2590e-03,  1.3796e-02, -4.0935e-03,  2.4334e-02,
           1.2584e-02,  1.0460e-02,  3.0368e-02,  7.0846e-03,  2.5578e-02,
          -2.2351e-02, -1.5952e-02,  4.8604e-03,  1.0871e-04,  2.7476e-03,
           1.8829e-02,  1.5800e-02, -1.3937e-02,  1.1485e-02, -5.3777e-03,
           1.0813e-03,  1.0581e-02, -9.4467e-03, -4.9266e-03, -2.9794e-02,
          -1.4945e-02,  2.6196e-02, -2.8148e-02, -6.7988e-03, -7.0640e-04,
           7.8818e-03, -7.5271e-03,  3.5577e-02, -2.3188e-03, -1.2660e-02,
           7.3706e-03, -4.1535e-02, -6.6067e-03,  6.8183e-03, -3.3593e-03,
          -1.2414e-02,  2.0510e-02,  1.1723e-02,  1.3509e-03, -1.1783e-02,
           1.9279e-02, -4.4631e-02, -4.8682e-03, -3.3714e-02,  3.9752e-02,
          -7.2002e-03,  2.3586e-02, -1.7310e-02,  5.0668e-02, -1.3681e-02,
          -8.2817e-03,  4.0439e-03,  3.3458e-02,  1.4227e-02,  1.0405e-02,
          -3.7877e-02,  8.5947e-03, -1.3346e-02, -1.8344e-02,  2.5900e-03,
          -2.1318e-02, -1.4572e-03,  9.6374e-05, -3.6576e-02,  5.1855e-02,
          -1.0436e-02, -2.5920e-03,  3.8731e-03,  4.1907e-03, -2.9599e-02,
           6.2961e-02, -1.9237e-02, -2.1729e-02,  2.9033e-02, -1.3670e-02,
          -5.1923e-04, -8.9215e-03, -1.1280e-03, -1.0860e-02,  4.2293e-03,
           6.3639e-03, -1.3968e-02, -1.8995e-02,  1.8306e-02, -1.9980e-02,
          -2.4580e-02,  2.4330e-02,  4.0758e-02, -4.3198e-02, -5.5917e-03,
          -1.1554e-03, -1.3732e-02,  2.4981e-02,  6.1462e-03, -4.0419e-02,
          -2.1876e-02,  2.2920e-02, -9.3451e-03,  1.6775e-02, -2.2450e-02,
           8.1306e-03,  3.6129e-02,  1.9516e-02]]], requires_grad=True))])
_buffers=OrderedDict()
_non_persistent_buffers_set=set()
_backward_hooks=OrderedDict()
_is_full_backward_hook=None
_forward_hooks=OrderedDict()
_forward_pre_hooks=OrderedDict()
_state_dict_hooks=OrderedDict()
_load_state_dict_pre_hooks=OrderedDict()
_modules=OrderedDict([('patch_embed', PatchEmbed(
  (proj): Conv2d(1, 768, kernel_size=(16, 16), stride=(10, 10))
)), ('pos_drop', Dropout(p=0.0, inplace=False)), ('blocks', ModuleList(
  (0): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (1): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (2): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (3): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (4): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (5): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (6): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (7): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (8): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (9): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (10): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (11): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
)), ('norm', LayerNorm((768,), eps=1e-06, elementwise_affine=True)), ('pre_logits', Identity()), ('head', Linear(in_features=768, out_features=1000, bias=True)), ('head_dist', Linear(in_features=768, out_features=1000, bias=True))])
num_classes=1000
num_features=768
embed_dim=768
default_cfg={'url': 'https://dl.fbaipublicfiles.com/deit/deit_base_distilled_patch16_384-d0272ac0.pth', 'num_classes': 1000, 'input_size': (3, 384, 384), 'pool_size': None, 'crop_pct': 1.0, 'interpolation': 'bicubic', 'mean': (0.485, 0.456, 0.406), 'std': (0.229, 0.224, 0.225), 'first_conv': 'patch_embed.proj', 'classifier': 'head'}
