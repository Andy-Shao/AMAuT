training=True
_parameters=OrderedDict([('cls_token', Parameter containing:
tensor([[[-1.3999e-02, -2.9639e-03, -9.1338e-03, -7.9556e-03,  1.7087e-02,
          -1.6379e-02, -2.9337e-03,  2.0162e-02,  1.4443e-02, -1.9395e-02,
          -1.4414e-02, -1.8803e-02,  2.3559e-03, -2.0484e-02, -2.7050e-02,
          -5.8166e-03,  2.2578e-02,  2.1475e-03,  2.0143e-02, -1.7428e-02,
           1.0247e-02,  3.8731e-03,  2.4461e-02,  2.0479e-03,  2.1842e-02,
          -1.9262e-02,  9.9702e-03, -1.4788e-02,  2.4685e-02,  5.4925e-03,
           1.6380e-02,  1.9420e-02,  1.1610e-02, -3.3832e-02, -1.2044e-03,
          -2.2996e-02,  5.3099e-03,  1.7664e-04, -7.4647e-03,  5.5193e-03,
           1.1959e-02,  4.9026e-03, -1.1308e-02,  4.6540e-02,  1.8407e-03,
           2.6652e-03,  2.8711e-02,  5.3129e-03,  2.5781e-02,  2.8222e-03,
          -4.5243e-03,  1.5736e-02, -9.6559e-03, -2.4963e-02,  6.8292e-03,
           1.4147e-02, -2.2891e-02,  1.0375e-02, -2.2764e-02, -1.8280e-02,
           2.0577e-02, -3.7124e-02,  1.1537e-02,  2.3562e-02, -1.1653e-02,
           1.6342e-02,  1.4371e-03,  2.5452e-02, -3.1402e-02, -1.9330e-03,
          -3.5839e-03,  1.0319e-02, -3.3163e-02, -1.2988e-02,  3.1269e-02,
           2.0391e-02, -1.2840e-02,  2.4051e-02,  1.9535e-03, -1.5163e-02,
           1.1199e-03, -1.0897e-02, -3.2001e-03, -4.4199e-03, -1.1158e-02,
           3.6946e-03,  1.6422e-02, -4.1185e-02,  1.5921e-02, -2.1383e-02,
          -2.0709e-02, -1.5733e-04,  6.6161e-03, -4.7625e-03, -4.6093e-03,
          -1.8665e-02, -5.0241e-03, -2.9383e-02, -8.1182e-03,  1.2660e-02,
           3.1245e-03, -8.5831e-03, -1.6788e-02,  1.4938e-02, -3.3236e-02,
          -2.6310e-02, -1.1166e-02,  1.9295e-02,  1.2863e-02,  2.3413e-03,
          -2.7636e-02, -4.3048e-02, -2.2581e-02, -1.9662e-02, -1.4459e-02,
          -5.6759e-03,  3.6045e-02, -7.0775e-03,  4.3211e-02,  3.1320e-03,
          -6.0549e-03,  1.2118e-02,  2.5213e-02,  1.4031e-02, -1.4846e-02,
          -8.9660e-03,  8.6599e-03, -3.2272e-04, -3.0223e-02,  9.6316e-03,
          -2.9239e-03,  9.0941e-03,  1.7710e-04, -3.2817e-03, -9.2964e-03,
          -1.6643e-02, -1.1882e-02, -6.0194e-03, -2.6598e-02, -4.4287e-03,
          -1.7708e-04, -1.1648e-02,  2.0589e-03,  7.9864e-03, -1.2441e-02,
           1.6779e-03, -3.5166e-02,  1.7671e-02,  7.2154e-03,  2.2974e-03,
           2.0969e-02,  4.6295e-03,  1.8940e-02,  1.7459e-02, -3.4438e-02,
          -7.6413e-05, -4.8500e-03, -2.5298e-03, -5.5328e-03,  9.8825e-03,
           5.0513e-02,  1.9111e-02,  3.1125e-03, -2.7312e-02,  5.0366e-03,
          -4.7544e-03, -5.2424e-03,  1.4548e-02,  5.1503e-03, -1.3634e-02,
          -1.0240e-02, -6.9290e-03,  1.2194e-03, -5.2290e-03, -2.2326e-03,
          -2.0683e-02,  1.1950e-03, -2.3316e-02,  5.0401e-02, -4.8429e-02,
           4.3791e-03,  3.2643e-02, -3.6740e-02,  7.1063e-03, -6.2836e-03,
          -2.4609e-02,  4.1787e-03,  8.6689e-03, -1.3293e-03,  1.5429e-03,
           2.3076e-02, -5.8045e-03,  4.5030e-03,  1.4684e-02, -7.5849e-03,
          -2.4427e-03, -5.4395e-03, -3.8689e-02,  4.7248e-02, -1.1315e-02,
          -7.6571e-03, -4.8449e-03, -3.2090e-02, -5.7111e-03,  1.1666e-02,
          -1.1522e-02,  1.8052e-02,  3.0048e-03,  1.7042e-02, -4.7029e-03,
           6.5787e-03, -2.0230e-02,  2.9009e-02,  2.7890e-02,  1.6057e-02,
          -7.9904e-03, -3.9458e-02,  3.4247e-03, -4.0726e-03,  6.1187e-03,
           1.0067e-02, -1.0845e-02,  2.1609e-03,  1.9712e-02,  2.1853e-02,
          -3.3442e-02, -2.8178e-02, -6.3025e-03,  7.2486e-03, -1.2561e-02,
           1.0537e-02, -2.6598e-02, -1.1883e-02, -2.1158e-02, -7.4551e-03,
           6.0308e-03,  3.3829e-02, -3.4794e-02, -3.3859e-02, -2.9128e-02,
          -4.1411e-03, -1.3238e-02, -1.9482e-02, -2.5759e-02,  1.6499e-03,
          -1.3253e-02, -3.4387e-03,  2.7841e-02,  1.0901e-02,  7.1302e-03,
           9.4071e-03, -1.6500e-02,  7.6570e-03, -2.1662e-02, -2.5711e-02,
          -2.4820e-02, -1.9753e-02,  3.3830e-02, -1.7910e-02, -2.5211e-02,
           1.4808e-02, -8.4102e-03,  5.1393e-03,  1.9650e-02, -1.0467e-02,
          -1.1611e-02, -5.2132e-03,  1.5138e-02,  1.7339e-02, -6.8703e-03,
          -1.9315e-02,  1.3071e-02, -4.0851e-03,  3.9060e-03, -2.7712e-02,
           6.8719e-03, -6.2463e-03,  2.8869e-02, -1.0991e-02,  4.3449e-02,
          -3.5684e-03,  1.9468e-02, -1.7384e-02, -3.2088e-02, -2.6630e-02,
           8.5799e-03,  2.7741e-02,  9.1108e-03,  1.7770e-02,  9.7388e-03,
           4.8889e-02, -7.4781e-03,  3.7499e-02,  1.2168e-03,  1.8372e-02,
           2.3929e-02, -1.9014e-02, -3.4524e-02,  1.0160e-02, -1.6732e-03,
          -3.0831e-03, -6.2281e-03,  1.0620e-02, -9.8586e-03, -6.4718e-03,
          -2.2090e-02, -2.6936e-02,  5.4835e-03,  2.1287e-02, -2.7866e-02,
          -1.7642e-02,  3.1085e-02, -1.6389e-02, -2.6228e-03, -2.4465e-02,
           2.1534e-02,  3.0784e-02, -1.5636e-03, -3.4447e-03, -3.5900e-02,
           6.2770e-03, -3.2079e-03, -7.2284e-03,  2.1317e-02, -3.4435e-02,
          -1.7465e-03,  3.8471e-04,  5.1663e-02, -1.6161e-02, -2.8768e-02,
           7.0717e-03, -1.0253e-02, -8.0154e-03, -1.8295e-02,  1.3416e-02,
          -3.2434e-02, -8.7676e-04,  4.6901e-03, -1.5143e-02,  2.1828e-03,
           2.6021e-04, -8.0020e-03, -5.2038e-03, -7.2873e-03, -5.5055e-04,
          -3.2559e-02,  2.8700e-02, -1.1590e-04, -9.4441e-03,  7.8440e-03,
          -5.6816e-03, -4.1490e-04, -1.4616e-02, -6.3682e-03,  1.9121e-02,
           4.8030e-02, -8.6033e-04,  1.4770e-02, -5.2210e-03,  2.8697e-02,
           2.5724e-02,  2.4586e-02,  1.0697e-02,  3.0309e-05,  5.1615e-03,
          -2.0193e-02, -2.4185e-02,  1.9521e-02,  2.8793e-02,  1.0705e-02,
          -2.8648e-02, -2.5785e-02, -1.1493e-02, -3.3113e-03, -1.5279e-03,
           6.7507e-03, -6.2944e-04,  8.6441e-03, -2.6831e-02,  7.8625e-04,
           1.6726e-02, -1.3667e-02,  2.8595e-03,  2.1203e-02, -3.2306e-03,
          -2.1054e-02,  3.2434e-02,  9.1859e-03, -2.2305e-02,  1.2156e-02,
          -2.7110e-02, -5.5271e-03, -1.0591e-03,  1.7915e-02, -2.6016e-02,
           9.1264e-03, -2.1125e-02,  4.1118e-03,  1.6780e-02,  4.8702e-02,
           4.6813e-03, -1.4014e-02,  1.1355e-02,  5.6429e-03,  4.6536e-03,
          -1.6321e-02,  5.5873e-03, -2.1303e-02, -2.7695e-02,  5.2539e-03,
          -1.5976e-02,  3.3642e-02,  2.0237e-02,  4.0316e-03, -1.0614e-03,
          -3.5690e-02, -2.3902e-02,  6.3642e-03, -2.3785e-02,  1.1530e-02,
           1.3644e-03, -2.1295e-02,  3.5451e-02,  1.9020e-03,  2.6092e-02,
           2.5398e-02, -3.3438e-02,  7.8355e-03,  2.3183e-02, -1.9253e-02,
          -4.1655e-03, -1.3153e-03, -2.6027e-02,  8.4296e-03, -2.6870e-02,
           1.3800e-02,  1.8859e-02,  8.6965e-03, -1.2223e-02, -1.6536e-02,
          -3.8035e-02, -5.4344e-04, -9.8344e-03, -1.0920e-02,  1.1513e-02,
          -2.8946e-02,  2.2650e-02,  3.2784e-02, -9.8183e-03,  3.6586e-02,
           8.2565e-03,  5.3160e-03, -3.8563e-02,  5.8419e-03,  3.0611e-03,
          -1.9536e-02,  1.7767e-04, -3.1226e-04,  2.7637e-03,  1.6964e-02,
          -5.0241e-03, -1.3565e-02,  1.3070e-02, -4.6876e-03, -3.9702e-02,
          -2.6929e-02,  5.0427e-03, -1.4403e-02, -1.9635e-03, -3.8575e-02,
           2.0274e-02, -1.8636e-02,  2.5652e-03, -5.9269e-04,  1.4569e-02,
           8.0848e-03, -7.9521e-03,  1.6402e-02,  1.1506e-02,  8.1076e-03,
          -2.4139e-02, -7.4363e-04,  1.0810e-02, -7.1249e-03,  1.8609e-03,
          -2.6898e-02,  3.1031e-02,  5.4846e-04, -1.3719e-02, -1.6942e-02,
          -5.3016e-03,  1.8031e-02, -2.9218e-02, -1.4871e-02,  2.9076e-03,
           4.2341e-02, -1.5913e-02, -5.5334e-04, -1.9788e-02,  4.1935e-03,
           2.9370e-02,  8.4281e-03,  7.0092e-03, -2.4673e-02, -3.6672e-02,
           2.3859e-02, -1.5066e-02, -1.9217e-02, -2.0016e-02, -2.8673e-03,
          -1.7810e-02, -8.7313e-03, -1.9241e-02,  3.0000e-02, -4.3953e-03,
          -1.7212e-02, -1.3089e-02,  3.2465e-03, -1.2665e-02,  1.6542e-02,
           2.2442e-02, -1.6282e-02, -2.5422e-02,  3.5468e-03,  2.2640e-02,
          -1.6436e-03, -2.8261e-03, -7.6752e-04,  1.0601e-02, -1.1007e-02,
          -9.9676e-04, -8.3531e-03,  2.2900e-02, -4.9842e-06, -6.6404e-03,
          -1.4754e-02,  2.0739e-02, -6.2619e-03,  1.5010e-02,  1.6985e-02,
           3.9471e-03,  1.0883e-02, -2.9135e-02, -4.9661e-02,  1.1466e-02,
          -2.4343e-02, -7.1379e-03, -1.1354e-02, -1.5756e-03, -2.0319e-02,
          -2.1452e-02, -1.1414e-03, -3.7705e-03, -2.6171e-03,  4.4743e-02,
          -1.7674e-02,  1.2561e-02, -1.6960e-02, -2.1243e-02, -2.2181e-02,
          -9.8825e-03,  1.1571e-02, -9.3648e-03,  1.3205e-02,  1.3937e-02,
          -1.5059e-02, -2.5585e-02,  1.2255e-02,  7.8687e-03,  1.3515e-03,
          -1.2237e-02, -1.2154e-02, -2.2672e-03,  1.9382e-02, -9.6170e-03,
           5.6307e-03,  9.2451e-03,  1.7309e-02,  1.2296e-03,  1.5378e-02,
           1.1609e-02, -1.9482e-02, -2.2856e-02, -1.7041e-02,  3.4684e-02,
          -2.0773e-02, -2.3347e-02, -2.7910e-02,  4.0470e-03,  3.0587e-02,
          -4.6065e-03,  1.6222e-03,  6.8431e-03,  3.3005e-03, -8.0167e-04,
           3.9151e-02,  4.9551e-03, -3.7107e-02, -1.7840e-02, -3.3668e-02,
           1.5136e-03,  1.7528e-02,  1.6095e-02,  1.3975e-02, -2.8234e-02,
           1.2094e-02,  2.1834e-03, -2.6153e-02, -1.9860e-02, -1.4438e-03,
          -4.1013e-02, -1.4612e-03,  2.7056e-03,  1.0517e-02, -5.6474e-03,
          -1.2498e-02, -1.8174e-02,  9.5513e-03,  1.3264e-02,  1.5796e-02,
           8.0436e-03,  1.4827e-02,  1.1604e-02,  8.0781e-03, -9.1426e-03,
           3.0714e-02, -1.4680e-02, -6.1536e-03, -2.8793e-03,  2.1467e-02,
          -1.4597e-02, -1.6090e-02, -2.1639e-02, -1.4698e-02,  2.8987e-02,
           2.4174e-02, -7.5371e-03, -2.8380e-02, -4.8326e-02, -1.3378e-02,
          -2.7445e-02,  4.0141e-03,  5.6209e-03, -3.3957e-02,  1.0874e-02,
          -6.6689e-03,  5.1395e-03, -5.1854e-04,  9.1837e-04, -1.9791e-02,
          -2.2234e-02,  1.7854e-03,  3.3933e-02, -4.8100e-03,  1.4118e-02,
           1.0989e-02,  2.1667e-02, -5.5800e-03,  6.2014e-03, -7.4763e-03,
           2.4646e-02,  2.0992e-02,  1.3050e-02, -1.0464e-02,  1.9896e-02,
           2.2138e-02,  5.1566e-03, -5.3528e-03,  1.2811e-02, -7.2166e-03,
           5.2605e-03, -1.5048e-02,  3.2382e-02,  2.3238e-02, -4.9613e-03,
          -1.8296e-02, -1.5177e-02,  1.3074e-02, -3.9946e-03,  3.5318e-02,
           1.3346e-02,  3.1442e-02,  1.4095e-02, -8.7687e-04,  2.8983e-02,
          -5.1645e-03, -1.5000e-02, -6.9826e-03,  1.2878e-02,  2.0590e-02,
           4.0647e-02, -1.6323e-02,  4.3563e-03, -9.0200e-03,  1.0730e-02,
          -1.0008e-02,  3.0863e-02,  2.9152e-02,  4.4239e-03,  2.1501e-02,
           4.1024e-03,  5.4170e-03,  6.0564e-04, -1.2707e-02,  2.0096e-02,
           2.1101e-02, -3.1823e-02, -1.1490e-02,  1.2137e-02,  6.4358e-04,
          -3.5414e-02,  3.7202e-03, -7.3352e-03,  2.7319e-02, -6.5409e-03,
          -2.7413e-02,  4.4895e-02,  8.8492e-03, -1.8470e-02,  3.4439e-04,
           1.4886e-02,  6.4828e-03,  1.3926e-02, -1.0360e-02,  8.5755e-03,
          -7.2863e-03,  3.6262e-03, -4.7250e-02, -2.2355e-02,  3.4235e-02,
          -7.9231e-03,  1.5049e-02, -2.1195e-05, -4.6432e-03,  3.1786e-02,
           1.4330e-02, -1.1457e-02, -2.4259e-02,  1.0328e-02, -2.3558e-02,
          -3.8426e-03,  2.6503e-02,  2.0309e-02, -2.6786e-02,  7.3772e-04,
           1.1018e-02,  9.4253e-03, -2.7743e-02, -1.4512e-02,  1.0437e-03,
           2.1851e-02, -2.7477e-02, -7.8261e-03, -4.0022e-02, -2.4220e-02,
           8.8351e-03, -4.5905e-03, -3.7366e-03, -2.8813e-02,  1.1659e-02,
           3.3969e-02, -9.2793e-03,  3.1009e-02,  3.6210e-03, -1.5759e-02,
          -3.3660e-02,  3.1344e-02,  3.5206e-02]]], requires_grad=True)), ('pos_embed', Parameter containing:
tensor([[[ 0.0026, -0.0270,  0.0221,  ...,  0.0192, -0.0045,  0.0016],
         [-0.0050,  0.0160, -0.0367,  ..., -0.0241, -0.0051,  0.0112],
         [ 0.0362, -0.0243, -0.0233,  ...,  0.0101,  0.0145, -0.0433],
         ...,
         [-0.0055,  0.0072,  0.0374,  ..., -0.0444, -0.0036, -0.0374],
         [-0.0201,  0.0217, -0.0079,  ...,  0.0240, -0.0016,  0.0035],
         [-0.0028,  0.0093,  0.0027,  ..., -0.0254,  0.0078,  0.0179]]],
       requires_grad=True)), ('dist_token', Parameter containing:
tensor([[[ 1.8614e-02, -4.2918e-02, -2.1754e-02, -1.5521e-02,  8.7551e-03,
           3.2876e-02, -1.2670e-02, -2.1066e-02,  3.6400e-02, -4.7751e-03,
           1.7023e-02,  1.4202e-03, -2.2992e-03, -2.6711e-02, -6.1295e-03,
           1.4145e-02, -1.0661e-02,  8.9004e-03,  8.5099e-03, -2.6477e-03,
           9.8437e-03,  2.6018e-02,  5.6001e-03, -1.5526e-03, -2.5440e-02,
           1.4587e-02, -7.9651e-03, -9.0081e-05,  2.6308e-02,  6.4048e-03,
          -1.0909e-02, -8.6867e-03, -2.0034e-02,  1.4789e-02, -2.4953e-02,
          -1.1133e-02, -1.9133e-02,  1.6895e-03,  1.1610e-02,  2.1987e-02,
           7.1644e-03, -6.8962e-04,  2.0474e-03, -2.2710e-03, -2.7712e-02,
          -2.9377e-02,  1.4177e-02,  5.1659e-02,  2.8587e-02,  7.9207e-03,
          -2.3095e-02, -1.2394e-02,  1.5038e-02,  3.0230e-02,  8.0235e-03,
          -1.1387e-02,  2.8181e-02,  6.3973e-03, -8.2343e-03, -1.9831e-02,
           2.2919e-02, -4.5537e-03, -2.4700e-03,  2.5130e-03, -3.6300e-03,
           2.9519e-03, -2.7086e-02,  4.8457e-03, -3.7737e-03, -1.7602e-02,
          -1.0428e-04,  8.4183e-03,  2.7992e-02,  5.1408e-03, -4.7280e-02,
          -1.0180e-02,  4.7081e-03,  3.0257e-02,  3.7055e-02, -1.1480e-02,
          -3.2714e-02, -2.1792e-02, -2.7758e-02, -2.6787e-02,  1.1192e-02,
           1.6596e-02,  5.4208e-03,  1.1356e-02,  2.0722e-02, -2.1942e-02,
           1.4804e-03,  2.6329e-02, -3.7346e-02, -3.9899e-04,  1.4393e-02,
           6.7880e-04, -3.8664e-02,  1.2293e-02, -3.9298e-03,  3.0027e-02,
          -1.1133e-02, -2.4550e-02,  1.0910e-02, -2.2507e-02,  1.1591e-02,
           3.0013e-03,  1.5124e-02,  9.1807e-03, -1.8301e-02, -1.4737e-02,
           2.7426e-02,  4.3785e-02, -4.3064e-02, -8.8499e-03,  6.3230e-03,
           1.6048e-02, -1.8933e-02, -9.2964e-03,  7.4008e-03, -6.7193e-03,
          -1.2507e-02, -5.9711e-03,  1.5718e-02, -2.8395e-02, -2.3188e-03,
          -2.9037e-02,  9.4958e-03, -3.8794e-02, -2.4543e-02,  2.7389e-03,
           5.7627e-03,  3.3961e-02, -6.0403e-03, -2.9620e-02,  1.2330e-02,
           2.7201e-04,  7.7618e-03, -2.2364e-03, -1.3607e-02, -3.6742e-02,
          -2.6135e-02, -7.8628e-04, -2.3962e-02, -7.3896e-03, -2.1829e-02,
           1.5631e-02,  5.5160e-03,  1.0160e-02, -6.3116e-03,  3.9025e-02,
           4.0209e-02, -1.4060e-02,  2.5325e-02,  1.9613e-03, -2.4413e-02,
           2.5670e-02,  8.1660e-03, -3.4586e-02, -2.9439e-02,  1.4295e-02,
          -1.2837e-02, -1.0902e-02,  1.1103e-02, -8.8059e-03, -1.6267e-02,
          -2.4319e-02,  1.6489e-02,  1.5740e-02,  8.1399e-03,  3.8028e-03,
           5.4663e-02,  1.4055e-02,  1.7022e-03,  7.0810e-03,  2.4203e-02,
          -3.7843e-02,  2.8819e-03,  3.3003e-02, -8.0655e-03, -5.7525e-03,
           2.1681e-02, -2.3876e-02, -9.7624e-03,  2.2243e-02, -4.3436e-02,
          -5.5002e-03, -8.0334e-03,  3.2189e-02,  2.8037e-02, -3.7039e-02,
          -3.8547e-02, -5.3406e-03, -6.9185e-03,  2.6681e-02,  1.1398e-03,
           6.2297e-03, -1.4373e-02,  7.7782e-03,  4.5527e-03,  4.1731e-02,
          -2.2758e-02,  1.1430e-03,  2.1480e-02,  3.4743e-02, -1.2679e-02,
           1.0537e-02, -1.2907e-02, -9.7993e-03,  7.8379e-03,  1.7359e-02,
           1.7597e-02,  2.6127e-02, -8.6081e-03, -3.6155e-03, -1.6608e-02,
           2.5196e-02,  2.5228e-02,  1.6858e-02,  8.5752e-03,  4.9947e-03,
          -1.3682e-02,  2.0815e-03, -1.8693e-03, -7.1597e-03,  1.8432e-02,
          -5.2817e-03,  4.0304e-02,  1.1947e-02,  1.3900e-02, -4.1956e-03,
           6.2793e-03, -1.0751e-02, -1.2842e-02,  2.9030e-02, -1.4900e-03,
           4.3262e-02, -8.8587e-03,  1.7494e-02,  4.7512e-02,  1.6947e-02,
           1.1450e-02, -2.8238e-02, -1.0426e-02, -2.5651e-02,  3.5226e-03,
          -1.3369e-02,  2.1488e-02,  1.5907e-04,  3.4494e-03,  2.2372e-03,
           2.4987e-02, -1.9726e-02,  1.0350e-02,  2.6125e-02, -9.2110e-03,
           1.5042e-02, -5.3728e-02,  2.3950e-02,  2.9261e-02, -3.4767e-02,
          -2.4107e-02,  9.7133e-03,  5.3175e-03,  2.2358e-04,  1.7131e-02,
          -7.7584e-03, -2.7896e-02,  3.9434e-03, -7.8252e-04, -1.3259e-02,
           1.7083e-02, -7.0680e-03,  1.1625e-02,  2.3946e-02, -8.4635e-03,
           9.5935e-03,  2.1051e-02,  5.7232e-02,  1.0272e-03,  5.0103e-03,
           1.0220e-02,  1.8717e-02, -1.6783e-02, -2.5376e-02, -8.0248e-03,
           2.1685e-02, -8.3909e-03,  5.7426e-05,  1.5814e-02,  3.0437e-02,
           4.0459e-02,  6.8686e-03,  1.4358e-02, -6.3505e-03, -2.5558e-02,
           3.4922e-02,  8.4992e-03, -1.6312e-02, -3.3363e-02, -9.8156e-03,
          -2.4595e-02, -2.6195e-02, -3.5023e-03, -1.3880e-02,  2.7846e-02,
           2.7272e-02,  4.3946e-03,  2.9943e-02, -7.4783e-03,  8.6951e-03,
           3.4676e-02,  2.1482e-02, -3.9276e-02,  1.8967e-02,  5.0972e-03,
          -6.7172e-03,  1.6195e-02, -8.9812e-03, -1.6168e-02, -2.5739e-02,
          -1.0419e-02,  1.3189e-02,  7.7703e-03, -2.5429e-02,  6.4889e-03,
          -1.4168e-02,  2.2864e-02, -4.2208e-03,  1.6058e-02, -1.2248e-04,
          -2.7273e-02, -3.5117e-02, -2.0125e-02, -1.5415e-02,  1.0763e-03,
          -1.5067e-02,  1.7308e-02,  9.8859e-03,  7.7870e-03, -4.8348e-03,
          -1.1210e-02,  1.7506e-02,  1.0647e-02,  2.7759e-02, -2.5474e-02,
          -1.3651e-02, -1.6823e-02,  2.0930e-02,  1.2160e-02,  2.6786e-02,
          -2.7546e-02, -2.4812e-02,  6.4675e-03, -1.9840e-02,  1.9900e-02,
          -1.0857e-02, -1.6616e-03,  2.8835e-02,  3.7961e-02, -2.8482e-02,
           2.8486e-02,  3.3307e-03,  2.9717e-02, -3.1960e-02,  1.8169e-02,
           1.2836e-02, -2.3316e-02,  1.5249e-03, -3.6803e-03, -5.2275e-02,
           2.8625e-02,  1.2076e-02,  4.0116e-02, -2.3718e-02,  3.5982e-02,
           1.3868e-03,  7.5083e-03,  1.8825e-02, -1.1423e-02,  9.0036e-03,
          -1.2311e-02,  1.9890e-02,  4.8912e-03,  6.1210e-03, -3.1100e-02,
          -2.3777e-03,  7.9291e-04,  3.3117e-02,  1.1949e-02,  2.7974e-02,
          -7.5785e-03,  1.8089e-03, -2.0127e-02,  2.3442e-02, -2.2764e-02,
           1.9768e-02, -1.2402e-02,  9.3676e-03,  1.8125e-02, -1.2582e-02,
          -2.4325e-02,  1.0337e-03, -2.7122e-02, -1.8213e-02,  1.0502e-02,
           1.2928e-02, -1.3382e-02,  9.6269e-03, -3.7106e-02,  2.6514e-02,
           1.1077e-02,  1.1230e-02, -2.1564e-02, -1.0499e-02, -7.0349e-03,
          -9.5491e-03, -3.7114e-02,  2.2129e-02, -7.1018e-03,  4.5243e-03,
           1.2172e-02,  1.2132e-03,  2.5237e-02, -3.4584e-03, -2.1941e-02,
           1.1559e-03,  2.5557e-03,  1.9112e-02, -1.2420e-02, -3.5725e-02,
           6.8611e-03,  2.2077e-02,  8.9309e-03,  8.4089e-03, -1.9067e-02,
          -1.3512e-02, -3.1562e-03, -2.2686e-02,  8.1962e-03, -1.6765e-02,
           2.9022e-03, -4.2768e-03, -4.6078e-03,  2.5162e-03,  2.8511e-03,
           5.6909e-03,  4.0638e-04, -1.7900e-02, -7.6710e-03,  8.4787e-03,
           1.5083e-02,  1.1815e-02,  5.1327e-03, -1.8372e-02,  3.2706e-02,
          -9.8424e-03, -2.0151e-02, -3.1646e-02, -2.6422e-03, -1.8223e-02,
          -1.9352e-02, -5.7332e-03,  1.5284e-02, -8.6260e-03,  3.4774e-02,
           2.6817e-02,  1.2915e-02, -3.9656e-02, -3.6634e-03, -2.2862e-02,
           4.4826e-02, -2.8815e-03,  2.1426e-02, -2.0206e-05, -2.2893e-03,
           3.1146e-03,  2.1208e-02,  3.6990e-03,  8.9077e-03, -2.2026e-02,
          -1.5088e-02, -1.5129e-02, -1.2880e-02, -2.5848e-02,  4.4767e-02,
          -1.9756e-02, -2.8635e-02,  5.3657e-03,  3.5510e-04, -1.6814e-02,
           2.5475e-02, -1.1179e-02,  1.0616e-02,  1.8612e-02, -2.0122e-02,
          -1.3252e-02, -2.2929e-04, -4.9330e-04,  2.9583e-03, -1.1002e-02,
           2.1539e-02,  3.0645e-04, -1.5314e-02, -1.2892e-02, -1.4829e-03,
           1.9487e-03, -3.5421e-02, -1.2397e-02, -3.6063e-02, -1.7958e-02,
           2.6366e-02, -2.6901e-02,  4.4167e-02, -1.4142e-02,  2.6980e-03,
          -9.2479e-04,  5.5249e-03,  5.9381e-03,  1.6657e-02, -4.5824e-02,
           7.1554e-03,  1.6978e-03,  1.8858e-02, -7.8133e-03, -1.3496e-02,
          -1.2453e-03, -2.8492e-02, -2.7312e-02, -1.2558e-02,  1.7071e-02,
           1.1705e-02,  1.4272e-02, -3.9687e-02, -1.9165e-03, -3.5238e-02,
           1.4324e-02,  3.4706e-03, -9.2664e-03, -3.9423e-02,  3.2108e-02,
           1.3199e-02, -2.1051e-02, -2.9768e-02, -2.5178e-02,  6.6284e-03,
          -1.8731e-02,  1.7988e-02, -2.7466e-02, -1.1046e-02,  5.7739e-03,
          -3.1140e-02, -2.4864e-02, -1.6303e-02, -1.9836e-04,  6.0883e-03,
          -4.9750e-03,  2.8409e-02,  1.6440e-02,  3.1478e-03, -1.9472e-02,
          -4.7134e-02, -2.1483e-02, -1.7129e-02,  5.4794e-03, -2.4115e-02,
          -1.1012e-02,  1.0398e-03, -6.8857e-02,  1.7966e-02,  3.0343e-02,
           2.6725e-03, -2.9374e-02, -8.3026e-03,  2.0918e-02, -5.9731e-03,
           1.3723e-03, -2.5964e-02, -1.2869e-03, -2.2497e-02, -3.6594e-02,
           2.9053e-02, -3.6553e-03, -7.2739e-03, -5.0888e-02,  9.0439e-03,
          -2.1808e-02,  1.9446e-02, -1.2577e-02,  2.4061e-02,  1.5985e-02,
          -1.3642e-02, -7.5638e-03,  6.3011e-03,  2.1515e-02, -6.6671e-03,
           1.3260e-02, -3.7149e-03,  2.3483e-02, -2.8026e-02,  1.9468e-02,
          -6.8442e-03, -8.5080e-03, -6.0889e-03, -2.4929e-03, -1.9111e-02,
          -2.0933e-02,  8.5479e-03, -2.6881e-02,  1.2435e-02,  3.0432e-02,
          -3.5226e-03,  9.6909e-04, -3.9961e-02, -5.7549e-03,  3.3909e-02,
          -1.3632e-02,  5.2988e-03, -1.2040e-02, -2.1854e-02,  3.5111e-02,
          -3.5355e-03,  2.6306e-02,  1.9841e-02, -5.1871e-03, -2.5385e-03,
           4.8200e-02,  3.7646e-02,  2.3351e-02, -1.9500e-02,  1.2631e-02,
          -1.1437e-02, -1.5701e-02,  6.0328e-04, -1.2576e-02, -1.0872e-02,
          -7.6018e-03, -5.8924e-03, -3.1955e-02,  2.7832e-02,  3.2868e-02,
           1.5428e-02, -1.0241e-02, -2.2200e-02, -9.0841e-03, -2.1089e-04,
           1.0855e-02, -1.1748e-02, -1.9407e-02,  7.9762e-03,  9.2345e-03,
          -4.4379e-03,  6.3601e-03, -1.8842e-03, -3.7185e-03,  2.1704e-02,
          -4.6425e-03,  1.2620e-02,  7.9387e-04,  5.7376e-03, -1.5266e-03,
          -3.0581e-02, -2.9848e-02,  3.4129e-02,  6.7343e-02, -2.4749e-02,
          -6.2792e-03,  1.8193e-02,  2.5961e-03,  4.2981e-02, -1.5561e-02,
          -2.7902e-02,  1.2300e-02,  2.9799e-02, -3.8829e-03, -6.0609e-03,
           2.7045e-02, -1.3142e-02,  2.1555e-02, -9.3954e-03,  2.7411e-02,
          -2.5203e-03,  4.8223e-02, -1.7837e-02,  6.4111e-03, -1.0189e-02,
          -2.8570e-02,  1.0744e-02,  2.1305e-02, -1.1984e-02,  2.0510e-03,
           4.5245e-03, -9.5484e-03,  3.0883e-02, -3.9240e-02,  7.8147e-03,
           3.4015e-02, -3.9037e-02,  4.4717e-03,  3.8965e-04, -2.8644e-02,
           1.0327e-02,  6.9031e-03, -8.6868e-03, -3.3165e-02,  9.9748e-03,
           3.0679e-03, -1.6074e-02,  1.8559e-02,  4.0387e-03,  1.3052e-02,
           6.0130e-03,  1.3015e-02, -3.3246e-02, -1.2216e-02, -9.1414e-03,
           8.0863e-03,  2.9197e-02,  3.7811e-04,  3.3816e-02,  6.2971e-03,
          -4.8462e-03,  1.4239e-02, -4.7691e-02,  2.6908e-02,  4.0999e-03,
          -1.3940e-02, -2.2366e-02, -8.4342e-03,  1.4864e-02, -8.6313e-03,
           1.5022e-02,  1.1149e-03, -2.0719e-02, -8.8855e-03, -6.3864e-03,
          -3.2213e-02,  4.5703e-02, -1.9536e-02, -1.9125e-03,  1.1227e-02,
          -7.5822e-03,  2.2336e-02, -3.5191e-02,  2.9273e-02, -9.3969e-03,
          -4.1082e-03,  2.1804e-02,  1.0961e-02, -4.6867e-03,  4.2224e-02,
           3.8369e-02, -2.0011e-03,  1.5105e-02, -1.1969e-02, -2.4716e-02,
          -5.7476e-03, -2.7927e-03,  1.3596e-02, -1.8766e-02, -2.0823e-02,
          -2.2245e-02,  3.1727e-02, -8.7847e-03,  6.5496e-03,  2.2337e-02,
          -8.1767e-04,  6.0210e-03,  1.1512e-02]]], requires_grad=True))])
_buffers=OrderedDict()
_non_persistent_buffers_set=set()
_backward_hooks=OrderedDict()
_is_full_backward_hook=None
_forward_hooks=OrderedDict()
_forward_pre_hooks=OrderedDict()
_state_dict_hooks=OrderedDict()
_load_state_dict_pre_hooks=OrderedDict()
_modules=OrderedDict([('patch_embed', PatchEmbed(
  (proj): Conv2d(1, 768, kernel_size=(16, 16), stride=(16, 16))
)), ('pos_drop', Dropout(p=0.0, inplace=False)), ('blocks', ModuleList(
  (0): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (1): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (2): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (3): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (4): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (5): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (6): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (7): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (8): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (9): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (10): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (11): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
)), ('norm', LayerNorm((768,), eps=1e-06, elementwise_affine=True)), ('pre_logits', Identity()), ('head', Linear(in_features=768, out_features=1000, bias=True)), ('head_dist', Linear(in_features=768, out_features=1000, bias=True))])
num_classes=1000
num_features=768
embed_dim=768
default_cfg={'url': 'https://dl.fbaipublicfiles.com/deit/deit_base_distilled_patch16_384-d0272ac0.pth', 'num_classes': 1000, 'input_size': (3, 384, 384), 'pool_size': None, 'crop_pct': 1.0, 'interpolation': 'bicubic', 'mean': (0.485, 0.456, 0.406), 'std': (0.229, 0.224, 0.225), 'first_conv': 'patch_embed.proj', 'classifier': 'head'}
