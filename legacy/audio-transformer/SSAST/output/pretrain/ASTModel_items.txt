training=True
_parameters=OrderedDict([('cls_token', Parameter containing:
tensor([[[ 7.8290e-04, -1.4936e-02, -1.8851e-02,  2.5060e-02,  3.8608e-02,
           9.8007e-03,  1.2775e-02, -9.4398e-03, -8.0734e-03, -9.4864e-03,
           2.2573e-02,  4.2026e-02, -6.3723e-03, -2.2697e-03, -6.2001e-03,
           2.2838e-02, -5.5760e-02,  1.0736e-02, -1.9484e-02, -1.0303e-02,
          -9.0456e-03,  1.8076e-02, -1.0969e-02,  1.0666e-02,  1.7268e-02,
           1.1445e-03,  1.6868e-02,  3.5207e-02, -1.2594e-02, -2.9302e-02,
           1.3919e-04, -2.5050e-02, -3.1857e-03, -3.6474e-02,  1.7908e-02,
           2.1030e-02, -3.0925e-02, -2.7175e-02,  1.1562e-02,  1.4174e-02,
           2.5220e-02,  5.9947e-03,  1.1252e-02, -8.7801e-03, -2.9121e-02,
           3.1451e-02, -3.2554e-02, -6.0265e-03,  3.4271e-02, -7.4808e-03,
          -1.6654e-02, -3.6106e-02,  3.2492e-02,  1.0391e-02, -1.3792e-02,
          -6.5288e-03,  2.3758e-02, -1.3262e-02,  3.2451e-03,  8.3579e-03,
          -1.9756e-02, -4.1284e-03,  2.9683e-03, -4.1294e-03,  3.0131e-02,
           1.3413e-02,  1.3785e-02,  1.6083e-02, -1.4214e-02,  7.9520e-03,
          -3.2320e-02, -5.6131e-02,  1.9591e-02, -1.4864e-02,  1.6556e-02,
          -3.6466e-02,  7.6676e-03, -2.4808e-02, -2.1779e-02, -2.0143e-02,
           1.7085e-02, -1.0352e-02,  3.6288e-03, -3.5410e-03, -1.8821e-02,
          -4.5432e-02,  2.5461e-02, -3.8042e-02, -2.9456e-02,  1.1835e-02,
          -1.0082e-02, -1.1977e-02,  8.4203e-04, -9.3517e-03,  4.1031e-02,
           2.4706e-02, -1.5058e-02,  2.6105e-03,  3.1683e-02, -8.1472e-03,
           1.5373e-03, -8.2839e-03, -4.6065e-03,  1.8500e-02,  1.5349e-02,
          -2.5867e-03,  2.1113e-02,  1.5275e-03, -1.4760e-02, -1.6171e-02,
           2.7215e-02,  4.2973e-02,  4.7640e-02, -5.1530e-03, -3.3235e-02,
          -1.5537e-02,  1.2925e-02,  1.9643e-02,  2.7293e-03,  1.7413e-02,
           4.1131e-03, -8.1433e-03, -1.6516e-02,  3.8144e-02, -9.5391e-03,
           1.1903e-02, -4.5684e-02, -2.3087e-02,  1.0380e-02, -4.8499e-03,
           1.5066e-02, -1.0599e-02, -1.7662e-03,  1.4003e-03,  1.4030e-02,
          -2.8637e-02, -1.1191e-02, -2.4781e-03,  2.7830e-02, -1.9049e-02,
          -3.3224e-03, -6.7491e-04,  1.8861e-02, -4.9532e-02,  8.5731e-03,
          -2.8082e-02,  2.7900e-02,  1.3195e-02,  4.3843e-04, -1.6882e-02,
          -1.8654e-02,  4.3672e-02, -1.5500e-03,  4.8550e-03,  7.1560e-04,
          -4.9493e-03, -7.4619e-03,  1.4475e-02,  9.8855e-03,  6.3144e-03,
          -2.1958e-02,  2.6498e-02, -8.0880e-03,  1.7118e-02,  4.5142e-03,
          -7.6170e-03,  2.5790e-02, -6.7053e-03,  3.7075e-03, -1.3893e-03,
          -1.9782e-02,  1.0044e-02, -2.8864e-02, -2.6621e-02,  1.3223e-02,
          -1.2511e-03, -1.7707e-03,  3.3929e-03,  3.7621e-03, -1.7231e-03,
           1.0159e-02,  6.5205e-04, -2.3135e-03,  9.2932e-03, -9.0226e-03,
          -1.3563e-02, -1.3035e-02,  2.4399e-02,  1.5122e-02,  1.5926e-02,
          -1.5440e-02,  1.4386e-02,  2.0662e-02,  1.0829e-02,  1.3094e-02,
           9.1151e-03,  1.7836e-02,  1.2137e-02, -7.2744e-03, -7.7136e-03,
           1.0315e-03, -2.6268e-02, -2.8444e-02, -1.8522e-02,  1.1291e-02,
          -1.5123e-02,  3.1275e-02,  1.5000e-02, -2.4872e-02, -4.9517e-03,
           5.1857e-03, -3.3294e-02,  1.6819e-02,  3.1750e-02,  4.7594e-02,
          -1.2225e-02, -3.3104e-02,  1.3406e-02, -1.6996e-04, -3.2358e-02,
          -3.3264e-02, -1.4606e-02, -6.0612e-03, -4.2005e-02,  1.1470e-02,
          -1.6891e-02,  1.9111e-02, -3.6121e-02, -1.4701e-02,  5.1252e-03,
          -3.0572e-02, -2.1004e-02,  3.8299e-02, -1.1929e-02, -3.2056e-02,
           1.2541e-02, -1.4226e-02, -1.2537e-02, -1.9400e-04,  1.2556e-02,
          -2.6547e-03, -2.1470e-02,  5.9769e-03,  2.6910e-02, -1.5997e-02,
           4.6939e-02, -2.0964e-02, -3.6965e-02, -6.4033e-04,  2.2635e-02,
          -8.2340e-03,  4.9910e-03, -2.0883e-02,  4.3833e-03, -1.0360e-02,
           4.6117e-02,  1.4995e-02,  2.5753e-02,  6.0642e-03,  8.8110e-03,
           1.1924e-02,  2.5913e-02,  1.7388e-02, -3.8669e-02, -5.1916e-03,
          -3.7170e-04, -1.3865e-02,  1.2890e-02, -1.7582e-03, -9.1831e-03,
           2.1775e-02, -6.9412e-04, -8.2756e-03, -1.7501e-02,  3.2213e-02,
          -1.5924e-02,  3.8735e-03,  1.8590e-02,  1.2026e-02, -1.3750e-02,
          -7.6546e-03,  2.6996e-02,  2.5413e-02, -2.1157e-02, -2.7047e-02,
           1.3777e-02, -1.1449e-03, -3.9646e-03,  1.9205e-02,  3.0598e-02,
           1.2993e-02,  8.5412e-03,  8.3733e-03, -2.3464e-03,  1.3077e-02,
           1.6641e-02,  3.7516e-02, -1.5133e-02,  2.3720e-02,  1.5564e-02,
           2.2576e-02, -1.5573e-02,  4.7626e-02, -1.5914e-02, -4.5423e-03,
          -2.7951e-02,  2.0853e-04,  1.5476e-02,  2.6505e-02,  1.2473e-02,
           1.8750e-02, -1.8743e-03,  1.2974e-02, -2.9928e-02,  1.3196e-02,
          -4.4501e-02,  1.8499e-02, -1.1382e-02, -2.4862e-02, -4.2997e-03,
           3.0053e-02,  1.0821e-02,  3.7521e-03,  3.0475e-02, -1.4327e-02,
           4.2995e-03, -3.1047e-02,  1.8121e-02,  5.9855e-05,  3.3317e-02,
          -3.7973e-02,  2.4291e-02,  6.3811e-03, -7.6833e-03,  3.9309e-02,
           9.5616e-03, -2.6809e-02,  3.4144e-03, -4.9696e-03, -2.0295e-02,
           2.0629e-02, -1.8805e-02,  3.4360e-02, -2.3731e-02, -6.5243e-02,
          -2.4349e-02,  1.3908e-02,  3.6153e-02,  6.0793e-03,  1.0646e-02,
           1.8221e-03,  1.6397e-02, -8.2177e-03,  3.4077e-02,  1.3397e-02,
           2.4387e-02,  1.7681e-02, -7.3730e-03,  5.4109e-03,  1.3348e-02,
          -7.1051e-03, -9.1883e-03,  1.3319e-02,  3.0364e-02,  4.3442e-02,
          -1.4198e-02,  7.8896e-04,  2.6607e-02,  7.4497e-03,  1.0992e-03,
          -1.0299e-02, -5.8726e-03,  1.3937e-04, -2.8759e-02, -1.8639e-03,
          -8.4045e-03, -2.9948e-02, -1.4084e-02,  3.9133e-02,  9.1668e-03,
           2.8097e-03,  1.3495e-02,  3.3993e-03,  1.0916e-02,  2.0900e-02,
          -1.3135e-02, -2.6103e-02,  1.6041e-02,  2.3656e-04,  3.2228e-02,
           1.4837e-02,  1.1283e-03, -1.7049e-02, -1.0105e-02,  1.2786e-03,
           1.5947e-02,  2.8666e-03, -8.9212e-03,  2.8840e-02, -4.0067e-02,
           3.4679e-02,  8.8922e-03,  3.4613e-03,  9.0258e-03, -4.4504e-03,
          -1.9392e-03,  9.5411e-03, -5.4795e-03,  3.7631e-02,  4.7832e-03,
          -1.9918e-02,  2.0591e-02, -1.3360e-02, -2.7492e-02,  2.7216e-02,
          -2.0548e-02,  4.4879e-03,  2.3671e-02, -2.2802e-02,  6.2367e-03,
          -1.5944e-02,  8.9473e-03, -1.9344e-02, -1.8953e-02,  1.1833e-02,
          -1.2738e-02, -1.6468e-02, -3.1669e-03,  1.7777e-03, -1.5863e-02,
           9.4105e-03, -1.1627e-02, -2.1360e-02,  3.1737e-02,  2.0646e-02,
          -1.3846e-02, -5.1783e-02,  1.2674e-02,  1.8099e-02,  9.2621e-03,
          -1.6118e-02,  9.0962e-03,  2.6878e-02, -4.7348e-03, -1.7844e-02,
          -1.1400e-03,  3.4725e-03, -8.6811e-03,  2.0383e-02,  2.2717e-02,
          -1.8740e-02,  2.7589e-04, -1.8736e-02,  2.4137e-02,  4.9074e-03,
           1.5690e-02, -9.3729e-03, -1.7375e-02,  1.5880e-02,  2.7563e-02,
          -1.7358e-03, -1.7395e-02,  3.7000e-02, -3.1597e-02, -2.6836e-02,
          -2.3975e-02,  1.3183e-02, -2.7998e-02,  1.2162e-02, -3.1401e-02,
           2.0207e-02, -1.8949e-02, -4.7269e-02,  1.2963e-03,  4.6611e-02,
           1.7629e-02, -5.3100e-02, -4.0148e-03, -2.7154e-02, -1.7235e-02,
           2.1386e-02, -1.5059e-02,  1.4337e-02,  1.2758e-02, -1.2401e-02,
           3.2580e-02, -2.3717e-03,  1.9410e-02, -1.4654e-02,  2.4465e-02,
           6.3117e-03,  6.7600e-03,  2.1755e-02, -3.1615e-03, -1.2589e-02,
           1.2622e-02, -5.6328e-03,  7.8035e-03, -2.4621e-02, -6.5965e-03,
          -6.6672e-03,  2.2597e-02,  1.0483e-02, -8.0302e-04, -6.6529e-03,
           5.0885e-03, -4.9017e-03, -2.6776e-02, -7.3492e-03, -5.3471e-03,
           1.0350e-02, -2.6544e-02, -1.5526e-02, -1.0968e-02,  2.9161e-02,
          -3.1171e-02,  9.1729e-04,  5.6766e-03, -7.0453e-03, -1.1974e-02,
           2.2601e-02, -1.6488e-03, -2.4300e-02, -2.8261e-02,  7.4698e-03,
          -9.1669e-03,  1.6917e-02, -1.9832e-02,  2.2464e-02,  1.9245e-02,
          -2.4195e-02, -5.5976e-04,  1.3702e-02,  1.0431e-02, -3.0377e-02,
          -2.4034e-02, -4.4869e-03,  2.9517e-02,  9.6137e-03,  2.1303e-04,
           4.6389e-03,  1.7151e-02,  4.2726e-02, -5.8686e-03, -2.6926e-02,
           2.3514e-02,  1.8106e-02,  2.9024e-03, -2.2596e-03, -4.9118e-03,
          -5.8824e-03, -8.4654e-03,  6.1230e-03, -9.2335e-03,  1.3833e-02,
          -1.0609e-02, -4.1995e-02, -2.6513e-02,  2.9298e-02,  2.4251e-02,
           1.8619e-02, -2.8661e-03, -1.1952e-02, -1.1349e-02, -2.8435e-03,
           1.9466e-02,  1.6045e-02,  5.7796e-03, -4.8797e-02, -2.6618e-02,
          -1.9682e-02, -2.7545e-02,  8.5675e-03, -6.2988e-03,  7.7488e-04,
          -1.0535e-02,  1.9757e-02,  4.6968e-03,  1.7874e-02,  2.3527e-02,
           1.9285e-02, -1.1937e-02,  3.6569e-03, -1.4004e-02, -2.0885e-03,
           2.3862e-02,  3.1962e-02, -8.1444e-03,  1.0311e-02, -1.4653e-02,
          -2.2716e-02,  3.4801e-02, -1.8424e-02,  3.0216e-03,  4.2763e-03,
           3.5487e-02, -8.0504e-03, -1.2285e-02,  3.6594e-03,  8.4478e-03,
          -2.6884e-03,  1.8015e-02,  4.7118e-02, -4.2910e-03,  6.5027e-04,
           7.6439e-03,  2.1691e-02,  4.8039e-02, -3.5713e-02, -1.3011e-02,
           1.5370e-02, -1.8492e-02, -1.3550e-02,  6.8462e-04, -7.4178e-03,
           1.3179e-02, -1.4847e-02, -1.1162e-02, -9.4752e-03, -3.8697e-02,
           4.3408e-02, -2.8065e-02, -4.0633e-03, -1.0027e-02, -4.2644e-03,
           2.5670e-03,  2.4317e-02, -2.2162e-03, -4.7340e-02, -3.2024e-02,
           8.5387e-03,  2.1804e-02, -1.3272e-02, -3.6510e-02, -2.2941e-02,
          -8.6461e-03,  3.7710e-04,  1.1206e-02, -1.9835e-02, -1.9577e-02,
          -1.5143e-02, -1.4199e-03,  1.0425e-02,  4.2944e-03,  1.3405e-02,
           1.9410e-02, -4.0441e-03, -3.5210e-02, -2.7029e-02, -2.7781e-02,
           7.7156e-03,  1.8099e-02,  9.6788e-03, -6.7731e-03, -2.4451e-03,
          -9.1904e-03, -2.3213e-03, -1.0698e-02, -6.2982e-03, -1.1797e-02,
           5.6841e-03, -3.8199e-03,  1.6822e-02,  2.2013e-02, -1.2155e-02,
          -1.1022e-02, -1.0289e-02,  6.0001e-03, -2.6529e-03, -3.8338e-02,
          -2.3075e-02,  1.6493e-02, -4.0849e-03, -2.8352e-02, -2.1160e-02,
          -5.3418e-03, -9.5480e-04,  4.8520e-03,  7.0024e-03, -2.3048e-03,
           1.5860e-02, -2.6070e-03,  5.1554e-03, -4.4292e-02,  1.4577e-02,
          -2.5634e-02,  4.3973e-03,  4.4229e-03, -1.7301e-02,  2.4653e-03,
          -3.9630e-02,  4.6069e-03,  2.2505e-02, -4.0707e-03, -2.1547e-02,
          -1.9777e-02, -2.3521e-02,  4.0184e-02, -1.1271e-02, -9.7389e-03,
          -1.3375e-02,  2.0827e-03, -4.3014e-03, -1.4539e-02,  1.2290e-02,
           1.9377e-02, -4.2875e-03, -1.4099e-02,  1.8612e-02,  5.0095e-02,
          -1.7448e-02,  3.0447e-03, -2.2391e-02,  9.6210e-03, -1.3251e-02,
          -4.7423e-03, -9.9467e-03,  1.2982e-03,  3.0090e-03, -1.2648e-02,
          -8.8957e-03, -9.8927e-03,  2.3462e-04,  1.2530e-02, -5.6065e-04,
          -1.5498e-02, -2.1653e-02,  5.3053e-03, -4.2551e-02,  8.7675e-03,
           6.2635e-03,  4.6967e-03, -8.3446e-04,  1.2504e-02, -1.7265e-02,
          -2.8579e-02, -1.1747e-02, -1.9895e-02, -2.3487e-02, -1.2201e-02,
           6.0871e-03,  9.2510e-03, -1.0994e-02, -5.5539e-04, -2.4255e-05,
           1.9074e-02, -3.4082e-03,  2.5346e-02, -3.1504e-03,  1.0638e-02,
           1.9938e-02,  9.6083e-04, -4.1254e-02, -9.6545e-03,  1.3987e-02,
          -1.4113e-02, -1.6955e-02,  6.9776e-02, -2.2164e-02,  1.5114e-02,
          -2.0963e-02,  4.8598e-03, -5.3733e-03, -2.5401e-02, -2.1659e-02,
           6.5939e-03, -7.0594e-04,  2.6909e-02]]], requires_grad=True)), ('pos_embed', Parameter containing:
tensor([[[ 0.0139, -0.0319,  0.0154,  ..., -0.0341, -0.0141,  0.0023],
         [ 0.0043, -0.0332, -0.0112,  ..., -0.0218,  0.0170,  0.0087],
         [-0.0343, -0.0093,  0.0482,  ..., -0.0085,  0.0318, -0.0122],
         ...,
         [ 0.0160,  0.0015,  0.0221,  ..., -0.0115,  0.0031,  0.0263],
         [ 0.0038, -0.0253,  0.0181,  ...,  0.0084, -0.0155,  0.0051],
         [ 0.0124, -0.0338,  0.0204,  ..., -0.0173,  0.0095,  0.0064]]],
       requires_grad=True)), ('dist_token', Parameter containing:
tensor([[[ 1.3624e-02,  4.3554e-02, -7.2701e-03, -1.7781e-02,  9.0942e-04,
          -9.8481e-03,  1.5291e-02,  5.0856e-03, -5.2518e-02, -1.2363e-02,
          -2.4354e-02, -1.7179e-02,  1.3991e-02, -1.3142e-02, -8.4057e-04,
           3.1615e-02, -5.3365e-03, -4.1404e-02, -5.7039e-03,  4.4746e-03,
           2.5833e-02, -3.2071e-03, -4.7226e-03,  6.8484e-03,  1.0878e-02,
          -1.6277e-02, -3.5713e-02,  3.8011e-02,  1.8171e-02, -1.3237e-02,
           1.4683e-03,  3.6921e-02,  2.9570e-02, -1.0210e-02,  1.3097e-02,
          -3.4815e-02,  4.2942e-03,  2.5435e-02, -2.8562e-02,  1.4595e-02,
          -2.3415e-02, -3.9123e-02, -1.5866e-02,  1.3567e-02, -2.3637e-02,
          -4.1214e-02,  6.4042e-03,  2.9509e-03,  1.8945e-02,  2.0463e-02,
           2.6855e-02, -3.2019e-02,  6.4921e-03,  1.5937e-02, -6.0255e-03,
          -3.5248e-02,  1.0560e-02, -4.6567e-03,  2.9961e-02, -2.7864e-02,
           8.1324e-03,  1.3638e-02, -1.1572e-02, -3.5398e-03, -2.6688e-02,
          -1.8936e-02, -9.2406e-03, -1.8902e-02, -1.3389e-02, -1.9406e-02,
           2.0399e-02, -5.1448e-03, -1.5912e-02, -3.0583e-02, -1.8695e-03,
           2.6372e-02, -4.1849e-03,  1.0377e-02,  2.1206e-02,  4.9416e-03,
          -2.1064e-02,  1.6957e-02, -3.3047e-02, -2.9061e-02,  2.3459e-02,
           5.0884e-03,  3.9400e-03,  1.7493e-02, -4.8805e-03, -6.2660e-03,
           2.3901e-02,  1.5187e-02, -1.1333e-03, -2.0824e-02, -2.0341e-02,
          -2.9128e-02, -1.3584e-02,  3.9726e-02, -1.0150e-02, -2.0201e-03,
           1.3429e-03, -1.6578e-02, -3.4113e-02, -1.4996e-02, -1.1099e-02,
          -6.7868e-03,  9.9783e-03, -2.2267e-02,  8.4444e-03, -5.0970e-02,
           6.1131e-03, -1.1381e-02,  3.7508e-02,  2.1540e-02, -2.7491e-02,
          -1.7299e-02,  3.9466e-02, -9.9009e-03, -8.7217e-03, -3.7922e-03,
           2.2885e-02, -3.1205e-02,  1.6156e-02, -4.9980e-03,  1.0032e-02,
          -3.8973e-04,  2.9485e-03, -1.6309e-02,  3.3734e-02, -1.9129e-02,
          -1.1539e-02, -2.6762e-02,  4.9756e-03,  2.0462e-02, -9.0001e-03,
           1.0121e-02, -1.7534e-02, -6.5179e-03,  1.3742e-02,  1.7007e-02,
           1.9209e-02,  4.0394e-03, -9.3741e-03,  5.1902e-03,  2.4964e-02,
          -9.0996e-03, -3.2446e-03,  4.0714e-02, -2.1894e-03, -3.1640e-02,
          -2.2957e-02, -3.7326e-02,  5.8447e-03, -2.9912e-02, -1.1053e-02,
          -8.5682e-03,  3.6809e-02, -7.5863e-03, -1.3048e-02, -7.5871e-03,
           1.8473e-02,  1.7640e-02,  3.2890e-03,  8.3826e-03, -1.6186e-03,
          -3.5240e-02, -2.1320e-02,  2.0600e-02,  4.5029e-04, -2.3883e-02,
          -1.2499e-02, -1.6901e-02, -3.4543e-03, -3.4967e-02, -2.9641e-02,
           1.0826e-02, -1.8011e-03, -2.2900e-02,  1.8545e-02,  4.6753e-03,
          -2.6356e-04,  2.1726e-02,  1.0368e-02, -1.6782e-02, -6.1931e-03,
          -2.2974e-03, -3.6532e-03,  1.0212e-02, -3.6218e-02,  3.4949e-02,
           3.4379e-02, -3.3899e-02,  7.4978e-03, -1.2372e-03, -7.1444e-03,
           3.6513e-02,  7.8571e-03, -1.7532e-02,  6.1716e-03, -3.0955e-02,
           2.0069e-02,  1.6419e-02,  1.1915e-03,  1.8073e-02, -1.7590e-03,
           2.5374e-02, -2.1311e-02, -2.3687e-02,  1.6200e-02,  4.0737e-02,
           1.8478e-02, -3.2042e-03,  9.4793e-03, -9.3087e-03, -1.4816e-02,
           1.1778e-02, -5.9632e-02, -5.0195e-03,  5.4200e-03,  5.9515e-03,
           1.6660e-02, -2.0902e-02,  3.7075e-04,  2.5160e-02,  3.3011e-04,
          -2.3001e-02, -5.1901e-02, -2.2491e-02, -1.8779e-02,  1.9913e-02,
          -2.0779e-02, -5.9424e-03, -2.8912e-02, -1.5052e-02,  1.7390e-02,
           4.6689e-03, -2.2565e-02, -1.4151e-02,  2.1870e-02,  5.8552e-03,
           1.9744e-02,  3.7427e-02,  5.8369e-02,  8.0171e-03, -1.2973e-02,
           2.6919e-02,  2.4630e-02,  6.1468e-04, -2.1227e-02,  1.5403e-03,
          -2.2830e-02, -1.8129e-02, -2.0831e-02,  1.4607e-02,  1.4060e-02,
           3.0433e-02, -5.4003e-02,  6.2527e-03, -3.2123e-02,  7.1500e-03,
           1.9702e-02,  5.6965e-03, -2.5759e-02, -1.2236e-02,  6.9919e-03,
           3.0983e-02, -2.1125e-02, -1.7340e-02, -2.4082e-02, -1.8724e-02,
          -1.1296e-02,  5.8033e-03, -2.6522e-02,  1.8021e-02, -1.6586e-02,
           6.0929e-04, -5.7267e-03, -2.1528e-02, -1.2798e-02,  6.9815e-03,
          -1.3874e-02,  8.9188e-03, -8.5230e-03,  1.3011e-02,  1.0550e-03,
          -3.5089e-02, -1.0031e-02,  2.4397e-02, -1.6573e-02, -2.9236e-03,
          -6.0558e-03,  1.3915e-02, -2.2459e-02,  2.1086e-04, -3.5502e-02,
          -3.4501e-02, -4.8586e-03,  8.4853e-03, -3.0882e-02,  1.9248e-02,
           4.1478e-03,  7.4856e-03,  2.0141e-02,  4.3209e-03, -3.0162e-02,
           4.8105e-03,  2.6887e-02, -4.4399e-03,  1.1014e-02, -5.1302e-03,
           2.7026e-02, -2.8211e-02,  1.4544e-02, -3.5621e-03,  6.5495e-03,
           1.4903e-02, -8.1019e-03, -4.4892e-02,  2.1731e-03,  2.4008e-02,
           2.7264e-02, -1.5331e-03,  2.8515e-02,  1.6625e-02,  4.1459e-03,
          -2.1138e-02,  5.2295e-02, -4.3416e-03,  3.1174e-02, -3.1077e-02,
           7.0218e-03, -1.6839e-02, -1.1281e-02,  4.2924e-03, -1.4216e-02,
           9.1226e-03, -7.7639e-03, -1.2564e-02,  4.4897e-03, -3.1259e-02,
           7.5722e-04, -1.1995e-02,  7.9284e-03,  1.4598e-02,  6.1468e-03,
           1.0792e-02, -1.2846e-02, -1.2639e-02,  1.1456e-02,  1.9688e-02,
          -2.7725e-02, -7.2322e-04, -2.8731e-02, -2.1564e-02,  1.8263e-02,
          -9.6812e-03,  3.9548e-02, -1.3847e-02,  7.3474e-03, -3.6686e-02,
          -1.7789e-02,  1.4237e-02,  1.8483e-02, -1.6624e-02, -1.9371e-02,
          -2.3568e-03,  1.0534e-02,  2.3739e-03,  4.6930e-03,  1.3990e-02,
           2.7657e-02, -2.1365e-02, -3.3071e-03,  2.6910e-02, -1.7492e-02,
          -5.9135e-04, -7.8491e-03, -2.3832e-02, -9.6458e-03,  2.4103e-03,
           7.0419e-05, -1.2602e-02, -1.0223e-02,  1.7285e-02, -4.3230e-03,
           9.4645e-03, -3.7150e-02, -9.7644e-03, -1.4422e-02,  6.0245e-03,
          -2.9838e-02, -1.8373e-02, -3.8821e-03, -3.3909e-02, -3.3251e-02,
           2.7826e-03, -3.1799e-03,  1.0933e-02,  3.5659e-02, -2.5871e-02,
          -2.6923e-02,  1.5465e-02,  2.7282e-02, -5.3080e-03,  8.0722e-03,
           1.8010e-03,  1.4195e-02,  2.0928e-02, -2.0609e-02,  2.1673e-03,
          -6.1182e-03, -4.2637e-03,  8.5980e-03, -3.7519e-03,  1.2303e-02,
           2.5230e-02, -7.9778e-03,  9.5026e-03,  1.4600e-02,  2.4171e-02,
           6.1865e-03, -2.0058e-03, -2.3543e-03,  1.5264e-02,  3.9450e-02,
           1.0004e-02, -7.9444e-03,  4.1827e-03,  1.4608e-02,  8.2125e-03,
          -1.5736e-03, -1.4722e-03,  5.2622e-03,  9.3423e-03,  1.3674e-02,
           3.4978e-02,  2.6607e-02, -4.0685e-02, -1.8093e-02, -1.1818e-02,
          -1.7380e-02,  1.1831e-03, -3.3390e-02, -2.3599e-03,  6.3013e-03,
           2.9622e-02, -2.1286e-02,  1.8860e-02, -4.2918e-02, -4.2895e-03,
          -1.6931e-02,  3.0975e-02,  8.9544e-03, -2.5204e-02,  5.0818e-02,
           1.1537e-02, -5.8267e-03,  7.4454e-03, -4.3661e-04, -1.3266e-02,
           2.3257e-02, -1.4419e-02,  7.7051e-03, -2.5953e-02,  5.0963e-03,
           1.8504e-02,  3.9880e-04, -3.2732e-02,  1.2324e-02,  3.1502e-02,
          -9.8047e-03, -9.2127e-03,  2.1856e-02,  1.0834e-02, -2.5079e-03,
          -1.7752e-02,  9.0802e-03, -1.3630e-02,  5.2345e-02, -9.0916e-03,
          -1.3304e-02, -5.7061e-03, -2.3011e-03, -2.2327e-02,  2.8300e-02,
           1.0096e-02, -4.0772e-03, -4.4341e-02,  1.3093e-02, -2.9841e-02,
           1.0455e-02, -8.1928e-03,  4.9205e-02, -3.2304e-02, -9.0730e-03,
           2.6480e-02, -1.0829e-02, -1.1699e-02,  2.1114e-02,  1.0863e-02,
           2.0832e-02,  6.7208e-03,  2.2840e-02,  1.1458e-02,  1.9412e-02,
          -9.7254e-03, -5.0366e-02,  8.0777e-03, -2.0833e-02, -1.3659e-02,
          -1.4956e-02,  4.0408e-02, -3.3083e-02,  2.5184e-02,  1.9877e-05,
          -2.9722e-02, -4.9527e-02,  2.9964e-02, -3.6691e-02,  1.0058e-03,
           5.0488e-03,  1.5403e-03, -2.6513e-02, -2.1443e-02, -1.4971e-02,
          -2.6196e-02, -5.0367e-03,  8.2127e-03, -2.1763e-02, -3.0953e-02,
           4.9395e-02,  1.3233e-02, -1.1225e-02, -2.2044e-02,  2.7453e-02,
           6.4221e-03, -2.3082e-02, -1.7013e-02,  1.2286e-02,  3.0655e-03,
          -1.2682e-02, -7.8915e-03,  6.2323e-04, -1.1806e-02,  8.8804e-03,
           2.4289e-02, -1.0224e-03,  1.0083e-02,  1.9774e-03,  1.1837e-02,
          -1.0278e-02, -7.6076e-03,  2.9914e-03,  1.9496e-02,  1.0630e-02,
          -8.2698e-03, -1.4965e-02, -2.3476e-02,  1.9924e-03,  1.4252e-02,
          -1.1937e-02, -2.9414e-03,  2.3672e-02, -4.4661e-02,  1.3061e-02,
          -5.2229e-03,  5.2778e-03,  4.0626e-02,  6.6061e-03, -3.1245e-02,
           2.5375e-02,  8.6226e-03, -2.7248e-02, -1.1034e-02, -8.6293e-03,
          -2.4942e-02,  1.7669e-02, -1.0317e-02,  8.3208e-03,  1.7552e-02,
          -3.8400e-02, -2.1393e-02, -8.5896e-04,  2.6828e-02,  3.9096e-03,
          -4.6431e-02, -1.5151e-03, -6.6838e-03,  4.0688e-02,  1.0380e-02,
          -1.6349e-03,  3.7334e-02,  2.3917e-02,  2.2341e-02,  1.9296e-02,
          -4.2132e-03,  3.7712e-02,  1.3116e-02,  3.3028e-03,  2.2397e-02,
           2.5172e-02, -1.0702e-02, -5.8786e-04,  1.2013e-02, -1.8316e-02,
           1.0950e-02,  4.5655e-03,  2.9043e-02,  2.6745e-02, -6.4856e-03,
          -3.1340e-02,  2.0498e-02, -2.5817e-02, -2.3798e-03,  1.0538e-02,
          -5.6208e-03,  1.8549e-03, -1.5720e-02, -1.9659e-02, -3.1624e-02,
          -2.9891e-03, -2.2183e-03,  1.3897e-02,  5.2916e-03,  2.5817e-03,
           3.4340e-02,  2.1986e-02, -1.2172e-02,  1.2228e-02, -4.1963e-03,
           3.2679e-02, -2.2392e-02, -1.9374e-02, -1.5871e-02,  1.3377e-02,
          -9.6962e-03,  1.6303e-02,  3.4435e-03,  1.3170e-02,  1.5831e-02,
           2.7525e-02, -2.0325e-02, -1.7327e-02, -2.3082e-03, -1.5134e-02,
          -3.7678e-02,  1.9145e-02, -1.1086e-02,  4.1013e-02, -8.3242e-03,
          -2.1659e-02,  1.2463e-02, -6.4373e-03, -5.7785e-03,  3.9428e-04,
          -1.4442e-02,  1.9748e-03,  1.8261e-02, -2.7099e-02, -1.2815e-02,
           2.9133e-02, -2.5957e-02, -1.4184e-02,  4.6440e-02,  1.5140e-02,
           2.7598e-02,  1.2355e-02,  1.3920e-02,  3.3918e-02, -7.8221e-03,
          -1.0328e-02, -2.9019e-02,  2.0180e-02,  8.2755e-03,  1.5465e-02,
          -3.1143e-02,  5.3208e-03,  2.4048e-02,  2.2027e-02,  3.1101e-02,
          -2.9474e-02,  2.7340e-02,  3.4415e-02,  2.2161e-02, -6.9902e-03,
          -1.7736e-03,  2.8923e-02,  5.9378e-03,  1.0797e-02, -2.6507e-02,
           1.0169e-02, -3.6911e-03, -7.4580e-03,  7.1950e-03,  3.0939e-02,
           1.2096e-02,  3.3161e-02,  2.5838e-02,  4.6178e-02, -2.6189e-02,
          -1.7682e-02,  1.3139e-03, -1.6190e-03, -7.7779e-03, -1.7912e-02,
           2.2391e-02, -1.6450e-02, -2.3361e-02, -1.7846e-02,  2.5530e-02,
           1.4449e-02, -4.7233e-02,  1.5970e-02,  2.5742e-03, -1.0167e-02,
           3.9492e-02, -1.2759e-02,  2.2089e-03,  1.6609e-02,  1.1931e-03,
           1.5087e-02,  5.6099e-03, -1.9782e-03,  5.3038e-02,  2.4830e-03,
           1.4110e-02, -1.1088e-02,  1.8804e-02,  1.8799e-02,  4.9610e-03,
          -3.1770e-02,  2.6803e-03, -1.1376e-02,  2.3149e-02, -3.2411e-03,
           2.6919e-03,  1.1519e-02,  1.9554e-02, -1.4416e-04, -7.2227e-03,
          -9.4401e-03, -2.4074e-02, -3.3600e-03, -1.9804e-02, -2.5349e-03,
           2.4805e-03, -1.6901e-02, -3.1594e-02, -9.5490e-03,  2.1435e-02,
          -2.1245e-02, -3.6161e-02,  3.8020e-02,  1.1570e-02, -1.0854e-02,
           2.6284e-02,  4.3836e-03, -3.6060e-02, -1.0525e-02,  9.1735e-03,
           1.6388e-03,  1.4002e-03,  1.4554e-02,  2.5134e-02, -2.2480e-05,
          -3.4833e-02, -2.1383e-02, -3.4181e-02]]], requires_grad=True))])
_buffers=OrderedDict()
_non_persistent_buffers_set=set()
_backward_hooks=OrderedDict()
_is_full_backward_hook=None
_forward_hooks=OrderedDict()
_forward_pre_hooks=OrderedDict()
_state_dict_hooks=OrderedDict()
_load_state_dict_pre_hooks=OrderedDict()
_modules=OrderedDict([('patch_embed', PatchEmbed(
  (proj): Conv2d(1, 768, kernel_size=(16, 16), stride=(16, 16))
)), ('pos_drop', Dropout(p=0.0, inplace=False)), ('blocks', ModuleList(
  (0): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (1): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (2): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (3): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (4): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (5): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (6): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (7): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (8): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (9): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (10): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (11): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
)), ('norm', LayerNorm((768,), eps=1e-06, elementwise_affine=True)), ('pre_logits', Identity()), ('head', Linear(in_features=768, out_features=1000, bias=True)), ('head_dist', Linear(in_features=768, out_features=1000, bias=True))])
num_classes=1000
num_features=768
embed_dim=768
default_cfg={'url': 'https://dl.fbaipublicfiles.com/deit/deit_base_distilled_patch16_384-d0272ac0.pth', 'num_classes': 1000, 'input_size': (3, 384, 384), 'pool_size': None, 'crop_pct': 1.0, 'interpolation': 'bicubic', 'mean': (0.485, 0.456, 0.406), 'std': (0.229, 0.224, 0.225), 'first_conv': 'patch_embed.proj', 'classifier': 'head'}
