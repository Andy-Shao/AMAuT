training=True
_parameters=OrderedDict([('cls_token', Parameter containing:
tensor([[[ 1.4714e-02,  7.8902e-03,  6.7026e-04, -3.1923e-02,  9.0713e-03,
           1.9788e-02,  8.6717e-04,  3.5330e-02, -1.0277e-02, -5.1630e-03,
          -1.5668e-02,  3.9544e-02, -1.3054e-02, -3.0090e-02, -4.1805e-02,
           1.6345e-02, -2.6657e-02,  1.2258e-02,  7.3652e-03,  1.0548e-02,
          -6.4253e-03,  1.8071e-03,  2.8655e-02,  2.9630e-02,  2.8231e-02,
           1.0513e-02,  1.0457e-02,  1.0589e-02, -1.2851e-02, -1.0913e-03,
          -2.6609e-02,  1.1141e-02, -1.6119e-02,  8.2179e-04,  2.3068e-02,
           3.4913e-03, -1.3441e-02,  1.2305e-02, -3.6632e-02, -2.4840e-02,
          -1.3555e-02,  4.0743e-02, -1.0754e-03,  8.4945e-03, -1.7913e-02,
          -4.3149e-03, -2.6536e-02,  1.8093e-03, -3.5266e-03, -1.1989e-02,
          -5.9736e-02,  2.2545e-02, -3.2904e-03, -6.8622e-03, -2.1113e-02,
          -4.6630e-03,  2.1155e-02,  9.1663e-03, -1.9521e-04,  1.6910e-02,
           8.9657e-03, -2.6705e-02,  2.0071e-02,  1.3541e-02, -2.5269e-03,
           1.4948e-02, -1.1491e-02, -6.1265e-03,  1.0701e-02,  8.6222e-03,
          -3.8491e-03,  8.8171e-03, -1.6050e-02, -3.3581e-02, -6.3235e-03,
          -1.7346e-02, -2.2020e-02,  2.8544e-02, -3.5410e-03, -2.1110e-02,
           2.9240e-03, -9.1489e-03, -2.7316e-02, -1.4125e-02, -3.8455e-03,
          -3.7134e-02,  9.6117e-03,  1.6524e-02, -2.5534e-02, -9.5015e-03,
          -1.1446e-02,  8.9065e-03,  3.8589e-03,  1.3150e-02,  1.3099e-02,
          -2.3341e-03, -9.3711e-03,  1.4797e-03, -1.0239e-02, -1.3669e-02,
          -1.5623e-02, -2.0204e-02, -6.0900e-03,  3.1145e-02, -2.8210e-02,
          -1.0100e-02,  1.6961e-02, -9.4712e-03,  4.3875e-02, -1.9739e-02,
           7.1403e-03,  1.8474e-02, -2.9434e-03, -9.6308e-03,  2.2649e-02,
           3.5985e-02, -6.1534e-03,  2.8994e-02,  2.4457e-02, -1.1870e-03,
          -1.9871e-02,  8.8914e-03, -1.1395e-02, -2.9751e-02,  6.2596e-03,
          -6.2645e-02,  1.3388e-02,  1.1706e-02, -2.4401e-02,  2.0965e-02,
           2.3045e-03, -1.4494e-02,  8.3049e-03,  2.1117e-02,  8.5129e-03,
           1.1150e-02,  2.0273e-02, -9.2074e-03,  3.5055e-02,  2.1616e-02,
          -9.4474e-04, -2.0497e-02, -1.7574e-02, -7.4687e-03, -3.0648e-02,
           2.4660e-02,  2.6361e-02,  1.1622e-03,  1.4983e-02, -1.0897e-02,
           8.4293e-03, -3.5643e-02, -1.0620e-03, -1.6875e-02, -1.4717e-03,
           5.1663e-03,  1.2984e-02, -6.0354e-03, -1.2187e-02, -1.0765e-02,
           5.4266e-03, -8.2225e-05,  3.4971e-03, -1.0528e-02,  1.5732e-02,
          -6.1061e-04, -3.2816e-02, -1.5648e-02,  2.6054e-03,  1.1411e-03,
          -6.0948e-03, -1.9630e-02,  3.3314e-02, -1.3405e-02, -5.0531e-02,
          -3.1259e-02,  8.7370e-03, -2.1906e-02, -8.8827e-03, -1.2272e-02,
           1.8865e-02, -2.8897e-02,  1.3911e-02,  3.8138e-02, -2.1586e-02,
          -8.7944e-03,  7.4449e-03, -1.0109e-02, -3.3199e-02, -1.4389e-03,
          -3.2258e-02,  1.6054e-02, -1.1657e-02,  1.3480e-02,  5.9200e-03,
          -3.6076e-02,  1.0652e-02,  2.0235e-02,  1.8800e-02,  1.6293e-02,
           5.9561e-03,  1.0147e-02,  2.4594e-02, -9.1650e-04,  3.2574e-02,
           5.3499e-04, -2.2039e-02, -6.2222e-03,  3.3463e-02, -4.8956e-04,
           1.2402e-03,  2.1268e-02,  1.0868e-02, -1.0971e-02,  8.6982e-03,
          -2.1299e-02, -4.1929e-03,  6.7735e-03, -3.6060e-03,  2.0319e-02,
          -3.4966e-03, -1.3551e-02,  1.5452e-02, -1.5465e-02,  6.6026e-03,
           2.9699e-02,  4.4228e-02, -6.3035e-03, -3.0131e-02,  9.6913e-03,
          -1.0102e-02, -4.3444e-03,  1.2628e-02, -1.0550e-02,  2.0495e-02,
           4.2671e-02,  6.7049e-03,  6.6950e-03,  4.5262e-02, -7.4475e-04,
           1.4038e-02,  2.1885e-02, -2.2564e-02, -7.3432e-03,  5.3246e-03,
           3.8496e-02, -1.3684e-02, -1.4487e-02,  3.0047e-03, -1.3347e-02,
           1.1816e-02,  2.8425e-03, -4.1006e-02, -2.0914e-02,  8.1443e-04,
           1.7236e-02,  1.0899e-02,  4.1772e-03,  8.6556e-03, -4.3604e-02,
           2.9674e-03,  2.6786e-02, -4.3038e-03,  2.1674e-02, -1.0727e-02,
           8.3775e-03, -2.3467e-02,  1.4193e-03,  2.4867e-03, -1.4890e-02,
          -1.8120e-02,  8.5476e-03, -1.2347e-02,  2.0431e-02, -2.3691e-02,
          -1.7702e-03,  1.1469e-04,  4.7255e-03, -6.9468e-03,  7.6160e-03,
           1.2327e-02, -7.7340e-03,  6.4260e-04,  1.9601e-02, -3.6157e-02,
           1.7758e-03, -1.4436e-02, -2.6722e-02, -3.1801e-02,  6.6111e-04,
          -3.7116e-02,  1.4785e-02, -2.0125e-02,  4.0810e-03, -3.4387e-02,
          -3.2226e-04,  1.1070e-02, -2.3431e-02, -6.5621e-03, -1.7401e-02,
           1.5002e-03,  6.3179e-03,  5.9941e-04, -4.4051e-03,  3.0611e-02,
           8.2011e-03,  2.2688e-02, -9.4022e-05,  3.8593e-02, -2.8946e-02,
          -1.5633e-02,  1.0928e-02, -1.2368e-02, -1.0350e-02, -1.1936e-02,
          -4.0275e-02,  2.1046e-02, -1.7606e-02, -4.7520e-02,  5.7175e-03,
          -1.1699e-02,  5.7136e-04, -1.8907e-02, -4.1249e-03, -3.9334e-02,
          -1.5444e-02, -4.4515e-03, -2.6430e-02, -2.6963e-02,  1.4597e-02,
          -3.3856e-02,  9.9543e-03,  1.9960e-02,  7.5609e-03, -9.9624e-03,
          -4.6161e-03, -1.3334e-02, -4.8185e-04,  2.4687e-02,  2.1853e-03,
          -1.5828e-03, -7.8402e-03, -4.0533e-03,  1.3161e-02, -6.1644e-03,
          -1.1565e-02,  1.6637e-02,  1.1216e-02,  6.8488e-03,  2.2947e-02,
          -3.2837e-02, -5.7713e-02,  1.3069e-02, -3.1283e-02,  2.8281e-04,
           9.3751e-03,  1.8834e-02,  2.6674e-03,  1.3690e-02,  9.6378e-03,
           9.1702e-03, -1.4667e-02, -1.3361e-02, -1.7702e-03, -1.5771e-02,
           1.1424e-02,  2.6838e-02, -7.3317e-03,  1.6003e-02,  1.8793e-02,
          -1.5380e-02, -1.3524e-02,  4.2491e-03, -3.2758e-02, -3.1561e-02,
           9.8774e-03, -2.5746e-02, -5.5038e-04, -4.7471e-03, -4.8029e-03,
          -2.7179e-02,  4.1866e-02, -1.6863e-02, -2.9314e-03,  1.2624e-02,
          -1.9650e-02,  1.5242e-02,  1.3011e-02,  3.0822e-02, -2.8047e-02,
          -2.3936e-02, -6.6462e-03,  3.4598e-02,  3.1181e-02, -3.6826e-03,
          -6.5694e-03, -2.7541e-02, -1.4532e-02,  1.0217e-02, -2.5843e-02,
           8.7063e-03,  6.2530e-03,  4.9239e-03,  1.9856e-03,  4.6548e-02,
           1.8087e-02,  2.5175e-02, -2.0157e-02, -1.5802e-02, -7.7777e-03,
          -2.0948e-02,  1.3169e-02,  7.2686e-03,  5.2317e-03, -5.3904e-03,
           2.5508e-02, -9.2406e-03,  2.0871e-02, -8.6247e-03,  4.6976e-03,
           1.4507e-02, -1.6946e-02, -2.2042e-02,  5.4740e-03,  8.9624e-03,
          -4.0869e-03, -2.5061e-02, -3.1870e-02, -1.9045e-02,  1.0365e-02,
          -2.2605e-02, -2.3799e-02,  3.8987e-04,  2.5909e-02, -5.2223e-03,
           3.3484e-02, -1.5330e-02, -1.6716e-04,  1.1740e-03,  9.5540e-04,
          -6.2233e-03,  1.3179e-02, -2.3266e-02,  3.2846e-03, -1.2625e-02,
           1.2308e-02,  5.6964e-03, -1.7943e-02,  1.6274e-02, -2.5804e-02,
           2.0466e-02, -2.6517e-02,  1.4487e-02, -4.7205e-02,  1.7630e-02,
          -7.0236e-03, -1.3946e-02,  2.3180e-02,  4.6056e-03,  2.8032e-02,
          -1.4693e-02, -2.3980e-02, -1.9801e-02, -2.1267e-02, -5.3840e-03,
          -5.6615e-03,  7.9662e-03, -2.4704e-02, -2.0953e-02, -2.8698e-04,
          -2.1851e-03,  7.0106e-03, -1.0144e-02,  1.7419e-02, -3.4439e-03,
          -5.2244e-03,  2.1438e-02,  1.3494e-02, -4.6761e-03, -4.8875e-03,
          -1.0203e-02,  3.4651e-03, -4.6283e-03, -4.0698e-03,  1.4769e-02,
          -6.7400e-03, -1.2725e-03, -2.2847e-02, -4.8845e-02,  1.6256e-02,
           3.2218e-04, -6.3381e-03,  2.8399e-03, -2.1385e-02,  6.5328e-03,
           3.9137e-02, -2.5930e-02, -3.1895e-02,  4.5323e-02,  3.8732e-02,
           7.8469e-03,  6.6045e-03, -3.9830e-02, -7.9690e-03,  3.7369e-02,
           1.9016e-02, -1.2024e-02, -1.4938e-02, -3.7687e-02,  3.6473e-02,
           4.5942e-03, -8.6762e-04,  2.4947e-03, -2.6930e-02,  3.6861e-03,
           1.7430e-02, -1.2938e-03, -8.1703e-03,  4.4094e-03, -3.5043e-02,
           5.0336e-02, -1.6946e-02,  3.7136e-02,  7.1088e-03,  1.8830e-02,
           4.6421e-02, -4.5641e-03, -1.6021e-02,  9.8957e-03,  5.6615e-03,
           3.5258e-02,  3.9820e-03, -4.4251e-03, -9.6289e-04, -1.7719e-02,
          -1.5420e-02,  4.5613e-02,  3.7099e-03, -4.1722e-03, -2.2819e-02,
          -5.5867e-03,  9.2602e-03, -3.5443e-02,  7.5638e-03,  1.9622e-02,
           7.6816e-05, -7.1592e-03,  2.4917e-03,  2.1725e-04, -1.8745e-02,
           2.7148e-02,  1.1868e-02,  1.8718e-02,  3.0029e-02,  8.8616e-03,
           7.3598e-03,  1.5568e-02,  4.1173e-03,  8.1451e-03,  1.6189e-02,
          -4.4461e-03, -1.2360e-03, -3.5179e-02,  1.5821e-02,  1.7606e-02,
          -2.9520e-03,  8.6010e-03, -4.5565e-02, -1.1136e-02, -1.5405e-02,
          -1.9213e-03,  1.6292e-02, -2.7408e-02, -3.4633e-03,  2.8778e-03,
          -4.6103e-03,  1.4812e-02, -1.1497e-02,  4.6065e-02, -2.1040e-02,
          -1.8575e-02, -1.5912e-02, -1.6415e-02,  2.3329e-03,  1.4416e-03,
           1.9812e-02,  1.5837e-02, -2.9868e-02,  2.1534e-02, -5.9621e-03,
           1.7757e-02, -4.3788e-03, -9.3000e-03, -8.1845e-03,  9.2863e-03,
          -4.7701e-03,  1.1750e-02, -1.3021e-02,  1.3535e-02, -1.9224e-02,
          -2.7862e-02, -1.2704e-02,  2.4549e-02,  4.1341e-02, -4.4984e-02,
          -1.8670e-02,  2.2337e-02,  1.2755e-02,  2.9952e-03, -1.6915e-02,
           1.6244e-02,  9.2064e-04, -2.1989e-02,  2.0629e-02, -8.0168e-03,
          -6.8955e-03,  1.1629e-02, -8.7025e-04,  3.4732e-02, -2.6691e-02,
          -1.9970e-02, -2.8998e-02,  2.0875e-02,  2.7555e-02,  4.3376e-02,
          -2.5338e-02,  3.6337e-03, -3.5880e-02, -1.7244e-02, -2.9895e-03,
           1.1752e-02, -2.6002e-02,  1.9992e-02,  3.2630e-03, -3.6803e-02,
           9.6740e-03,  8.0711e-03,  3.6300e-02,  1.0658e-02, -1.6717e-02,
           1.5265e-02, -1.7816e-02,  4.3821e-03, -1.6319e-03, -7.2192e-03,
          -5.3420e-03,  1.0407e-02, -9.5816e-03,  2.9143e-03,  3.2113e-02,
           4.5242e-04,  1.1191e-03, -9.6147e-03, -6.8604e-03, -1.0125e-02,
          -5.0385e-03, -6.1343e-02,  1.5496e-02,  3.7085e-03, -4.0869e-02,
           6.1400e-03,  3.0125e-04,  6.7193e-03, -2.0789e-02,  3.4021e-02,
           1.5045e-02,  6.2296e-03,  2.7538e-02,  5.7827e-03,  4.0389e-02,
           3.0128e-02,  9.0966e-03, -4.1775e-02, -1.5846e-02,  1.1751e-02,
           3.7017e-03,  1.5763e-03,  4.5222e-05,  1.9593e-02,  2.5762e-03,
          -1.0640e-02,  8.2785e-03, -3.8394e-02, -1.0453e-02,  2.0325e-02,
           2.2062e-03, -2.1490e-02, -3.2207e-02,  1.2895e-02,  2.1298e-02,
           1.7384e-02,  2.2452e-02, -3.0890e-02, -9.6728e-04,  8.7261e-03,
           7.9120e-03,  1.6191e-02,  1.5825e-02,  7.8175e-03,  6.6165e-03,
           1.9555e-02, -2.5741e-02,  3.3525e-03, -7.1345e-03,  3.1068e-02,
           1.7267e-02,  6.8263e-03,  8.4321e-03, -9.8248e-03, -1.3105e-03,
           9.0525e-04, -3.6987e-03,  4.0891e-03, -5.0059e-04,  4.8464e-02,
           7.1142e-03,  8.9625e-03,  8.3559e-03,  6.7905e-03,  2.3511e-02,
          -1.9025e-02, -1.5257e-02,  1.0461e-02,  1.6090e-02,  5.8532e-02,
           4.4782e-02,  1.1627e-02, -9.4549e-03, -2.6110e-02, -4.0456e-02,
          -2.6685e-02,  2.3242e-02, -5.6261e-03,  1.1840e-02, -6.3334e-03,
           1.4956e-02,  2.9981e-03,  9.4259e-03, -1.8270e-02,  3.6453e-02,
          -3.4889e-02,  3.1084e-02, -4.0081e-03, -5.7041e-02, -2.5042e-02,
          -2.6734e-03, -3.8667e-02, -6.1672e-03,  9.0795e-03, -1.6888e-02,
           2.2881e-02,  6.7770e-03,  1.3687e-02, -2.2545e-02, -3.5420e-02,
          -1.9084e-03,  2.9697e-02,  2.5005e-02,  2.2517e-03,  6.6402e-03,
           4.3133e-02,  6.0489e-03,  8.7224e-03, -1.3913e-02,  2.7800e-02,
           1.9342e-02,  1.0985e-02, -7.0691e-03]]], requires_grad=True)), ('pos_embed', Parameter containing:
tensor([[[ 0.0043, -0.0249,  0.0015,  ..., -0.0200, -0.0233,  0.0052],
         [-0.0164, -0.0038, -0.0130,  ..., -0.0293, -0.0098, -0.0166],
         [-0.0126,  0.0082, -0.0146,  ..., -0.0068,  0.0036,  0.0066],
         ...,
         [ 0.0385,  0.0175, -0.0042,  ..., -0.0284, -0.0027,  0.0091],
         [ 0.0139,  0.0151,  0.0196,  ..., -0.0080, -0.0351, -0.0060],
         [-0.0442,  0.0094, -0.0169,  ...,  0.0080,  0.0482, -0.0006]]],
       requires_grad=True)), ('dist_token', Parameter containing:
tensor([[[ 2.3573e-02,  1.2410e-02, -2.5170e-02, -1.5375e-02,  8.8831e-03,
          -4.3401e-02,  2.7707e-02,  1.3347e-02, -5.2856e-03,  1.0131e-02,
          -3.9136e-02,  2.6931e-02,  8.5883e-03, -6.7836e-03, -7.5732e-03,
           3.4447e-02, -1.7667e-02, -6.8144e-03,  2.8309e-02,  1.9136e-02,
          -1.0626e-03, -1.5979e-02, -1.1013e-03, -6.7420e-03, -1.8998e-02,
          -7.8985e-03, -3.4922e-03, -1.4783e-02,  9.6744e-03,  9.9892e-03,
          -1.0134e-02, -2.2156e-02,  2.3150e-03,  1.3058e-02,  2.1842e-03,
           4.5008e-03,  6.7199e-03, -1.5066e-03,  3.8678e-02,  2.0665e-02,
          -8.4531e-04, -7.2358e-03,  7.1369e-03,  9.4222e-03,  1.4026e-02,
           1.0492e-03, -4.3239e-02, -2.3615e-02, -1.7819e-02,  1.6108e-02,
          -8.9691e-03, -2.0403e-02, -1.8129e-03, -2.9448e-02,  1.6128e-02,
          -1.3279e-02,  2.5082e-02, -8.0762e-04,  9.5013e-03,  1.4872e-02,
          -1.0606e-02,  1.9845e-03,  6.1446e-04,  1.8653e-02,  1.7575e-02,
           2.0599e-02, -2.9222e-03,  2.0685e-02, -3.2621e-03,  9.5577e-04,
           3.7924e-02,  7.5771e-03, -1.7136e-02,  1.1553e-02,  2.1589e-02,
           1.9202e-03, -1.9075e-02, -2.3309e-02, -2.7712e-05,  4.5154e-03,
           4.3933e-02, -1.2263e-03, -1.0200e-02,  7.4311e-03,  1.4337e-02,
           9.2830e-03, -8.2607e-03, -1.1043e-02,  1.6505e-02,  2.1080e-02,
           5.0307e-03,  5.8647e-04,  1.1635e-02,  8.6331e-03,  1.0624e-02,
          -2.5698e-02, -2.9520e-02, -2.1025e-02, -8.0682e-03, -1.6721e-02,
           2.0513e-02,  1.4718e-02,  3.4990e-02, -2.4508e-02,  1.4323e-02,
          -3.0092e-02,  2.3384e-02,  1.0060e-02,  9.7892e-03, -2.5094e-03,
          -1.7421e-02,  1.1908e-02, -1.5222e-04, -2.9235e-02, -1.0407e-02,
          -9.8670e-03, -1.7480e-02,  5.6102e-02, -4.7082e-03,  1.5679e-02,
           3.9518e-02,  1.5653e-03, -9.1865e-03, -1.8321e-02,  3.4180e-02,
           9.3122e-03, -1.6188e-02, -4.6187e-03,  2.2160e-02, -4.6554e-03,
          -1.9545e-03, -1.5778e-02,  1.6777e-02, -1.7366e-03,  1.0965e-02,
           1.3563e-02,  9.2376e-03,  3.5310e-03, -2.3287e-02, -1.0869e-02,
           1.0234e-02, -2.6200e-02, -2.9765e-02, -3.7502e-02,  4.9992e-03,
          -1.8270e-02, -2.1726e-02, -1.4779e-02,  1.1578e-02, -4.1597e-03,
           6.5915e-03,  1.3223e-02,  7.4530e-03,  1.8268e-02,  6.5415e-03,
           2.2074e-02,  2.1701e-02,  1.4462e-02, -2.0326e-02, -7.3003e-03,
          -9.1351e-03,  5.0124e-03,  2.6600e-03, -4.1221e-03,  1.3217e-02,
          -1.3320e-02,  2.1236e-03, -1.6503e-02,  3.6945e-02,  1.1481e-02,
           6.7652e-03,  1.5773e-02, -3.7276e-03, -2.5604e-02, -5.0612e-03,
          -2.4884e-02, -1.4934e-02, -3.3571e-02, -2.8837e-02,  4.3798e-02,
          -5.1985e-02, -2.4157e-02,  2.7822e-02, -1.8905e-02,  2.1327e-02,
          -1.1506e-02,  7.5766e-03, -1.8136e-02, -6.1816e-03,  4.2427e-03,
           3.5609e-02, -2.5656e-03, -3.4395e-02,  5.8851e-03, -3.6307e-02,
           1.4126e-02, -2.3296e-02, -3.1564e-03,  7.7046e-04, -3.7767e-03,
           1.0354e-02,  2.8484e-02, -2.1494e-02, -1.7216e-02,  1.6297e-03,
          -1.7542e-02,  1.2794e-03,  3.3714e-03, -4.2767e-03,  3.0826e-02,
           1.5560e-02, -3.5351e-02, -1.0524e-02, -8.5023e-03,  1.8048e-02,
           2.7062e-02,  2.4649e-02, -5.9177e-03, -3.0688e-02,  8.5436e-03,
           1.2678e-02,  3.0199e-02,  3.1916e-03,  4.7127e-03,  1.6513e-02,
           1.0526e-02, -8.2009e-03, -2.9935e-02, -2.1284e-02,  1.6842e-02,
          -4.7975e-03, -5.9364e-03, -2.9499e-02,  5.4219e-03,  3.3208e-03,
           1.2270e-02, -2.6659e-02, -4.1133e-02,  1.2789e-02,  5.3116e-03,
          -1.7560e-02, -7.6721e-03,  6.9224e-03,  3.5394e-03, -1.8514e-02,
          -2.4227e-02,  2.3478e-02, -6.8630e-03, -5.1937e-03,  6.6422e-03,
          -4.6758e-02,  1.6222e-02, -3.8509e-02, -2.5666e-02, -1.3637e-02,
          -1.8358e-03, -2.9854e-02, -1.6137e-02,  1.3675e-02,  5.3684e-02,
          -1.9869e-02,  3.9827e-02, -2.4717e-03,  1.3324e-02, -4.5514e-03,
          -3.1097e-02,  3.6683e-02,  2.7028e-02,  9.5170e-03, -1.0731e-02,
          -7.4253e-03,  1.5078e-02,  2.8611e-02,  1.5758e-02,  1.8007e-02,
           2.0487e-02, -2.4862e-03,  1.0858e-02,  6.6057e-03,  3.0753e-02,
           2.1341e-02, -3.0841e-02,  1.8000e-03,  1.1137e-02, -4.3102e-02,
           1.9490e-02, -2.0492e-02,  3.7531e-03, -3.2273e-03,  6.4067e-03,
          -2.5351e-02,  2.4124e-03, -1.8337e-02, -4.1655e-04, -5.3521e-03,
          -3.3226e-03, -3.3412e-02,  4.2392e-02,  1.9190e-02, -6.8607e-03,
          -1.4564e-02,  5.2842e-03, -2.0128e-02,  1.1720e-02, -3.2832e-02,
          -3.3205e-03,  4.8796e-02,  1.2385e-02, -1.9092e-02, -3.3721e-02,
           1.1620e-02,  6.0955e-03, -2.7398e-02,  2.6974e-03, -2.4216e-02,
          -1.1559e-02, -4.3259e-03, -1.1477e-02,  1.1845e-02,  3.5699e-04,
           4.4691e-02, -1.9922e-02, -1.5714e-02, -1.8949e-02,  3.3989e-03,
          -2.1367e-02, -1.8817e-03,  1.2147e-02, -2.5364e-02, -2.4060e-02,
          -3.0743e-02, -1.1113e-02,  3.1106e-02, -1.4426e-02,  6.6510e-03,
           2.5833e-02, -1.6027e-02, -2.4824e-02,  9.6821e-04, -2.7745e-02,
           1.6901e-02,  4.0884e-03,  1.0905e-02, -3.0077e-03, -1.1009e-02,
          -1.2615e-04,  1.9429e-02,  1.3215e-02, -2.8049e-04,  4.9405e-03,
           3.0951e-03,  3.3044e-03,  8.3820e-03, -4.0775e-03,  2.7300e-03,
          -1.0974e-02,  5.3396e-03,  7.8982e-03, -2.3323e-02, -2.0295e-02,
           1.0195e-03,  6.5387e-03, -5.2864e-03, -9.1892e-03,  3.2238e-02,
           6.9058e-03, -3.7482e-02, -1.4159e-02, -5.2382e-03,  1.9117e-02,
          -2.6245e-03, -2.4965e-02,  1.3228e-02, -1.1039e-02,  3.6735e-02,
           1.9356e-02, -1.4824e-02,  2.2844e-02, -2.9397e-02, -6.8648e-03,
          -2.2143e-02, -3.6528e-02, -2.6525e-02, -9.0909e-03,  2.7571e-02,
          -4.3935e-02, -2.0092e-02, -6.7423e-03,  6.9270e-03, -1.4995e-02,
           2.4354e-02, -2.8645e-02, -3.2699e-02,  2.4663e-02, -5.0513e-04,
           1.8702e-02,  3.8998e-02, -4.5621e-02,  1.7889e-02, -2.6809e-03,
           3.8684e-02, -2.7834e-02, -1.3523e-02, -7.5959e-03,  1.2201e-02,
          -2.4447e-02, -7.4926e-03,  8.4882e-03,  2.0202e-02,  7.1447e-03,
          -9.4222e-03,  1.8433e-02, -2.2179e-02,  4.3074e-03, -2.9781e-03,
           1.4187e-02, -3.0779e-02,  2.2947e-03, -5.2988e-02, -2.0009e-03,
           1.4551e-02,  3.5854e-02, -5.0171e-03,  3.6573e-02,  7.5612e-03,
           1.1139e-02, -1.9156e-02,  1.5245e-02,  1.1410e-03,  3.6511e-02,
          -5.0216e-03,  2.7732e-02, -1.3766e-02,  4.2725e-03, -2.9765e-03,
           7.2043e-03, -1.0424e-02, -2.4130e-04, -1.0652e-02, -9.4189e-04,
           1.1225e-02, -2.7050e-02,  2.0050e-02,  5.0354e-03, -6.7313e-03,
           4.1405e-03, -2.8755e-02, -2.9668e-03, -1.2406e-02,  3.4512e-02,
           3.7063e-02, -1.6088e-02, -7.2463e-03, -1.2867e-02,  1.6142e-02,
           1.1900e-03,  3.0075e-02,  3.0545e-03, -3.8054e-03, -3.5467e-03,
           2.9830e-02,  1.1966e-02, -4.4791e-03, -3.8963e-03, -1.6327e-02,
          -4.4189e-02,  8.7056e-03, -2.7318e-02,  4.6190e-02, -4.5989e-02,
          -1.9622e-02,  1.8589e-02, -2.4192e-02, -6.8282e-03,  1.7213e-02,
          -2.6291e-02, -1.6793e-02, -7.9907e-03,  1.3624e-02,  1.1010e-02,
          -3.7481e-03, -5.4919e-03, -8.1334e-03,  7.7893e-03, -1.6378e-02,
           1.5491e-02,  2.4342e-02, -2.2276e-02,  1.7958e-02,  1.4623e-02,
           4.3666e-02,  1.1909e-03,  1.4769e-02,  2.3732e-02, -1.4632e-02,
          -5.1376e-03,  3.5840e-02,  1.4792e-02, -9.8848e-05, -9.3752e-03,
          -9.3389e-03, -8.1974e-03,  3.4395e-02,  3.4299e-03, -3.4382e-03,
          -2.2777e-02,  3.6612e-02,  6.3221e-03,  2.3847e-02,  3.5451e-03,
          -2.2297e-03,  8.1909e-03, -1.9743e-02,  3.9069e-03,  8.6393e-03,
          -1.2329e-02,  3.1753e-02, -7.4017e-04,  2.9575e-02,  1.0014e-02,
          -1.7202e-03, -2.4654e-02,  9.9926e-03, -2.8258e-03, -5.7556e-03,
           2.0426e-02, -3.3293e-03, -9.8609e-03,  1.7111e-02, -9.1017e-03,
           3.2057e-02,  1.6564e-02,  2.4609e-02, -2.4166e-02, -4.5228e-03,
           1.3375e-02, -1.2101e-02,  2.6259e-04, -3.3764e-02, -2.4554e-02,
          -3.5488e-02, -1.0565e-02,  2.0724e-02,  7.7452e-03, -2.6792e-02,
           1.1477e-02, -1.0812e-02, -2.9740e-02,  2.0477e-02, -5.0482e-02,
          -5.8637e-03, -1.2414e-02,  2.8503e-02,  5.8325e-04, -1.0307e-02,
           1.0249e-02, -1.7378e-02,  1.5654e-02, -3.5404e-03, -5.9194e-03,
          -3.5853e-02,  2.4743e-02,  5.8254e-03, -3.1262e-02, -1.4058e-02,
           2.2213e-02, -6.0977e-03, -2.4504e-02,  1.6009e-02,  4.0539e-03,
          -2.4504e-03,  8.4270e-03,  1.1054e-02,  3.9505e-02,  5.4600e-03,
           1.3058e-02, -8.0516e-03,  2.0193e-03, -5.7105e-02, -2.0457e-02,
          -1.2934e-02, -1.3976e-02, -1.5872e-03, -3.7356e-02,  7.3912e-03,
          -8.8709e-04,  9.2311e-03, -1.3808e-02,  1.2353e-02, -1.6958e-02,
          -1.0694e-02,  4.9846e-03, -1.4985e-02,  2.8931e-03,  3.3245e-03,
          -3.2824e-02, -7.2952e-03,  1.1664e-02, -9.4581e-03, -5.9422e-02,
           1.6141e-02, -4.1119e-03, -4.2172e-02,  1.3511e-02, -9.4218e-03,
          -1.0258e-02,  1.3859e-02, -1.1621e-02, -9.9778e-03, -2.0633e-02,
           1.4968e-02,  6.9532e-03,  1.5978e-03,  7.2380e-04, -1.5780e-02,
           2.8396e-02,  1.4798e-02, -3.3330e-02,  1.5932e-02,  6.6727e-03,
           6.9891e-03,  1.8224e-02, -2.3701e-03,  2.5031e-03,  7.4676e-03,
           3.4756e-03,  2.3716e-02, -1.8900e-02, -3.0145e-03,  1.5413e-02,
           9.4762e-03,  3.5046e-02, -1.5188e-02,  3.8444e-03, -2.4946e-02,
           1.4555e-02,  2.4031e-02, -3.6646e-02, -2.5272e-03, -7.9983e-04,
          -1.7784e-02, -1.5364e-02,  1.3082e-03,  3.1135e-02,  1.8549e-02,
           1.5034e-02,  8.9748e-03, -6.5946e-03, -1.8545e-02, -1.4974e-02,
           3.0640e-03,  1.4383e-02,  1.0815e-02, -1.3439e-02, -2.1540e-02,
           2.9999e-03, -2.5442e-03, -1.9583e-02, -2.6746e-02,  9.1087e-03,
          -2.9058e-02, -1.0130e-02, -3.6485e-02, -2.1292e-02, -5.2974e-03,
           5.9179e-03,  1.2701e-03, -1.0826e-02, -4.0484e-02, -9.5462e-03,
           3.3313e-02,  4.2953e-02, -1.4121e-02, -3.0443e-03,  5.7375e-03,
           1.7851e-03, -2.8354e-02, -1.6122e-02,  1.6948e-02,  1.2422e-03,
           8.3499e-03,  2.9800e-02,  1.4637e-02, -3.9683e-03, -4.2442e-02,
          -5.3141e-03,  2.2883e-02,  4.3522e-03, -7.3860e-03, -7.4989e-03,
           1.1684e-02,  2.5848e-02,  3.2792e-04, -1.4972e-03,  3.6510e-02,
           2.2436e-02, -3.3725e-02, -1.1020e-02, -1.6550e-02, -7.5356e-03,
          -2.1488e-02,  1.3510e-02, -4.3196e-03,  8.3313e-03,  8.1498e-03,
           2.4851e-03, -4.4348e-03,  2.6538e-02, -3.0366e-02, -5.5835e-03,
           5.0328e-02, -1.0636e-02, -3.0485e-02,  1.2827e-02, -1.5058e-02,
          -1.7949e-02, -1.8709e-02, -1.6802e-02,  1.4327e-02,  1.2648e-02,
           2.9845e-02,  1.4839e-02, -4.5656e-03, -3.1697e-02,  1.1638e-02,
          -2.4908e-02, -1.2142e-02, -1.2662e-02, -2.0430e-02, -3.0131e-03,
          -1.3938e-03,  1.5049e-02, -7.6935e-03,  2.1799e-02,  2.2299e-02,
          -8.6800e-03, -1.8651e-02, -2.9189e-03, -2.5585e-02, -1.8178e-02,
          -4.9626e-03, -4.4063e-02, -1.5995e-02,  2.3515e-02,  1.4777e-02,
          -3.3579e-03, -5.9752e-03, -6.8077e-03, -1.0273e-02, -2.2705e-02,
           1.1702e-02,  2.0942e-02,  2.1376e-02,  5.1528e-03,  2.1988e-03,
           1.1253e-02,  8.6811e-03,  2.8200e-02, -3.9101e-03,  1.7196e-02,
          -2.9110e-03,  6.0616e-04,  2.1611e-02,  2.2437e-02, -2.5062e-02,
          -4.2157e-02,  1.3285e-02, -1.9742e-04]]], requires_grad=True))])
_buffers=OrderedDict()
_non_persistent_buffers_set=set()
_backward_hooks=OrderedDict()
_is_full_backward_hook=None
_forward_hooks=OrderedDict()
_forward_pre_hooks=OrderedDict()
_state_dict_hooks=OrderedDict()
_load_state_dict_pre_hooks=OrderedDict()
_modules=OrderedDict([('patch_embed', PatchEmbed(
  (proj): Conv2d(1, 768, kernel_size=(16, 16), stride=(16, 16))
)), ('pos_drop', Dropout(p=0.0, inplace=False)), ('blocks', ModuleList(
  (0): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (1): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (2): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (3): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (4): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (5): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (6): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (7): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (8): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (9): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (10): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (11): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
)), ('norm', LayerNorm((768,), eps=1e-06, elementwise_affine=True)), ('pre_logits', Identity()), ('head', Linear(in_features=768, out_features=1000, bias=True)), ('head_dist', Linear(in_features=768, out_features=1000, bias=True))])
num_classes=1000
num_features=768
embed_dim=768
default_cfg={'url': 'https://dl.fbaipublicfiles.com/deit/deit_base_distilled_patch16_384-d0272ac0.pth', 'num_classes': 1000, 'input_size': (3, 384, 384), 'pool_size': None, 'crop_pct': 1.0, 'interpolation': 'bicubic', 'mean': (0.485, 0.456, 0.406), 'std': (0.229, 0.224, 0.225), 'first_conv': 'patch_embed.proj', 'classifier': 'head'}
