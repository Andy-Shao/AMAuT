training=True
_parameters=OrderedDict([('cls_token', Parameter containing:
tensor([[[-7.5708e-03,  1.2725e-02, -7.5965e-03, -1.2664e-02, -2.1930e-02,
          -4.0577e-02,  1.2551e-03,  3.8676e-02,  5.2512e-02, -4.4993e-03,
          -3.7064e-02, -4.1163e-04,  1.2891e-02,  4.1793e-02, -2.5248e-03,
           8.3701e-03, -5.1250e-03, -2.1491e-02,  9.2724e-04,  1.4486e-02,
           1.2407e-02,  2.5956e-02, -2.4118e-03,  1.5036e-02,  9.4649e-03,
           4.1725e-02,  1.5192e-02,  3.0476e-03, -1.4184e-04, -3.0229e-02,
           2.0321e-02,  5.6477e-03,  1.3826e-02,  3.1533e-02,  3.2774e-02,
          -8.5789e-03, -1.5605e-02,  2.0083e-02, -9.1775e-03,  2.3006e-02,
          -5.2413e-03,  2.5475e-03, -7.5117e-03, -4.4970e-03,  3.1063e-02,
           2.1535e-02,  1.5053e-02, -1.2012e-02,  7.8102e-03, -1.2065e-03,
          -2.3398e-02, -1.3980e-02, -1.0271e-02, -6.2838e-03, -4.4083e-03,
           1.8253e-02, -1.4335e-02,  8.6750e-04, -1.9980e-03, -9.4633e-03,
           2.6990e-02, -1.2037e-02,  1.4763e-02, -2.6508e-02, -1.4537e-02,
           1.6420e-02,  1.9699e-02,  2.9246e-03, -5.1541e-03, -1.0687e-02,
           4.0298e-02,  9.6378e-03,  6.8593e-03, -2.3595e-02, -1.6181e-02,
           1.0889e-02,  1.5154e-03, -3.3995e-03, -3.5184e-03, -1.1717e-02,
          -6.0441e-03, -3.6208e-03,  4.2095e-03, -7.1180e-03,  2.1910e-02,
          -1.0271e-02, -4.7321e-03, -1.7758e-02, -2.4012e-03,  5.1790e-02,
          -5.8834e-04,  9.6093e-03, -7.3225e-03, -1.9178e-02, -1.7105e-02,
           7.5719e-04, -1.9381e-02, -2.8261e-02,  6.0222e-03, -1.7624e-02,
          -1.0140e-02, -1.9072e-03,  7.0705e-03,  1.8928e-02,  2.6660e-02,
          -1.4846e-02,  4.9501e-03, -2.9006e-02,  8.6684e-03, -4.9858e-03,
           1.2679e-02, -8.0554e-03, -1.8514e-02, -4.8437e-03,  5.0725e-03,
           2.1647e-02,  6.3309e-03,  1.3619e-02, -1.0903e-02,  1.4034e-02,
           3.9736e-03,  4.4528e-03,  1.7349e-02,  8.5751e-03,  8.1791e-04,
          -4.1250e-02,  1.7531e-02, -3.4010e-02,  6.6907e-03, -1.4570e-02,
           1.1974e-02,  2.7175e-02,  7.9696e-03,  2.2290e-02, -1.5161e-02,
           3.7945e-02,  8.4590e-03, -3.3134e-03, -2.3213e-02,  1.2345e-02,
           3.5448e-03, -1.2162e-03, -4.2608e-03, -9.6991e-03,  1.9305e-02,
           1.4042e-03,  9.5527e-03,  1.4770e-02,  5.8030e-03,  1.3384e-02,
          -1.1270e-02,  2.0782e-02,  8.7673e-03, -2.1585e-02,  4.2689e-03,
           2.0186e-02,  1.1867e-02, -9.9833e-04, -6.7795e-03, -4.1388e-03,
           3.2985e-03,  5.5461e-03, -7.2889e-03, -1.4711e-02, -2.4927e-02,
           1.0647e-02,  2.9851e-02,  9.2351e-03,  1.6684e-02,  4.6829e-03,
          -1.4790e-02,  1.3319e-02, -1.2549e-02,  1.8376e-02,  5.2078e-02,
           3.1285e-02, -2.9608e-02, -2.9112e-02, -2.3518e-02,  5.8192e-03,
           1.3321e-02,  6.3359e-03,  9.5387e-03, -2.3664e-02,  1.4650e-02,
          -4.0513e-04,  8.7738e-03, -5.7370e-03, -6.0090e-03, -9.5163e-03,
          -1.6340e-02, -1.1822e-02,  2.8558e-02, -1.2951e-02,  6.8040e-03,
          -2.9207e-02,  1.3236e-03,  1.4863e-02, -7.5002e-03, -6.2735e-04,
          -1.5317e-02,  2.5864e-02,  1.5777e-02,  1.3922e-02, -3.1567e-02,
          -1.9271e-02,  9.7920e-03,  2.1601e-02, -1.7659e-02, -1.8735e-02,
           9.3088e-03, -2.6360e-02, -3.1368e-02, -1.1099e-02,  2.8361e-02,
           9.0234e-03, -1.3424e-02, -2.0100e-02,  3.0385e-03, -8.6714e-03,
          -1.6608e-02, -2.4460e-02,  8.8877e-03,  1.1552e-02,  2.5603e-02,
          -1.8213e-02,  1.2263e-02, -7.4301e-03,  3.0898e-02,  1.4915e-02,
           1.2711e-02,  2.4583e-02,  3.3695e-03, -2.0048e-02,  1.9566e-02,
          -3.7518e-03,  3.4274e-02,  2.5504e-02, -6.6383e-04, -2.6674e-02,
          -5.3507e-03, -3.1444e-03,  1.7824e-02, -2.1194e-02,  1.1028e-03,
          -8.2551e-03,  3.3595e-03,  1.2559e-02, -1.3261e-02, -3.6134e-02,
           1.7926e-02,  2.3929e-02,  1.2283e-02,  2.5741e-03, -1.5405e-02,
          -1.9346e-02,  1.8015e-02, -9.0098e-03,  2.2272e-02, -1.4285e-02,
           1.4175e-02, -5.1801e-03,  9.3158e-03, -2.2390e-02,  2.5774e-02,
          -7.2973e-04,  9.1728e-03,  1.1906e-02,  3.5634e-02, -8.8483e-03,
           1.3231e-02, -1.0102e-03, -2.4101e-02,  8.4735e-03, -8.3409e-03,
          -1.8518e-03, -7.1285e-03, -2.8579e-03, -1.4409e-02, -8.8155e-03,
          -5.6001e-03,  2.2404e-03,  2.6038e-03,  1.2874e-02, -1.9782e-02,
           2.3406e-03,  1.1866e-05,  1.1111e-02,  1.7009e-02, -2.4048e-02,
           1.4764e-02,  7.7474e-03, -6.6743e-03, -3.4381e-05,  1.4527e-02,
           6.9350e-03, -2.3186e-02, -3.1014e-02, -1.0200e-02,  1.1252e-02,
           1.6154e-02, -2.6285e-02,  1.3093e-02, -1.2280e-02, -4.0683e-02,
           9.5117e-03, -3.5489e-03, -1.0329e-02, -2.5294e-03, -1.9715e-02,
           1.1230e-02, -8.4387e-03,  2.3478e-02,  1.8925e-02,  3.6420e-02,
           1.2919e-02, -2.0177e-02, -7.3424e-03, -5.8019e-02,  3.2320e-02,
           3.3183e-04,  2.8938e-02,  1.4288e-02,  5.9241e-04,  3.4313e-02,
           2.2133e-02, -5.2391e-02,  1.4290e-02, -2.4889e-02, -8.5196e-03,
           7.9984e-03, -2.7772e-02, -7.0432e-03,  1.1602e-03, -8.3861e-03,
          -3.3166e-02,  8.4604e-03, -1.8338e-02,  4.1945e-03, -5.8920e-04,
           1.2752e-03,  1.7043e-02,  2.0474e-02, -1.7590e-02, -7.8416e-03,
          -1.2485e-02,  8.3205e-03, -2.7547e-02, -1.2283e-02,  8.7483e-03,
          -1.6247e-02, -1.1026e-02, -3.4350e-02,  2.0531e-02, -2.1987e-02,
          -2.6388e-02,  2.9988e-02, -4.8857e-03,  2.5712e-02, -1.7031e-02,
           4.5082e-02, -3.6245e-02, -1.0856e-02, -4.1583e-03, -1.9607e-02,
          -1.5825e-02, -9.0934e-03,  9.6711e-03,  2.1999e-02, -4.6606e-03,
          -6.1299e-03, -2.7498e-02,  1.5018e-02, -2.3618e-03, -1.1354e-02,
           3.8186e-02,  2.4910e-02, -1.1162e-02,  3.8892e-03,  1.9072e-02,
           1.5835e-02, -1.0006e-03,  1.1851e-02, -3.9496e-02, -1.9730e-02,
          -2.2475e-02, -3.6289e-04,  2.5113e-02,  5.4582e-03,  1.1334e-03,
          -3.7343e-03,  2.1331e-03,  1.9734e-03,  1.5196e-02,  2.9586e-03,
          -3.9411e-02, -2.5333e-02, -4.5774e-02, -3.9331e-02,  1.6920e-03,
          -3.8674e-02,  2.1254e-03, -2.7206e-03,  3.6149e-02,  2.0783e-04,
           2.4708e-03, -2.3154e-02,  7.1089e-03, -2.0986e-02, -1.6632e-02,
          -2.1815e-02,  4.3782e-03, -1.4890e-02,  1.3710e-02,  2.7679e-02,
           9.1784e-03, -2.8365e-02, -6.3893e-03,  1.7282e-02, -2.6505e-02,
           8.0239e-03, -1.1864e-02,  1.4803e-02,  1.9595e-02, -3.3560e-03,
          -1.9677e-02,  1.0763e-02, -3.4862e-02, -1.4912e-02,  1.6752e-02,
           2.6821e-02, -3.5126e-02,  1.1701e-02, -3.0627e-02,  6.9875e-03,
           1.6622e-02,  1.8093e-03, -3.6975e-02,  3.8619e-03,  5.6919e-03,
          -3.1317e-02,  2.5942e-02,  2.1272e-02, -4.6521e-03, -2.9131e-03,
           1.3046e-02, -1.8743e-02, -4.0053e-03,  1.9320e-03, -2.3159e-02,
          -2.2941e-02,  3.4324e-02,  2.0126e-02,  6.0666e-03,  3.1771e-02,
          -2.6826e-02,  1.2153e-02,  1.1626e-02,  2.3925e-02,  6.5504e-03,
          -2.7002e-02, -2.4089e-02, -2.8134e-02,  2.6053e-02,  1.9980e-02,
           5.9153e-03,  2.3386e-02,  1.4331e-02,  2.0412e-02,  1.6020e-02,
           3.2063e-03,  5.5588e-03,  8.0333e-04,  8.3273e-03, -3.2541e-02,
          -8.4541e-03,  8.3097e-03, -1.8280e-02, -8.0777e-03,  2.5730e-02,
          -2.5295e-02, -1.0717e-02,  1.0088e-02, -3.3648e-02, -1.4210e-02,
           2.9972e-02, -7.8639e-03,  9.0191e-04,  1.8804e-03,  2.4636e-02,
           1.0330e-02,  5.7993e-03, -3.8661e-02, -4.4712e-03, -1.5932e-03,
           7.8433e-03, -9.1919e-03,  2.7139e-02,  7.8831e-03,  3.3296e-03,
          -1.7142e-02,  1.5377e-02, -1.2428e-02,  2.8831e-02,  9.4027e-03,
           2.9430e-02,  3.5526e-02,  1.3242e-02,  2.7816e-03, -2.3965e-03,
           6.5259e-03, -2.0876e-02, -1.2340e-02, -5.5514e-03, -8.6944e-03,
           3.6953e-02, -4.3013e-03, -8.3433e-03, -1.2683e-03,  1.7761e-02,
           2.5048e-02,  1.1658e-02,  1.8645e-03, -2.4265e-02,  1.4191e-02,
          -1.1122e-02, -1.9100e-02,  1.7774e-02, -1.1006e-02,  7.3320e-03,
          -2.7442e-02,  2.7762e-02, -4.3418e-02, -3.6298e-02,  1.3697e-02,
          -2.4698e-03, -3.9813e-03, -2.5063e-02,  1.1043e-02,  7.9881e-03,
          -1.0060e-02, -2.6560e-02, -1.6679e-02,  1.9176e-02, -9.3184e-03,
           1.8272e-05, -1.2815e-02, -2.0848e-02,  1.1354e-02, -4.1472e-02,
           2.5394e-02, -6.4242e-03, -4.3163e-03,  5.2703e-03, -2.1945e-02,
          -1.7103e-02, -8.8666e-03, -2.0303e-02,  5.1907e-03,  3.7252e-03,
          -5.3853e-02,  9.2407e-03, -2.5798e-02,  5.4415e-03,  1.9187e-02,
           1.5893e-02, -2.3348e-02, -5.4971e-03, -2.5781e-02, -1.1578e-02,
           3.9809e-03, -1.5890e-02,  1.1312e-02,  3.6486e-02, -4.2112e-04,
           4.5784e-03,  3.8106e-03,  2.8847e-02,  3.9354e-02,  1.7854e-03,
          -1.1667e-03,  2.7954e-03, -3.4939e-03,  1.1392e-03,  2.7422e-02,
          -2.1900e-02,  9.4540e-03, -6.6980e-03, -4.2622e-02,  4.1613e-02,
          -6.1938e-03, -8.7622e-03,  1.5213e-02,  2.6659e-02, -1.1762e-02,
           2.2823e-02,  1.2382e-02,  2.2753e-03,  2.0709e-02,  2.1344e-02,
          -6.6426e-03, -3.5121e-02,  3.5762e-03,  1.3664e-02, -4.2618e-03,
           2.4438e-02, -4.2806e-02,  2.3962e-02, -1.9890e-02,  2.1356e-02,
          -3.9794e-04, -2.8301e-02, -2.7448e-02,  6.5301e-03, -1.2921e-03,
           8.0714e-03,  3.9927e-02,  3.6204e-02,  4.0932e-02,  1.8505e-02,
           3.6039e-03, -1.2756e-02, -2.1998e-02,  1.7061e-02, -5.4297e-04,
          -4.4081e-02,  5.9548e-03,  3.4826e-02,  1.2526e-02,  3.2312e-02,
          -1.6096e-02,  2.3072e-02,  1.2397e-02,  1.5390e-02, -4.3515e-03,
          -2.5908e-02,  4.8420e-03, -5.6374e-03, -5.5802e-03,  9.8275e-03,
          -1.5174e-02, -4.6709e-02, -1.8184e-02,  1.8917e-03,  4.6114e-02,
           3.9294e-02, -5.9877e-03,  7.1592e-03, -1.1677e-02,  3.2849e-03,
           2.9859e-02,  3.7563e-02, -9.7099e-03,  2.2043e-02,  1.9338e-02,
          -1.3278e-02,  2.7421e-02, -2.3600e-02, -5.7538e-03,  4.6380e-02,
          -1.3454e-02, -2.1317e-02, -9.5684e-04,  1.1065e-02,  1.3763e-02,
          -3.3845e-02, -4.3789e-03, -2.4006e-02,  2.1542e-03, -2.8379e-03,
           1.4222e-02,  9.0057e-03,  3.8191e-02,  1.7280e-02,  2.6923e-02,
          -2.8607e-03,  5.1085e-03,  2.2057e-02,  9.1560e-03,  6.3344e-03,
          -1.3348e-02,  2.3623e-02, -4.7803e-02,  1.0110e-02, -4.9012e-03,
           1.4892e-03, -8.5946e-03, -6.5384e-03,  4.7363e-02,  2.8500e-03,
          -1.1145e-02, -6.0344e-03,  9.0883e-04, -4.0656e-02,  5.6456e-03,
           5.6699e-03,  3.9233e-03,  3.9225e-02, -1.7226e-02, -2.9909e-03,
           3.5900e-04, -3.8269e-03, -3.4476e-02,  4.0508e-02, -1.7700e-02,
          -2.0202e-02,  3.6859e-03, -1.1717e-02, -1.3888e-02,  1.5731e-02,
          -1.3150e-02,  2.6069e-02,  3.6625e-02, -1.3200e-02, -1.5358e-02,
           1.5226e-02, -1.4665e-02, -1.9459e-02,  1.2853e-02,  2.7436e-02,
           8.7166e-03,  2.6945e-03, -2.2101e-02,  1.4132e-02,  8.5735e-03,
           3.1164e-03,  4.3674e-02,  1.1081e-02, -6.7462e-03, -2.2743e-02,
          -1.4240e-02,  8.4284e-03, -2.0111e-04, -1.7285e-02,  2.7195e-02,
          -5.3969e-03,  2.1604e-02,  6.9046e-03, -2.7309e-02, -6.8639e-03,
           3.9365e-03, -6.8488e-03, -1.4970e-02,  7.1824e-03, -5.2959e-02,
           3.8329e-03,  7.0694e-03, -8.6579e-03, -1.2069e-02, -6.9638e-03,
           7.8179e-03, -1.1560e-02,  2.7308e-02, -2.4099e-02, -2.4891e-02,
           6.4864e-03,  1.8890e-03, -9.4597e-03,  9.9302e-03,  8.9465e-04,
          -3.6115e-03, -2.0342e-02, -1.3308e-02, -2.5981e-02, -1.9601e-02,
          -7.9977e-03,  1.7388e-02,  9.6604e-03]]], requires_grad=True)), ('pos_embed', Parameter containing:
tensor([[[ 0.0030,  0.0096, -0.0108,  ...,  0.0264,  0.0250,  0.0042],
         [-0.0389, -0.0278,  0.0038,  ..., -0.0138, -0.0111,  0.0351],
         [-0.0106, -0.0170,  0.0098,  ..., -0.0029,  0.0085,  0.0125],
         ...,
         [ 0.0529, -0.0242, -0.0197,  ..., -0.0241,  0.0055,  0.0375],
         [ 0.0011,  0.0065, -0.0057,  ..., -0.0207, -0.0170,  0.0472],
         [-0.0116,  0.0180, -0.0089,  ..., -0.0058,  0.0134,  0.0484]]],
       requires_grad=True)), ('dist_token', Parameter containing:
tensor([[[ 7.5957e-03,  4.4542e-03, -6.9416e-03,  9.8117e-03, -3.5068e-03,
          -9.2771e-03,  4.4299e-02, -7.4770e-03, -2.5787e-02,  8.3328e-03,
          -3.5554e-02,  2.8195e-02,  2.3103e-02,  4.4339e-03, -3.5365e-02,
           5.9682e-03,  1.1008e-02,  1.2879e-02,  2.3762e-03,  1.7859e-03,
           2.6472e-02,  1.0861e-02,  5.1027e-04,  6.8554e-03, -2.6759e-03,
          -2.8432e-02, -6.0795e-03,  1.4529e-02, -2.1037e-02, -3.8694e-02,
          -1.2766e-02,  1.1518e-03, -1.5001e-02,  1.0589e-02, -1.1942e-02,
           7.0250e-03,  5.5376e-03,  1.3500e-02,  1.6446e-02,  7.2048e-03,
          -8.1799e-03,  3.2619e-03, -1.6096e-02,  3.0350e-02,  6.0339e-03,
           1.6224e-02,  2.1936e-02, -2.2601e-02,  1.5936e-02,  1.3801e-02,
           8.2111e-03,  9.8111e-03, -2.4925e-02, -1.9576e-02, -1.5657e-02,
           7.1720e-03, -2.8298e-03, -5.7772e-02, -2.9656e-02, -1.7484e-02,
           1.5725e-02,  2.1876e-02, -1.6243e-02,  1.6147e-02, -1.5115e-02,
          -3.2435e-02,  2.2745e-02, -2.0173e-02,  4.7954e-02, -4.6215e-03,
          -4.8892e-02,  7.1797e-03,  1.5339e-02, -1.4801e-02,  2.4358e-02,
           3.0376e-02, -3.9155e-03,  3.1994e-02,  1.5693e-02,  3.6712e-02,
          -3.2678e-02,  2.9410e-02, -3.8837e-02, -1.4501e-03, -2.7493e-03,
           9.5414e-04, -1.7948e-02,  1.3425e-02,  1.2571e-02,  4.6277e-03,
          -4.0107e-03, -4.6585e-03, -1.0365e-02, -1.8148e-02,  2.1377e-03,
           2.7869e-02,  4.5254e-03,  2.7486e-03,  1.3413e-02,  3.1014e-02,
           7.0514e-03, -1.1104e-02,  1.6333e-02,  4.0453e-02, -1.0076e-02,
           4.4873e-03,  1.7837e-02, -1.3904e-02, -1.1136e-02,  7.9824e-03,
          -1.6392e-02,  1.1552e-02, -1.9235e-02,  1.7906e-03, -1.0978e-02,
           9.6553e-03,  2.9924e-03,  2.8404e-02, -5.6499e-03,  1.7811e-02,
           1.1218e-02,  8.2145e-03,  3.2361e-02, -1.4085e-02, -3.5433e-02,
          -1.1749e-02, -1.5833e-02, -2.0495e-03,  1.5796e-02,  9.4721e-04,
          -1.6623e-03, -1.0378e-03,  1.6961e-02,  1.9974e-02,  2.1912e-03,
           1.7794e-02, -3.6015e-02,  1.7372e-02,  1.0353e-03,  2.0086e-02,
          -1.7961e-03, -1.7387e-02, -1.7185e-02, -7.9867e-03, -5.4471e-03,
           2.9092e-02, -3.6863e-03, -4.6027e-02,  2.7977e-02,  2.4726e-02,
          -5.9933e-03, -2.2334e-02, -1.4069e-02,  1.2645e-02,  2.3895e-02,
          -5.3239e-03,  1.0877e-02, -6.3334e-03,  1.0317e-02,  9.8992e-03,
           1.1737e-02, -1.5029e-02,  2.8024e-02, -6.8697e-03, -8.5444e-03,
           4.3296e-02, -5.0696e-03, -2.7082e-03,  2.1053e-03,  2.1111e-02,
           1.4658e-02,  1.2756e-03,  4.8955e-02, -2.7595e-03, -2.2808e-03,
           1.9739e-02, -1.9859e-02, -1.3157e-03,  1.6273e-02, -3.2610e-03,
          -4.4191e-03,  2.9442e-03,  3.3615e-02, -1.2212e-02, -1.9716e-04,
          -4.4402e-03,  3.3519e-02,  1.6455e-02,  1.2828e-02, -2.6484e-02,
           1.9768e-02, -3.0353e-02, -1.2408e-03, -4.6976e-03,  3.0220e-04,
          -1.9513e-02, -1.8514e-02, -3.6380e-03, -1.8781e-02, -3.9534e-02,
          -1.7010e-02,  5.3357e-03,  4.6851e-03,  3.8454e-02, -4.5000e-03,
           6.7897e-03, -3.7464e-03,  2.9038e-02, -1.9740e-02, -4.1176e-04,
          -3.8680e-03,  2.7504e-02, -2.1075e-03, -3.3891e-02,  1.1481e-02,
           1.2157e-02, -3.0273e-03,  1.9343e-02,  1.7611e-02, -2.4343e-03,
           2.6373e-02,  6.5454e-03,  1.3001e-02, -1.4287e-03,  2.3370e-02,
           5.2944e-02, -1.7887e-02, -6.2557e-03, -2.6910e-02,  4.4756e-03,
           1.4798e-03, -1.1688e-02, -1.6219e-02,  1.2556e-02,  3.3364e-02,
          -7.4687e-03, -2.9078e-02, -6.2450e-03, -1.4521e-02,  1.3652e-03,
          -2.1397e-02,  1.9456e-02,  3.0372e-02, -1.1001e-02, -4.8291e-03,
          -7.0746e-03,  1.4929e-02,  2.3836e-03,  3.4037e-02,  1.6654e-02,
          -2.2726e-02,  1.4136e-02, -2.8612e-02, -3.0431e-02, -8.3522e-03,
          -3.9375e-03, -2.2161e-02, -3.5777e-02, -1.6650e-02,  2.5801e-02,
          -1.1603e-02,  1.1046e-02,  1.0111e-02, -2.4981e-03,  2.6035e-02,
           1.5473e-02,  2.7375e-02, -2.7187e-02, -2.9008e-02, -1.6854e-02,
           2.4222e-03,  1.9926e-02,  1.8111e-02, -5.1384e-03,  6.1683e-03,
           2.8855e-02, -3.1067e-02,  1.4231e-02,  3.1050e-02, -3.3198e-02,
           6.4184e-03,  7.1649e-03, -2.0569e-03,  1.9093e-02,  4.6603e-03,
          -5.6989e-03, -1.4793e-02,  2.9013e-02, -1.8607e-02,  6.2835e-04,
          -3.0228e-02, -3.5804e-03,  2.9158e-02, -2.3237e-02,  8.4621e-03,
           4.2149e-02,  3.8776e-02, -8.5047e-03,  2.0982e-02,  3.1656e-03,
           2.9096e-02,  6.6075e-03,  3.1311e-02, -1.8160e-03, -7.8157e-03,
          -8.0128e-03, -3.3316e-03,  1.7584e-02, -1.0201e-02,  7.2890e-03,
          -1.6325e-02, -8.2887e-03, -7.2071e-03,  1.5480e-02,  2.0780e-02,
          -8.3337e-04, -2.2049e-02, -1.2675e-02, -2.2252e-02,  2.8215e-02,
          -4.0459e-02, -1.2628e-02, -3.7266e-02,  6.3218e-02, -7.8918e-03,
           4.2617e-03,  1.4904e-02,  1.8598e-02, -1.6292e-02, -1.5376e-02,
           2.1326e-04, -2.3419e-02, -2.6412e-02, -1.0166e-03,  9.1216e-03,
           1.2895e-02, -1.0540e-02, -1.0465e-02, -3.3473e-02,  2.0141e-02,
           1.4957e-02,  4.1648e-02,  1.5924e-02,  2.3578e-02,  1.7659e-02,
           1.9218e-02,  2.5100e-02,  7.6901e-04, -7.8651e-03,  1.0470e-02,
          -2.9485e-02, -2.3897e-02, -1.1944e-02,  8.8936e-03,  8.1738e-03,
           4.1538e-02, -4.5008e-03, -3.1494e-02,  3.9001e-03, -1.1479e-02,
           1.8236e-02, -1.8174e-02,  3.3585e-02, -2.6455e-02,  9.7899e-04,
           1.1086e-02, -2.4165e-02,  4.1130e-03, -4.0234e-03,  1.1653e-02,
           1.1423e-02, -3.3560e-02,  1.4044e-02, -1.3619e-03,  2.8126e-03,
           2.9848e-02,  2.7743e-02,  1.6309e-03,  1.3260e-02, -1.2772e-02,
          -5.5658e-03,  2.3541e-02,  1.3292e-03, -7.3511e-03,  1.2470e-02,
          -8.8035e-03, -1.2162e-02, -2.5087e-02,  4.8665e-03, -1.0033e-02,
          -1.6911e-02,  1.5947e-02,  7.5715e-04,  1.7497e-03,  1.2107e-02,
           1.3530e-03, -1.4740e-04,  1.0163e-02,  9.4178e-03, -1.4891e-04,
          -8.9158e-03,  5.5369e-03,  2.2528e-02, -2.6577e-02, -2.3433e-02,
          -2.4437e-02, -3.6252e-02,  2.0015e-02,  6.9352e-03,  3.0285e-05,
          -3.7844e-03, -1.2966e-02, -1.8558e-02,  2.2127e-02, -1.9871e-02,
          -5.8934e-03,  1.4489e-02,  3.3221e-02,  2.7332e-02,  1.8674e-02,
          -1.1336e-02, -1.1377e-02,  1.6020e-02,  3.8304e-03, -3.0351e-02,
           3.0469e-03,  1.7815e-02,  5.4081e-03, -2.4675e-02, -1.2457e-02,
           2.0191e-02, -1.2883e-02, -2.9111e-02, -5.0276e-02,  3.3119e-02,
          -2.2503e-02,  5.7218e-02, -1.8438e-02, -2.2219e-02, -2.3488e-02,
           4.9701e-03,  4.9212e-05,  1.3110e-02, -2.1800e-02, -8.9071e-03,
           3.9088e-02, -2.7024e-02, -9.5638e-03, -1.3360e-02, -1.2764e-02,
           8.9787e-03, -4.1879e-04, -1.6936e-02, -2.7327e-02,  6.9594e-05,
           7.0899e-03, -1.0044e-03, -4.5803e-02, -8.5725e-03,  7.5763e-04,
           3.8067e-02, -1.5502e-02, -1.3931e-02,  1.4061e-02,  2.5394e-02,
           2.0057e-02,  5.0208e-02, -2.8235e-02, -5.8015e-02,  1.2896e-02,
          -1.9504e-02,  1.7824e-02,  1.2110e-02,  1.5746e-02,  1.3169e-02,
           1.6634e-02,  4.4004e-03, -1.7834e-02,  7.7130e-03,  3.7151e-03,
           1.0598e-02,  1.8432e-02,  6.4836e-04,  1.1793e-02, -1.7038e-04,
           2.1301e-02,  2.0715e-02, -2.7896e-02, -6.2976e-03, -8.9096e-03,
           1.5525e-02, -2.2389e-03, -5.9742e-03, -1.2012e-02, -2.4802e-02,
           3.8130e-03,  4.1751e-03, -1.4544e-02, -7.6543e-03,  1.8894e-02,
           1.2983e-02, -8.4593e-03, -1.3362e-02, -8.1393e-03,  2.2599e-03,
          -4.2467e-03, -2.6167e-02, -1.3430e-03, -1.2620e-02,  5.5404e-03,
           6.3895e-04, -1.6961e-02, -1.3460e-02,  5.3862e-03, -2.1080e-02,
          -1.7572e-02, -6.0967e-03,  5.5054e-03, -2.0087e-02, -1.1851e-02,
          -1.1610e-02, -1.9846e-02, -3.6118e-02, -2.5327e-02, -2.7052e-02,
           9.4288e-03,  2.1253e-02, -3.9892e-02,  1.0518e-02, -3.7756e-03,
           1.2512e-02, -1.4713e-03, -2.6390e-02,  3.1353e-02,  7.6708e-03,
           2.7126e-03, -1.1159e-02, -2.4320e-02,  6.4491e-03,  1.1104e-03,
          -2.4514e-02, -2.3876e-02, -2.1541e-02,  5.3204e-03, -2.1590e-02,
          -1.8264e-02, -2.2678e-02, -6.4743e-03,  3.3566e-02,  1.9881e-02,
          -3.7345e-02,  5.5745e-03, -3.4954e-02,  1.8269e-02,  1.9197e-02,
          -1.9491e-02, -5.9545e-03,  5.5603e-02, -9.3864e-03, -1.3536e-02,
           3.3708e-02, -1.8412e-02,  2.2814e-04,  2.8155e-02,  1.6339e-03,
           2.6985e-02, -2.7154e-02, -2.7001e-02,  5.4414e-03,  1.8851e-02,
           1.4979e-02, -3.0400e-02, -5.1865e-03, -2.0957e-02,  1.3930e-02,
          -3.0835e-04,  1.4768e-02,  9.3505e-03, -2.0056e-02,  3.3788e-03,
          -2.3073e-03, -7.1298e-03,  1.2385e-02,  1.0688e-02, -3.1823e-03,
           1.4670e-02,  3.9056e-03, -3.1329e-02,  1.2439e-02, -4.7115e-03,
          -1.1557e-02,  1.7548e-02,  9.1761e-03,  1.7246e-02, -6.8242e-03,
          -4.0225e-02, -9.5372e-03, -1.3027e-02,  2.4275e-02,  5.2684e-03,
          -3.5412e-03, -3.3143e-02, -7.1546e-03, -3.2021e-03,  3.1952e-02,
           2.7499e-02,  1.2366e-03,  7.4296e-03, -3.1378e-02,  6.1643e-03,
           7.5213e-03,  1.4105e-03, -1.5239e-02, -3.7409e-02, -3.3901e-02,
           9.4318e-03,  1.2408e-02,  1.7007e-02,  7.3201e-03, -3.5884e-03,
           2.0909e-02, -1.2348e-03,  3.5787e-02,  1.6234e-02, -2.4090e-02,
           5.7948e-03, -1.5555e-02, -1.2824e-02, -5.0174e-04,  2.5188e-02,
          -2.7726e-03, -7.1002e-03,  2.0522e-02,  2.6278e-02,  2.6693e-02,
           2.0232e-03, -2.5637e-02,  1.0080e-02, -2.5986e-02,  5.3300e-02,
          -1.7095e-02,  2.2079e-02,  2.8389e-02, -4.0542e-02,  2.0875e-02,
           1.7560e-02,  5.6689e-03,  4.5230e-04,  4.0708e-02, -2.8658e-03,
          -6.1492e-03, -1.9255e-02,  1.3910e-02, -3.9415e-02,  3.2578e-02,
          -3.3509e-03,  3.2838e-02,  7.2386e-03, -1.4506e-02,  9.4191e-03,
          -2.0321e-02,  2.6079e-02,  7.2469e-03, -2.3953e-02, -2.9857e-02,
           1.7209e-02,  9.6932e-03, -1.2671e-02, -2.0891e-03, -2.2724e-03,
           2.6002e-02,  5.3414e-03, -9.0010e-03,  2.0148e-03, -1.5500e-02,
          -2.9380e-02, -7.1369e-04,  2.1613e-02,  7.3498e-03, -2.3212e-02,
           2.0116e-02, -3.8348e-03, -1.2144e-02, -1.6135e-02, -2.0018e-02,
          -7.0678e-03, -4.1435e-04,  1.6522e-02,  1.7679e-02,  2.4064e-02,
           1.2955e-02,  6.9563e-03,  5.8273e-03,  6.4702e-03, -2.1528e-02,
          -7.8905e-03, -2.1501e-02, -5.6815e-03,  2.0221e-02,  2.8843e-02,
           1.5271e-02,  1.4166e-02,  1.2225e-02,  1.0305e-02,  2.9543e-02,
           3.6608e-02,  1.3477e-02, -2.0400e-02, -4.1126e-02, -1.1953e-02,
          -2.4730e-02,  1.8677e-02,  5.0460e-03, -4.0213e-02, -1.0801e-02,
          -1.2502e-02, -1.0268e-02, -6.1968e-03, -7.6336e-04,  1.0658e-02,
           1.4786e-02, -3.6818e-02, -5.2248e-02,  3.1330e-02, -2.0105e-03,
          -6.8210e-03,  3.5663e-02,  9.4793e-03, -7.4343e-03,  2.6697e-02,
           2.2642e-03,  1.8140e-02, -1.0413e-02,  3.2132e-02,  2.6644e-02,
           3.3950e-02,  1.5258e-02,  3.0534e-02, -2.7659e-02,  3.5442e-02,
           1.8490e-02, -1.5559e-03, -1.0877e-02,  3.9411e-03, -4.1225e-03,
           4.1194e-02,  2.6533e-03,  2.8421e-02,  1.3037e-02, -1.6214e-02,
           3.0531e-02,  4.1560e-03, -1.1133e-02, -9.7772e-03, -1.5595e-03,
          -3.1486e-02,  9.2623e-03, -3.7319e-02, -3.0930e-02,  1.6188e-03,
           1.2779e-02, -2.5909e-02, -1.7131e-02,  3.0222e-03,  4.2997e-03,
           1.3647e-02,  2.9496e-02,  1.2753e-02]]], requires_grad=True))])
_buffers=OrderedDict()
_non_persistent_buffers_set=set()
_backward_hooks=OrderedDict()
_is_full_backward_hook=None
_forward_hooks=OrderedDict()
_forward_pre_hooks=OrderedDict()
_state_dict_hooks=OrderedDict()
_load_state_dict_pre_hooks=OrderedDict()
_modules=OrderedDict([('patch_embed', PatchEmbed(
  (proj): Conv2d(1, 768, kernel_size=(16, 16), stride=(16, 16))
)), ('pos_drop', Dropout(p=0.0, inplace=False)), ('blocks', ModuleList(
  (0): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (1): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (2): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (3): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (4): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (5): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (6): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (7): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (8): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (9): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (10): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (11): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
)), ('norm', LayerNorm((768,), eps=1e-06, elementwise_affine=True)), ('pre_logits', Identity()), ('head', Linear(in_features=768, out_features=1000, bias=True)), ('head_dist', Linear(in_features=768, out_features=1000, bias=True))])
num_classes=1000
num_features=768
embed_dim=768
default_cfg={'url': 'https://dl.fbaipublicfiles.com/deit/deit_base_distilled_patch16_384-d0272ac0.pth', 'num_classes': 1000, 'input_size': (3, 384, 384), 'pool_size': None, 'crop_pct': 1.0, 'interpolation': 'bicubic', 'mean': (0.485, 0.456, 0.406), 'std': (0.229, 0.224, 0.225), 'first_conv': 'patch_embed.proj', 'classifier': 'head'}
