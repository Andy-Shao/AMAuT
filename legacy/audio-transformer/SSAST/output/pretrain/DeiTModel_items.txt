training=True
_parameters=OrderedDict([('cls_token', Parameter containing:
tensor([[[-2.5933e-03,  7.9660e-03, -1.4633e-02,  1.9911e-02,  2.8397e-02,
          -4.3396e-02, -1.3316e-02,  7.1808e-03,  1.5251e-02,  1.5463e-03,
          -5.3441e-03, -9.3304e-03, -3.2869e-04,  3.2681e-03,  1.9015e-02,
          -7.4397e-03, -1.4544e-02,  7.5109e-04,  1.3711e-02,  1.5544e-02,
          -2.2378e-02,  1.0311e-02, -8.4727e-03, -9.3229e-03, -1.1300e-02,
           3.0816e-02,  4.7958e-03,  4.5705e-03, -2.9734e-03, -5.3485e-02,
           8.6745e-03,  2.3068e-02, -1.6526e-02,  3.1334e-02, -2.1163e-02,
           1.3458e-02, -2.1454e-02,  4.5532e-03,  5.9419e-03,  5.8695e-03,
           2.5668e-02, -1.8036e-02, -3.1801e-02,  9.2585e-03, -9.3426e-03,
          -9.5349e-03, -4.7920e-02,  1.9836e-02,  1.8849e-02, -9.4408e-03,
           1.3119e-02,  3.0396e-02,  3.1470e-03, -8.9732e-03,  2.5223e-02,
           4.7459e-03, -2.3468e-02, -3.9848e-04,  3.1529e-02,  8.7120e-03,
          -2.4804e-02, -1.3331e-02, -4.5645e-03, -2.3489e-02, -5.2664e-02,
          -5.3740e-02,  1.8397e-03,  2.9394e-02, -2.2522e-02,  3.6035e-02,
           1.0353e-02,  3.2664e-04, -2.4155e-03, -4.0308e-02,  1.3805e-02,
           3.7612e-05, -1.3774e-03, -8.7018e-03,  3.6173e-02,  5.7388e-03,
           4.7264e-03, -1.7905e-02, -3.9838e-02,  1.5054e-03,  4.2966e-02,
          -4.7267e-03, -2.3472e-02,  1.2310e-02, -8.5782e-03,  4.7604e-03,
           2.8631e-02,  5.6426e-02,  2.5457e-03,  3.3149e-02, -2.3466e-03,
          -6.9432e-03, -3.0329e-03, -1.1681e-02, -1.7269e-03, -2.6356e-02,
           3.9770e-02, -2.8234e-02, -1.6977e-02, -5.4411e-03,  1.7016e-02,
           6.6786e-03,  1.6615e-02,  2.8194e-02, -3.1866e-03, -2.7504e-02,
          -7.5325e-03, -4.1157e-02,  9.6086e-03,  1.1320e-02,  6.5091e-03,
           2.9703e-02, -5.8888e-03,  1.4117e-02,  4.1369e-02,  2.6632e-02,
           1.3944e-02, -1.5976e-04, -9.4052e-03, -5.0918e-03,  2.1817e-02,
           3.3907e-03, -5.7857e-02,  1.2032e-02,  1.5079e-02,  1.4873e-02,
          -1.7250e-02,  8.4302e-03, -4.2474e-02,  1.1071e-02,  3.5803e-02,
           2.1918e-02,  9.6170e-03,  1.8671e-02,  3.8353e-03, -2.4198e-03,
          -9.5224e-04, -1.6306e-03,  3.3486e-02, -3.6075e-02,  1.3447e-02,
          -9.6536e-03,  7.1524e-03,  1.5120e-02,  1.0759e-02,  2.7912e-02,
           1.6579e-02, -1.2962e-02,  8.2719e-03,  8.6886e-03,  2.8551e-02,
           2.4012e-02, -1.8642e-02,  1.2200e-02, -3.8236e-02, -1.3990e-02,
           6.0066e-03,  1.9040e-02,  1.8088e-02, -1.8836e-04,  6.8093e-03,
          -3.1085e-02,  1.7098e-02, -2.1289e-02, -2.1998e-02, -1.2428e-02,
          -4.6052e-03, -3.1493e-03, -2.4092e-02,  9.9276e-03, -1.4680e-02,
           2.1494e-02,  3.3322e-03,  1.3485e-03,  2.0765e-02,  5.0003e-02,
          -2.9774e-02,  4.0117e-02,  3.1389e-02, -6.9051e-03, -1.0861e-02,
          -1.8342e-02,  1.0113e-02,  1.2082e-02,  1.1037e-03,  1.0350e-02,
          -2.7327e-03, -1.2712e-02, -1.6350e-02,  2.9369e-02,  1.7094e-02,
           3.5341e-03,  4.0884e-03, -5.1476e-03, -4.2947e-03, -4.8523e-03,
           2.7966e-02, -1.0527e-02, -1.4621e-03,  1.3084e-02, -1.6494e-02,
           2.1025e-02,  9.4882e-03,  2.2217e-02, -1.5065e-03, -8.0885e-03,
          -3.8913e-02, -5.0607e-03,  9.1278e-03,  2.4818e-02, -3.1003e-02,
           7.2740e-02, -1.3184e-02,  1.6764e-03,  6.7868e-03, -2.4786e-03,
           2.4005e-02, -1.4094e-02, -2.4338e-02,  2.0188e-02,  2.8195e-02,
           1.0433e-02,  3.3658e-02, -5.0787e-03,  1.4477e-02,  7.7256e-03,
           4.3230e-02,  2.9444e-02, -3.1316e-02, -1.8805e-02, -4.1196e-02,
           4.9720e-03,  9.4438e-03,  1.7620e-02, -2.4636e-02,  3.2369e-02,
           5.1906e-03,  1.1433e-02,  3.7110e-02, -3.6215e-02,  8.5781e-03,
          -4.4419e-03, -9.3548e-03, -2.1084e-02,  2.5850e-02, -3.2981e-03,
          -2.0671e-02,  1.1392e-02,  2.7000e-02, -1.8424e-02, -3.1239e-04,
          -2.6613e-02,  7.8423e-03, -1.6894e-04,  1.2777e-03,  7.2483e-03,
           4.5428e-03, -1.1538e-02,  6.1394e-03,  2.6358e-03, -1.3502e-02,
           1.4586e-02,  2.4083e-03,  8.2994e-03,  2.4498e-03, -7.1188e-03,
           2.0390e-02, -1.6906e-02,  8.8853e-03, -2.5398e-02, -1.2430e-02,
          -1.1000e-02,  7.6121e-03,  2.6860e-02, -9.3448e-03, -2.6215e-02,
           2.9991e-02,  3.0229e-04, -4.2701e-03, -2.8976e-02,  3.0112e-02,
           3.3264e-03, -4.8080e-02,  1.2440e-02,  1.0355e-02, -2.5908e-02,
          -1.6409e-03,  3.0127e-02,  1.9354e-02,  1.9187e-02,  1.9502e-02,
          -3.6068e-02,  1.4241e-03, -3.3100e-02,  2.6522e-02,  3.6987e-02,
           1.0592e-02, -1.8700e-02,  1.4701e-02,  4.9089e-03, -1.3467e-02,
          -3.0542e-02,  9.9424e-03,  2.3989e-02,  2.3754e-03, -1.4994e-02,
           2.7103e-02, -4.2853e-02, -5.1756e-03,  2.4971e-03, -2.1199e-02,
          -6.7599e-03, -8.9903e-03,  8.9452e-03,  1.1157e-02,  1.1922e-02,
           4.7989e-03,  3.0004e-02, -8.9866e-03,  1.3780e-02,  4.9916e-03,
          -1.3007e-02,  1.6127e-02,  2.4898e-02, -2.4144e-02, -3.5631e-04,
          -3.2145e-02, -2.9446e-02,  6.7908e-03,  1.5150e-02,  1.6319e-02,
          -2.7970e-02,  1.9815e-02, -1.6427e-02, -4.2961e-02, -7.4626e-03,
          -2.7057e-02, -7.7623e-04,  1.5423e-02,  7.4936e-03,  4.4342e-02,
           3.3780e-02, -3.5755e-03,  2.6266e-03,  2.3668e-02,  5.4603e-03,
          -4.1463e-03,  9.6786e-03, -3.6139e-02,  1.6757e-02, -1.3365e-03,
           4.4987e-03,  5.2447e-03, -1.2068e-03, -4.7771e-03, -3.9374e-02,
          -3.7780e-03,  5.0875e-04, -2.9228e-02,  2.8788e-02,  2.5050e-02,
           3.8069e-02, -1.2228e-02,  3.4859e-02, -5.3257e-03, -1.7662e-02,
          -1.2328e-02, -1.2575e-02,  2.0601e-02,  2.0608e-02,  1.3728e-02,
          -6.9404e-03, -1.9951e-02,  3.4126e-02, -1.3379e-03,  1.3572e-02,
          -6.4355e-03, -2.6781e-03,  3.7740e-06,  3.0566e-02,  2.9383e-02,
           1.5304e-03, -1.1918e-02,  3.2720e-03,  4.5249e-03,  2.6771e-02,
           1.2805e-02,  1.5985e-02, -9.8685e-04,  9.3475e-03, -5.1904e-03,
           5.9335e-03,  4.9200e-02, -2.2765e-02, -1.8987e-02,  5.9160e-03,
           1.0388e-02,  1.5985e-02,  3.1543e-02,  3.4822e-03,  1.2989e-02,
           2.3488e-02, -4.6473e-02, -1.8519e-02, -2.8325e-02,  3.4558e-02,
           1.3674e-02,  3.6617e-02,  4.7060e-02, -2.3216e-02,  3.8835e-02,
          -3.5663e-02,  1.1365e-02, -8.8621e-03, -2.5215e-02, -5.0030e-03,
           2.0586e-02,  4.7875e-02, -4.7368e-02, -9.6521e-04,  1.2489e-02,
          -3.5025e-03, -5.5604e-02,  1.0812e-02, -1.3535e-02, -2.1660e-02,
          -9.2638e-04,  1.6306e-02, -3.5642e-02, -8.1023e-03,  1.4145e-02,
           1.3581e-02,  1.3297e-02,  2.1377e-02,  2.7069e-02,  3.9107e-03,
           3.0512e-02, -2.8207e-02,  1.3922e-02, -3.1912e-03,  3.3006e-02,
          -2.9929e-02,  1.9227e-02,  1.4947e-02,  1.9104e-02,  5.3711e-02,
           1.6998e-02,  1.0710e-02, -1.3147e-02,  1.8710e-02,  4.6459e-02,
          -4.1042e-03,  1.1367e-02,  8.4475e-04, -2.9076e-02, -1.1287e-02,
          -1.0073e-02, -1.2315e-03,  4.5673e-02, -3.4253e-02, -8.0176e-04,
           1.3860e-02,  5.5825e-04,  1.4698e-02,  1.6022e-02, -4.0031e-04,
           1.0504e-03, -8.5355e-03,  1.1751e-02,  1.6141e-02, -2.3461e-02,
          -6.5574e-03,  1.6267e-02,  2.6525e-03,  1.8849e-02,  2.2115e-02,
          -5.5160e-03, -2.0838e-02,  1.6493e-02, -2.3120e-02, -1.4241e-02,
          -2.0185e-02,  4.3204e-03,  1.9846e-02,  1.6414e-02,  8.1226e-03,
          -2.9621e-02,  1.5315e-02, -9.5808e-03, -1.8039e-02, -1.6257e-03,
           2.2344e-02,  1.6748e-02,  8.5353e-04, -2.9435e-04, -1.0079e-02,
           4.8947e-03,  3.7207e-02,  1.2837e-05, -4.4364e-03,  3.5662e-02,
           1.3556e-02, -2.8398e-03, -2.7276e-02, -3.0524e-02,  3.1979e-04,
           1.0185e-02, -1.4628e-02,  2.4827e-02,  2.9906e-02, -8.4607e-03,
           8.8056e-03, -8.3372e-03,  3.6619e-02, -1.4040e-03,  2.6846e-02,
           1.0616e-03, -9.1817e-03,  3.1776e-02,  2.5327e-02,  4.8697e-02,
          -4.3847e-03,  1.1643e-02, -4.8678e-02,  1.0352e-02, -1.6817e-02,
           4.3726e-02,  1.9639e-02,  5.9604e-03, -7.9554e-03, -2.2178e-03,
          -3.3892e-02,  6.8804e-03,  6.1205e-03, -1.4069e-02,  3.8441e-02,
           4.5217e-02, -7.8523e-03,  8.7586e-03, -8.3494e-03, -1.0480e-02,
          -4.4030e-04,  4.2623e-03,  1.7555e-02, -2.2767e-05, -1.5441e-02,
          -3.2346e-02,  4.0603e-02, -1.2919e-03,  2.6504e-02, -1.2944e-02,
           9.7036e-03, -7.7220e-03,  5.0026e-03,  1.8259e-02, -4.8058e-05,
           1.3671e-02, -1.8159e-02, -7.2588e-03,  9.4284e-03, -6.2871e-03,
           2.8289e-02,  2.7465e-02,  4.1345e-04,  1.3305e-02,  3.5455e-02,
          -8.5698e-03,  2.2504e-02, -2.3062e-03, -1.4302e-02,  2.0339e-02,
          -5.0156e-02, -1.4647e-02, -1.0414e-02, -1.9123e-02, -4.2766e-03,
          -3.0585e-04,  7.9152e-03, -9.5553e-03, -6.4496e-03, -1.9488e-02,
           5.0666e-02, -2.0977e-02,  5.1758e-03, -7.1364e-03,  1.8892e-02,
           1.3226e-02,  1.9283e-02, -2.1931e-02, -4.2097e-03, -8.7306e-03,
          -2.4686e-03, -4.4907e-03,  5.2447e-03,  1.3925e-02,  1.3301e-02,
          -8.7175e-03,  2.2368e-02, -2.3335e-02,  1.7179e-02,  5.2739e-03,
          -1.0493e-02,  1.5062e-03, -1.5862e-02,  6.7996e-03,  4.4245e-03,
          -1.0224e-02,  1.6634e-02, -1.2622e-02,  1.1918e-02, -2.8446e-04,
          -1.0741e-02, -2.1466e-02,  1.6730e-03, -2.1848e-02,  1.2088e-02,
          -1.1793e-02,  7.2762e-03,  1.5306e-02, -2.6147e-02,  1.8303e-03,
           6.4970e-03, -4.2655e-03, -9.6156e-03, -3.7883e-02,  3.8359e-03,
          -1.1391e-02, -1.1761e-02,  1.1007e-02,  7.7339e-03,  2.1554e-02,
          -4.4842e-02, -1.8659e-02, -6.9751e-02,  1.5402e-03,  1.3170e-02,
          -2.0635e-02, -3.3031e-03, -1.9197e-03, -1.0897e-02, -1.8673e-02,
          -4.3875e-03,  4.6537e-03, -2.2282e-02,  2.4610e-02, -1.1908e-02,
          -7.0104e-03,  1.4505e-02,  3.1798e-02, -8.9586e-03, -2.0324e-02,
          -2.5268e-02,  1.0662e-02, -6.2097e-03,  5.7492e-03, -5.0113e-03,
           6.3476e-03, -4.9055e-04,  2.3023e-02, -1.7078e-02, -1.3172e-02,
           2.6855e-02, -2.2852e-02,  4.3650e-02,  1.2525e-02, -9.9746e-03,
           3.7745e-02, -1.1934e-03, -3.6497e-02, -4.4432e-02,  2.7902e-02,
           3.5205e-03, -8.7762e-03,  2.4928e-02, -1.6652e-02, -1.7537e-02,
          -2.4149e-02, -1.6452e-03,  5.6353e-03, -2.5710e-02,  1.9269e-04,
           3.0673e-02,  3.5627e-04, -8.6323e-03, -4.8978e-02, -1.5240e-02,
           7.1863e-03, -1.2483e-02,  3.9384e-02, -2.1824e-02, -2.4957e-02,
          -4.4903e-03, -1.4961e-02, -1.1130e-02, -6.3350e-03,  1.1559e-02,
           8.0254e-03,  2.0269e-02,  1.7414e-02,  3.5825e-02,  2.7512e-02,
          -1.1589e-02,  3.3028e-02, -3.8674e-03, -1.5216e-02,  7.2865e-03,
           1.6852e-02,  1.0351e-02, -1.7066e-02, -2.2748e-02,  8.6860e-04,
          -4.6736e-02, -3.6264e-02, -4.4183e-03, -2.2508e-02, -1.0042e-02,
          -3.5886e-03,  1.9865e-02,  1.0162e-03,  3.1732e-02,  6.2844e-03,
          -2.3055e-02,  2.3749e-02, -4.2882e-02, -1.8558e-02, -9.8536e-03,
           1.2969e-02,  1.2472e-03,  1.4538e-02, -2.1782e-03,  1.7785e-03,
           6.9210e-03,  6.3778e-03,  1.7221e-02, -2.8154e-03, -2.3289e-02,
          -2.5083e-02,  1.4055e-02,  2.9001e-02, -4.6247e-02,  4.3228e-03,
          -3.6423e-04, -4.4795e-03, -1.0851e-02, -2.5053e-03,  1.4903e-02,
          -4.7806e-03,  3.3192e-02,  2.1939e-02, -1.6550e-02,  2.8276e-02,
          -4.9085e-03,  1.1456e-02, -4.3340e-02, -1.2924e-02,  1.9902e-02,
           6.1120e-03, -3.2620e-02,  8.4828e-03, -7.8478e-03, -2.1752e-02,
          -1.2490e-03,  2.3434e-02,  2.6329e-03]]], requires_grad=True)), ('pos_embed', Parameter containing:
tensor([[[ 0.0007, -0.0212, -0.0476,  ...,  0.0215,  0.0323,  0.0059],
         [-0.0203, -0.0496, -0.0188,  ...,  0.0350,  0.0199, -0.0266],
         [-0.0118, -0.0513,  0.0064,  ...,  0.0378, -0.0137,  0.0035],
         ...,
         [ 0.0081, -0.0103,  0.0311,  ..., -0.0156, -0.0152, -0.0082],
         [-0.0324,  0.0412,  0.0006,  ..., -0.0049, -0.0287, -0.0357],
         [ 0.0129,  0.0027,  0.0261,  ..., -0.0154, -0.0038,  0.0060]]],
       requires_grad=True)), ('dist_token', Parameter containing:
tensor([[[ 2.6871e-02, -9.4504e-03, -1.4909e-02, -1.5779e-02, -1.5089e-02,
           5.0466e-03, -2.3262e-02,  2.7667e-03, -3.0145e-02,  2.3305e-03,
          -7.5296e-03, -1.1494e-02,  1.3512e-02,  3.4083e-03,  4.5222e-03,
           1.9648e-02, -9.6111e-03, -4.8145e-03, -5.6631e-02,  1.3463e-02,
          -2.4567e-02,  2.0157e-02, -3.6645e-03, -7.1301e-03, -2.6260e-02,
          -2.2664e-02, -1.5077e-03,  4.1242e-02, -4.3290e-02, -1.9414e-02,
           2.5619e-02,  3.3025e-02, -3.0008e-02, -4.3790e-02,  1.6700e-02,
           3.0675e-02, -8.2081e-05, -1.5417e-02,  2.4891e-03,  1.6794e-02,
           2.1496e-03, -1.8805e-02, -1.6501e-02, -2.3572e-02,  3.7135e-02,
           2.6761e-02, -1.5325e-02, -3.2849e-03,  4.5773e-02, -4.6098e-02,
           1.8462e-02, -1.4809e-02,  8.9594e-03, -1.0764e-02,  2.5930e-02,
           5.2569e-03,  1.2436e-02,  2.3863e-02,  7.8594e-03, -2.8751e-02,
          -2.5103e-02, -3.1337e-03, -2.5282e-02, -4.9222e-03, -1.3751e-03,
          -1.8705e-02,  1.7649e-02, -1.1957e-02,  1.4965e-02,  1.4208e-02,
          -1.9059e-02, -5.1797e-03,  3.1092e-02,  2.4248e-03,  1.9465e-02,
          -3.0954e-03, -1.2696e-03,  2.9176e-02,  1.9225e-02, -9.3523e-03,
           3.2621e-02, -2.6139e-04,  2.9980e-02,  3.7578e-02, -3.9809e-02,
          -1.8057e-03, -3.2311e-02, -8.5565e-03, -1.0892e-02,  1.7254e-02,
           4.0573e-03, -4.4167e-02, -1.1467e-02,  1.5882e-02, -8.5760e-03,
          -1.2591e-02, -5.3778e-02, -1.1262e-02,  1.4140e-02, -1.9947e-02,
          -9.3816e-03, -2.9499e-02,  1.1618e-02,  1.0789e-03,  1.1736e-04,
           8.4538e-03,  4.1167e-03,  2.4573e-02, -9.0321e-03, -2.7275e-02,
          -1.0183e-02, -1.3810e-02,  1.2397e-02, -2.0909e-02,  1.0032e-02,
           5.9960e-03,  1.6066e-02, -7.4681e-03, -6.8375e-05,  3.3518e-02,
           3.6447e-03, -1.4386e-02, -9.1420e-03,  1.1226e-02,  1.7375e-02,
           2.8579e-02,  2.6406e-02, -6.8638e-03, -3.4823e-04, -4.8311e-03,
           3.2558e-03,  7.0307e-04,  1.0493e-02, -3.7566e-02,  4.7469e-02,
           4.9606e-03, -1.4674e-02, -1.6461e-02,  5.7394e-03,  1.4203e-02,
           2.6287e-02, -6.4343e-03, -1.5688e-03, -6.5038e-04,  4.1161e-02,
          -2.2678e-02, -4.4804e-03,  2.6149e-02,  2.2898e-02,  2.8226e-02,
          -3.6704e-03, -3.3124e-02,  1.6093e-02,  3.8484e-03, -1.6877e-02,
          -2.1022e-02, -8.6768e-04, -8.6108e-03, -2.3514e-02, -5.6919e-03,
          -2.2415e-02,  2.5786e-02,  3.7835e-03, -1.3818e-02,  1.4774e-02,
          -8.6145e-03,  4.0509e-03, -3.0438e-02,  2.5338e-02,  3.3807e-02,
           1.7056e-02, -1.2166e-02,  4.4515e-04, -3.6424e-02,  1.2502e-02,
          -3.0705e-02,  5.0723e-03,  1.8639e-02, -1.2790e-02,  2.0660e-03,
           4.0127e-02,  5.1277e-03,  1.4977e-02, -1.4321e-02, -1.3243e-02,
          -4.8657e-03, -1.0733e-02,  4.7141e-03,  2.4941e-02,  1.4976e-02,
          -2.4425e-02, -2.0808e-02, -3.0552e-02, -1.8913e-02,  1.3765e-03,
          -2.7349e-02,  1.8016e-02, -7.6403e-03, -2.0850e-02,  3.7954e-02,
          -1.8610e-02,  9.2029e-03,  1.4001e-02,  3.9800e-03,  1.3995e-03,
           7.7416e-03,  1.8838e-02,  1.1438e-02,  3.4198e-03,  1.3557e-03,
          -2.3544e-02, -2.8629e-02, -2.5106e-02, -1.1469e-02,  1.1734e-02,
          -1.2642e-02, -2.6394e-02,  8.3675e-03,  3.3110e-02,  1.8025e-02,
          -1.2837e-03, -1.8683e-02, -1.3419e-03, -5.0360e-03,  3.6267e-02,
           1.7096e-02, -1.4383e-03, -1.8594e-02,  2.1178e-03, -3.0888e-02,
           2.3747e-02,  2.2941e-02,  9.5101e-03, -1.5062e-02, -4.1453e-02,
          -1.4319e-03, -2.0388e-03,  1.8680e-03,  2.5775e-02, -2.2068e-02,
           3.4513e-02, -1.8218e-02, -1.6469e-02,  2.1646e-02, -1.5782e-02,
          -1.8500e-02, -2.3933e-02,  8.0599e-03,  6.1220e-03, -9.2812e-03,
           3.8424e-02, -1.4739e-02,  1.7590e-03, -5.7073e-03,  1.3295e-02,
          -4.1692e-03, -8.7915e-03, -1.8543e-02,  7.6136e-03, -3.2292e-02,
           8.0910e-03, -1.0512e-02, -2.8950e-02, -4.7954e-02, -4.1688e-02,
           1.5387e-02, -3.5378e-02,  9.5247e-04,  1.0359e-02,  3.2204e-02,
           3.2000e-02, -3.0008e-04,  2.0769e-02,  3.2130e-02, -1.2647e-02,
          -2.8633e-03,  1.1563e-02,  4.1643e-02, -4.6580e-04, -2.2136e-03,
           6.7077e-03,  1.3119e-02,  5.7375e-03, -2.7433e-02, -4.4753e-03,
           7.5838e-03,  2.9578e-02,  4.8453e-03, -1.9559e-02, -7.4961e-03,
           5.9079e-03,  3.5967e-03, -8.2474e-03, -1.2708e-02,  5.2964e-03,
          -2.1202e-02, -4.9311e-02,  1.4188e-02, -9.7293e-03, -3.3147e-03,
           2.1655e-02,  1.6224e-02,  7.1921e-03, -2.5374e-02, -8.8319e-03,
           8.3130e-06, -1.8914e-02, -2.5647e-03,  4.3376e-03,  3.2186e-02,
           1.0929e-02, -1.9377e-03,  8.4460e-03,  9.9420e-04,  7.1882e-03,
          -3.6281e-02,  3.9724e-02,  4.9714e-02,  3.7806e-03, -1.9857e-02,
           6.5767e-03,  2.2623e-03, -8.3301e-03, -3.8818e-02,  7.0133e-03,
          -3.7391e-02, -1.8734e-02,  3.8113e-02, -1.3868e-02,  3.4090e-03,
          -2.0095e-02, -1.6049e-02,  1.8599e-03, -3.2544e-03, -2.5240e-02,
          -4.8754e-02,  2.3040e-02,  1.5181e-02,  1.1792e-02,  9.7207e-04,
          -1.0842e-02,  1.3712e-02,  2.1518e-02,  3.6656e-03, -8.9864e-03,
           3.1403e-02, -3.4306e-03, -1.3385e-03, -5.3824e-03, -1.9286e-02,
           8.6304e-03,  1.7017e-02, -1.2395e-02,  1.5661e-02, -5.0197e-03,
           1.8519e-02,  1.0599e-02,  9.6614e-03, -1.0521e-02, -2.0761e-02,
           4.3677e-03,  9.8322e-03,  9.3758e-03, -4.8213e-02, -1.8753e-02,
           8.6695e-04, -9.7802e-03, -2.2213e-02, -1.5387e-02,  3.5126e-02,
           2.1394e-02, -5.7889e-03, -7.1188e-03, -1.6146e-02, -3.5761e-02,
           8.5258e-03, -2.3749e-02, -1.7729e-02,  1.8618e-02, -3.5687e-02,
           6.7303e-04,  3.3565e-02,  1.2533e-02, -4.4098e-02, -5.8183e-03,
          -2.1081e-03,  6.9156e-03,  1.8300e-02,  6.1586e-03, -3.3959e-02,
           4.0264e-03, -8.2206e-03,  9.7372e-05, -1.5681e-02, -2.7174e-02,
          -6.1904e-03,  7.4321e-03,  1.1152e-02, -2.4380e-02, -2.4635e-02,
          -3.0163e-02, -7.1422e-04, -1.5075e-02, -2.1954e-02, -4.8207e-03,
          -2.4516e-02,  1.3283e-02, -1.4476e-02, -1.8973e-02, -4.2422e-03,
          -8.9862e-03, -8.5601e-03, -1.1560e-02,  3.4786e-02, -2.9815e-02,
           1.9390e-02,  1.3264e-02, -1.7276e-02, -2.1863e-02,  2.0951e-02,
           2.3807e-02, -6.9451e-03, -3.1408e-02,  2.2897e-02,  2.2070e-02,
          -1.6241e-03, -8.4490e-04, -1.2234e-02,  1.3366e-03, -1.2343e-02,
          -1.7729e-03,  6.5711e-03, -4.4578e-03,  1.6590e-02,  9.3124e-03,
          -1.7846e-04,  4.5732e-03,  1.3333e-02,  2.8995e-03,  1.5884e-02,
           1.7526e-02,  1.5641e-02, -1.5062e-02, -2.0778e-02,  8.6380e-03,
           1.7635e-02,  9.6811e-03, -1.4765e-02, -1.3698e-02, -2.9000e-02,
          -4.5998e-02, -8.7365e-03,  5.8690e-03,  2.1368e-02,  3.5294e-02,
           2.3785e-03,  2.2558e-02,  2.4745e-02,  1.0920e-03, -2.7410e-03,
          -1.1332e-02,  1.5273e-02,  1.5621e-02,  7.0579e-03,  1.6074e-02,
          -3.5964e-02,  6.8756e-03, -5.8009e-04,  9.4629e-05,  1.4301e-02,
          -7.3841e-03,  3.2610e-02,  2.2018e-02,  9.5021e-03, -3.8646e-03,
           3.2302e-02,  2.9501e-02, -1.6117e-03, -1.2043e-02, -2.3985e-02,
           1.9911e-02,  1.8649e-02,  1.1804e-02,  2.5911e-03,  4.6674e-03,
           1.3447e-02, -3.2260e-02,  2.4191e-02, -3.2932e-03,  1.3960e-02,
          -7.2551e-03, -2.1293e-02,  5.2529e-02, -2.6458e-02, -1.2947e-02,
          -1.2640e-03,  9.8977e-03, -2.8202e-02, -8.2507e-03,  3.4838e-02,
          -2.4591e-03, -1.2230e-02,  2.7102e-04, -1.1996e-02,  1.2201e-03,
          -8.6074e-03,  2.5336e-02,  7.9944e-04, -2.8811e-02, -3.2593e-02,
          -1.1952e-02, -8.8557e-03,  2.0477e-02, -7.0024e-03, -1.3712e-02,
           1.6910e-04, -1.5489e-03, -8.9832e-03,  1.6916e-02,  3.4053e-02,
          -9.2416e-03, -3.7985e-03,  1.6357e-02, -4.0132e-02,  1.1227e-02,
           3.6299e-03, -7.9102e-03,  1.9453e-02, -1.2102e-02,  1.7376e-02,
          -5.7054e-03,  6.0439e-03, -3.6006e-03,  2.1987e-02,  2.4278e-02,
           1.4290e-02, -2.0658e-02, -2.6258e-02, -5.0269e-03, -1.5013e-02,
           3.2827e-03, -2.6553e-02,  2.3492e-02,  4.8784e-03,  2.8771e-02,
           6.8793e-03,  4.0396e-02,  3.3204e-02,  7.7604e-03,  2.6719e-03,
          -2.3205e-02, -3.4622e-03, -2.8449e-02,  9.2248e-03,  4.8853e-03,
          -1.6261e-02, -3.9431e-02, -1.6637e-02,  2.6163e-02, -1.3843e-02,
           1.4224e-02,  2.4375e-02, -2.8367e-02,  1.6432e-02,  8.3519e-03,
           1.8098e-02,  1.6922e-02,  3.6542e-02, -1.5631e-02,  1.5890e-03,
           1.7890e-02, -1.2188e-02,  2.8524e-02, -1.0949e-02,  8.3531e-03,
          -1.5429e-02, -1.8114e-02,  6.5050e-03, -2.3625e-02, -9.1742e-03,
          -1.3638e-02, -4.3901e-03, -3.9238e-02,  1.4048e-02, -2.3187e-02,
           4.5502e-03,  2.4712e-02, -1.3921e-02,  5.9115e-03,  4.1334e-03,
          -2.4479e-04, -1.6689e-02,  1.0531e-03, -1.0510e-03, -1.2697e-02,
           3.3254e-02,  4.1601e-02, -1.2942e-02, -3.9419e-03, -1.1451e-02,
          -2.8747e-02,  2.2074e-02, -8.2189e-03,  3.4463e-02,  2.1466e-02,
          -7.2496e-03,  2.5866e-02,  1.8154e-02, -1.5469e-02, -2.2968e-02,
          -5.9429e-04,  3.6822e-02, -2.2563e-02,  7.1218e-03, -1.2038e-02,
          -6.8247e-04, -3.4443e-02, -1.3981e-02,  1.0537e-03,  2.9234e-02,
          -2.3871e-03, -1.1991e-02, -4.1662e-03, -1.1999e-02, -9.1633e-03,
          -3.4067e-03,  2.3433e-02,  3.5574e-03, -1.1942e-02, -2.6932e-02,
           2.1168e-02, -2.0833e-02, -2.0783e-03,  4.1622e-02, -5.2207e-03,
           4.9482e-03,  1.8165e-02,  1.4073e-02, -9.7069e-03, -1.6574e-02,
           8.0350e-03, -4.2096e-02,  1.1631e-02, -4.1083e-03,  3.9907e-02,
          -3.4426e-03, -1.2308e-02, -9.8917e-03,  4.1882e-03,  6.1643e-03,
           1.2038e-02,  2.8023e-03,  1.4183e-03, -2.2659e-02, -3.2241e-03,
          -9.9333e-03, -3.8971e-02, -3.7557e-02, -6.5430e-03,  2.3129e-02,
           1.9231e-02,  2.6007e-03, -1.0382e-02, -1.8070e-03,  1.1586e-03,
          -2.6434e-02, -3.7828e-03,  2.5710e-02, -9.7210e-03, -3.7218e-03,
           4.0884e-03, -4.2035e-03, -1.0074e-02, -3.0729e-02,  3.7776e-02,
           1.2559e-02,  2.1074e-02,  1.3008e-02, -1.3694e-02,  5.1714e-03,
          -2.0688e-02, -5.0886e-03,  9.3377e-05, -1.7591e-02,  2.4429e-02,
           3.2857e-02,  1.6742e-02,  1.0765e-02, -3.1826e-03, -1.5236e-02,
          -1.1237e-02, -2.5182e-02, -5.0943e-02,  2.7414e-02, -7.3673e-03,
          -8.5057e-03, -2.3540e-02, -2.0887e-02,  2.1342e-04, -2.8653e-02,
          -4.1551e-02,  3.6847e-02,  1.4326e-02,  3.4644e-03,  9.5216e-03,
          -2.0851e-02, -3.7057e-03,  1.8584e-02,  1.4174e-02, -1.6188e-02,
           1.5953e-02, -3.2771e-02,  3.7817e-03, -4.3373e-04, -1.3508e-02,
           4.7816e-03,  7.6784e-04,  7.2183e-03,  2.3690e-02, -9.4808e-04,
           7.2843e-03, -2.1523e-02, -9.5093e-04,  1.6471e-02, -1.5631e-02,
          -2.6340e-02, -2.1056e-02, -7.0936e-03,  1.1262e-02, -3.6554e-03,
          -1.6651e-02,  3.7919e-03,  2.8507e-02,  1.3429e-02, -1.2508e-02,
          -4.9086e-02,  2.3280e-03,  3.1339e-02,  8.5618e-04, -1.6939e-02,
           1.1924e-02,  5.1565e-04,  1.9759e-02,  1.2530e-02,  1.7427e-02,
           3.5611e-03,  2.2171e-03, -1.6787e-02,  1.5273e-02, -7.0764e-04,
           7.8608e-04,  8.4691e-03,  1.4748e-02,  2.8575e-02,  3.4430e-02,
          -2.6320e-02,  2.9078e-04,  3.3694e-02, -1.4542e-02, -2.6796e-02,
           2.6620e-03, -1.0374e-03,  2.5259e-02, -2.7591e-02, -7.5254e-03,
           2.3821e-02,  2.0561e-02,  1.6070e-02]]], requires_grad=True))])
_buffers=OrderedDict()
_non_persistent_buffers_set=set()
_backward_hooks=OrderedDict()
_is_full_backward_hook=None
_forward_hooks=OrderedDict()
_forward_pre_hooks=OrderedDict()
_state_dict_hooks=OrderedDict()
_load_state_dict_pre_hooks=OrderedDict()
_modules=OrderedDict([('patch_embed', PatchEmbed(
  (proj): Conv2d(1, 768, kernel_size=(16, 16), stride=(16, 16))
)), ('pos_drop', Dropout(p=0.0, inplace=False)), ('blocks', ModuleList(
  (0): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (1): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (2): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (3): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (4): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (5): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (6): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (7): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (8): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (9): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (10): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (11): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
)), ('norm', LayerNorm((768,), eps=1e-06, elementwise_affine=True)), ('pre_logits', Identity()), ('head', Linear(in_features=768, out_features=1000, bias=True)), ('head_dist', Linear(in_features=768, out_features=1000, bias=True))])
num_classes=1000
num_features=768
embed_dim=768
default_cfg={'url': 'https://dl.fbaipublicfiles.com/deit/deit_base_distilled_patch16_384-d0272ac0.pth', 'num_classes': 1000, 'input_size': (3, 384, 384), 'pool_size': None, 'crop_pct': 1.0, 'interpolation': 'bicubic', 'mean': (0.485, 0.456, 0.406), 'std': (0.229, 0.224, 0.225), 'first_conv': 'patch_embed.proj', 'classifier': 'head'}
