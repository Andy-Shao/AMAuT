training=True
_parameters=OrderedDict([('cls_token', Parameter containing:
tensor([[[-6.2048e-04, -1.4397e-02,  1.2795e-02, -9.0607e-03,  1.4031e-02,
          -3.0564e-03,  3.7548e-03,  2.1013e-02, -7.9151e-03, -6.5849e-03,
           4.6947e-03,  3.6799e-02,  9.0255e-03, -8.5029e-03, -2.0223e-02,
           4.0151e-02, -3.1656e-02, -3.0007e-02,  4.8781e-03,  1.7852e-02,
          -8.0038e-03, -1.5166e-02,  7.1828e-03,  1.3019e-02,  7.4843e-03,
           1.8920e-02,  9.9539e-03,  1.3924e-02, -2.6690e-03,  6.8757e-02,
          -2.1479e-02,  1.3543e-02, -1.8019e-02, -1.7859e-02, -2.8393e-02,
          -3.6581e-02, -9.2206e-04, -2.8206e-03, -4.2773e-03,  1.9036e-02,
          -2.5547e-02,  1.0429e-03,  4.5643e-02, -2.6403e-03,  6.8052e-03,
          -2.5707e-02,  2.2893e-02,  9.3496e-03,  1.5984e-02, -1.3409e-02,
          -1.0795e-02,  3.4863e-02,  2.7050e-02,  2.4765e-02, -2.0902e-02,
          -5.1218e-02, -8.8657e-03,  4.8747e-03, -1.1169e-02,  2.1311e-02,
           3.2048e-02,  3.5458e-02, -1.6668e-02, -8.0786e-03, -5.6030e-03,
          -5.2247e-03, -2.4168e-02,  1.4058e-03,  1.1726e-02,  1.9219e-02,
          -2.1592e-02,  3.5757e-02,  1.4679e-02, -5.5140e-03, -2.2083e-02,
           1.5442e-02, -8.1819e-03,  2.0531e-03,  1.1835e-02,  4.2757e-02,
          -8.5477e-03,  3.9714e-03, -1.5333e-02, -8.9372e-03,  1.4823e-03,
           7.5901e-03, -3.4774e-02,  7.9888e-03,  9.5734e-03,  2.8280e-02,
           3.6431e-02,  7.6910e-03,  2.6027e-02, -2.0540e-02, -1.1423e-03,
           1.4789e-03, -1.2677e-02, -6.5287e-03,  2.5363e-02,  9.9652e-03,
           8.4637e-03, -3.2664e-02, -3.2883e-02, -7.6232e-03,  1.0523e-02,
           1.3730e-02,  6.6363e-03,  2.5286e-02, -7.5893e-03, -1.9600e-02,
           9.5273e-04,  1.6726e-02, -2.5645e-02, -5.5397e-02,  1.7594e-03,
          -7.4644e-03,  3.0444e-03, -2.8842e-02,  7.8264e-03, -1.9354e-02,
           1.2293e-02,  1.0940e-02,  6.5042e-03, -1.8454e-03,  4.0785e-03,
           3.0847e-02, -8.6668e-05, -2.2048e-02, -9.1980e-03,  2.0665e-02,
           2.9065e-04, -2.0104e-02, -1.6906e-02,  1.2975e-02,  2.2256e-02,
           8.2679e-03,  8.8358e-03, -2.1930e-03, -7.8461e-03, -2.5658e-02,
           2.1120e-02, -2.3764e-02,  2.0582e-02,  1.0120e-02,  4.8224e-02,
          -6.1051e-03,  1.6990e-02, -4.0136e-02, -2.4294e-02,  2.4073e-02,
          -2.5464e-02, -8.9092e-03,  9.3009e-03, -2.3250e-02, -1.0215e-02,
           2.2511e-02, -9.1076e-03,  6.4305e-03, -2.9375e-03,  7.2739e-03,
           3.0197e-02, -1.4076e-02, -1.5339e-02,  2.5259e-03,  2.1904e-02,
           1.6645e-02, -6.0845e-03,  6.3780e-03,  1.2723e-02, -3.0602e-02,
           8.6190e-03,  2.5699e-02,  1.9869e-03,  1.5442e-02, -1.1445e-02,
           1.2696e-02,  7.5691e-04, -1.8975e-02,  3.4567e-02, -3.3255e-02,
           4.6884e-02,  2.9019e-02, -1.1272e-02, -1.3075e-02, -1.6194e-02,
           2.3906e-04,  2.6701e-02, -1.0555e-02, -1.6529e-02,  2.9148e-02,
          -5.1847e-03,  2.6621e-03,  9.9104e-03, -4.9177e-03,  2.2447e-02,
           1.1719e-02, -2.4641e-02,  2.2658e-02,  8.5859e-03, -9.0743e-03,
           1.6671e-02, -4.6507e-03, -2.3727e-02, -2.4661e-03, -1.4776e-02,
          -1.8822e-02,  3.0296e-02, -2.2086e-02,  1.7878e-02, -1.5911e-02,
           7.8016e-03, -1.4618e-02, -2.2141e-02, -5.4715e-03, -3.0555e-02,
           2.8769e-03,  3.8931e-02, -1.2431e-02, -3.1559e-02, -1.4324e-02,
           4.3723e-03, -2.4613e-02,  2.2915e-02,  1.0049e-02,  2.3341e-02,
          -1.5698e-02,  2.4340e-02,  2.2951e-02,  6.9574e-04, -2.1789e-02,
           4.2636e-02, -1.7109e-02,  2.4615e-02, -1.5301e-02,  4.3273e-03,
           3.4490e-02, -9.1747e-03,  2.7826e-03, -3.7572e-02,  1.1595e-02,
          -1.1027e-03,  5.7057e-03, -2.2896e-03, -4.2443e-03, -1.4062e-02,
           2.4732e-02,  1.2532e-03, -8.5091e-03, -9.6793e-03, -5.5809e-03,
          -8.4848e-03, -4.0626e-03, -9.0254e-03,  3.4976e-02,  1.6991e-02,
           7.1553e-03, -1.8673e-02,  5.5191e-03,  2.7291e-02,  2.0681e-02,
           2.2083e-02,  3.9360e-02,  3.1491e-02,  1.2266e-02,  3.8213e-02,
          -9.3953e-03, -1.1407e-02, -9.4895e-03,  1.0364e-02, -5.7846e-03,
          -2.6988e-02,  1.5072e-02, -9.8690e-03, -1.1179e-02,  1.4914e-02,
          -3.8070e-04, -7.9267e-03,  1.0081e-02,  8.7872e-03, -4.6578e-02,
           6.8641e-03, -3.0478e-02,  1.8856e-03,  3.3087e-03, -3.4895e-02,
          -1.3173e-02, -1.4901e-02,  2.7905e-02, -2.5391e-02, -4.4798e-03,
          -8.1696e-03, -8.7588e-03,  1.9747e-02,  8.1504e-03, -2.8036e-02,
           1.3215e-02, -1.9789e-02, -2.0517e-02,  1.6532e-02,  2.4238e-02,
           2.2137e-02,  1.8447e-02, -3.4509e-02,  2.9317e-02,  3.6184e-02,
          -2.8663e-03,  1.1200e-02,  1.5179e-03,  1.8281e-02,  5.1101e-02,
           4.3104e-03,  1.5712e-02,  2.7606e-04,  4.3815e-03, -1.2775e-02,
           2.0128e-02, -1.5918e-02,  5.7578e-03,  1.6440e-02, -1.0892e-02,
           4.9188e-03, -1.7887e-02,  4.1491e-02, -8.6726e-03,  4.3002e-05,
           6.9440e-03,  1.5071e-03,  1.5314e-02,  2.8105e-02,  7.2597e-03,
          -4.2879e-02, -1.6914e-02,  1.6729e-02,  2.5120e-03,  3.4883e-02,
          -2.7198e-02, -1.3422e-02, -1.0925e-02, -8.8721e-03, -1.2011e-02,
          -3.0553e-04,  2.4068e-03, -1.9025e-02,  2.9387e-03,  1.3191e-03,
          -3.9926e-02,  5.8409e-03, -3.1860e-02, -2.3831e-02,  1.8812e-02,
           8.9081e-03,  1.0052e-03, -7.7081e-03,  1.2268e-02,  2.5084e-02,
          -9.9046e-03,  7.7689e-04, -3.9530e-03,  8.6073e-04, -9.8777e-03,
           6.4453e-03, -4.5254e-02, -2.5350e-02,  3.0411e-02, -1.3023e-02,
           9.8426e-04, -2.9813e-03, -1.3122e-02, -1.8887e-02, -1.9316e-03,
           3.0832e-02,  1.2897e-02,  2.2437e-02,  1.4983e-02,  3.2177e-02,
          -7.3659e-04, -2.3830e-02,  8.4252e-03, -1.1923e-02, -8.6039e-03,
           3.3489e-02, -1.3695e-02,  1.7246e-03, -3.5333e-03,  6.2069e-03,
           3.6613e-02,  1.1201e-02, -1.0417e-02,  2.8130e-02, -9.9843e-03,
           1.9412e-02, -3.6400e-03, -1.3700e-03, -1.8402e-02, -1.9942e-02,
          -1.2436e-02, -6.1737e-04,  7.1502e-03,  2.9016e-02,  4.2835e-02,
           1.7829e-02, -2.3771e-02,  2.1365e-02, -1.1001e-02, -1.1533e-02,
          -1.3726e-02, -2.0376e-02, -2.1220e-02, -5.8686e-03, -1.1181e-02,
           5.1930e-03, -1.9990e-02,  2.4257e-02, -9.3018e-03, -3.0122e-02,
          -2.8224e-03, -2.1399e-03, -2.0887e-02, -2.2781e-02, -1.8124e-02,
          -1.4420e-02,  7.6585e-03,  4.2404e-02,  1.8981e-02, -2.7957e-02,
          -1.6756e-02,  1.4832e-02, -1.4214e-02, -7.9495e-03, -3.7017e-02,
          -1.6381e-02,  4.2669e-03,  1.9880e-02,  5.9707e-04, -3.3389e-03,
          -1.6021e-02, -3.3447e-02,  5.0612e-02, -1.0512e-02,  2.5612e-02,
          -2.2733e-02, -6.8575e-04, -3.5614e-03,  2.2784e-03, -3.2850e-02,
           5.5091e-04,  1.8055e-03, -2.7379e-02, -3.4759e-02,  2.0509e-02,
          -1.6352e-02, -3.9932e-03,  1.7744e-02, -1.3950e-02,  4.6745e-02,
           5.0714e-03,  2.1019e-02, -1.3432e-02,  5.6566e-03,  2.3927e-02,
          -1.9282e-02,  3.3967e-02, -5.2581e-03, -2.5566e-02,  1.7385e-02,
          -1.1919e-02,  8.1160e-03,  4.0659e-03, -1.2521e-02,  2.2588e-02,
          -2.2480e-03, -3.5407e-02, -3.6471e-02,  1.0559e-02, -2.5736e-02,
          -1.4852e-02,  1.6155e-02,  2.8323e-02,  2.7734e-03,  1.8443e-03,
          -2.7734e-02,  1.0364e-02,  1.2359e-02, -1.5215e-03,  4.3276e-02,
           2.3244e-02,  1.6877e-02, -3.6757e-03,  3.1462e-03,  3.5528e-02,
          -1.5213e-02, -3.7926e-02, -7.2436e-03, -1.1578e-04,  1.2377e-02,
          -3.6991e-02,  2.4008e-03, -2.2827e-02, -8.3441e-03,  2.2471e-03,
           1.8878e-02,  3.6145e-02, -2.9942e-02, -3.0354e-02,  6.1586e-02,
          -4.4288e-02,  1.2237e-02, -1.3407e-02,  1.6202e-02, -2.4117e-02,
          -9.0139e-03,  3.5301e-02,  1.1635e-02,  3.9488e-02,  3.0559e-03,
          -4.7767e-03,  5.9932e-03, -1.1117e-02, -4.8854e-03, -2.1635e-04,
          -1.2615e-02,  5.4465e-02,  1.0775e-02,  9.8062e-03, -1.5148e-02,
          -1.6401e-02, -1.1373e-02,  5.7437e-04, -1.1444e-02,  4.8357e-02,
           8.8987e-05, -5.2396e-02,  6.5300e-05, -3.0458e-02,  1.9037e-03,
           1.7099e-03, -1.5551e-02, -1.9977e-02,  2.3268e-02,  3.8029e-02,
           1.7892e-02, -2.1006e-02,  2.2971e-03,  2.0069e-02,  1.3064e-03,
           3.0472e-02, -4.4314e-02, -1.1753e-02, -3.1874e-02,  3.5798e-02,
           5.1756e-03, -2.7844e-03,  8.9749e-03, -5.1439e-02, -7.5042e-03,
           2.7599e-03,  1.6419e-02,  3.1093e-02, -1.8623e-02,  2.2042e-02,
          -2.4295e-02, -9.7636e-03,  1.0899e-02,  3.3960e-03, -4.2597e-03,
          -3.9881e-03, -1.8995e-02,  4.2059e-02, -1.9313e-02, -9.2552e-05,
          -4.1738e-02,  1.4083e-02, -9.5389e-03, -6.0520e-03, -3.4939e-02,
          -2.7728e-02, -3.6665e-02,  5.0113e-03,  1.1472e-02,  1.3570e-02,
          -2.1502e-03, -1.4765e-02, -4.9485e-03, -5.6652e-04,  1.2265e-02,
           2.2476e-02, -3.7471e-03,  2.2597e-03,  3.7396e-02, -2.4410e-02,
           1.8086e-03,  7.9792e-03, -2.8640e-02,  3.4887e-02, -1.0174e-02,
          -3.2751e-02, -1.9585e-03,  2.6461e-03, -1.0583e-02, -1.0159e-02,
          -3.3399e-02, -9.9422e-03, -2.3019e-02,  1.5096e-02,  6.2627e-03,
           1.8529e-02,  1.4305e-02,  1.2157e-02,  9.2156e-04, -1.5500e-04,
          -8.8422e-03,  1.5177e-02, -1.7113e-02,  4.4656e-03,  1.4362e-02,
           1.3804e-03,  2.3305e-03, -2.6004e-03, -4.6210e-03,  3.9107e-02,
          -1.8134e-03,  9.6070e-04, -3.8737e-02,  1.2098e-02, -4.3774e-03,
          -2.9050e-02,  2.5824e-02,  6.4753e-03,  8.5066e-03, -3.4323e-02,
           4.3126e-03,  5.6289e-03,  6.5148e-03, -9.8355e-03, -1.7928e-02,
           3.3556e-02,  8.1845e-03,  2.9236e-03,  1.3280e-03,  1.8275e-03,
          -2.2114e-02,  4.3936e-03, -2.7309e-02,  1.6695e-02,  1.2079e-02,
          -6.5386e-03, -3.8728e-02,  3.9455e-03,  3.0496e-03,  3.6830e-02,
          -1.4970e-02, -1.9219e-02,  3.9133e-04, -9.6380e-03, -1.0366e-02,
          -1.5721e-02, -4.7300e-02,  1.6019e-03,  2.9087e-02, -2.3622e-02,
          -2.0114e-02,  7.7769e-03,  1.9965e-03,  1.5434e-02,  9.5095e-03,
           1.5310e-02, -1.7657e-03,  2.6591e-02, -5.8851e-03, -1.1002e-02,
          -1.1878e-02,  1.8111e-02,  9.4767e-03,  2.1514e-02,  1.7394e-02,
           2.2403e-02,  1.1353e-02, -8.7398e-03, -2.9757e-02, -1.1429e-02,
          -7.4017e-03,  1.6065e-02,  1.8128e-02,  2.1515e-03,  1.6365e-02,
           1.9779e-02,  1.4048e-03, -2.2562e-02, -2.0301e-02, -9.3292e-03,
          -1.1536e-02, -6.9325e-03, -3.0419e-02, -5.7075e-04,  9.1570e-04,
          -1.1842e-03,  4.8386e-02, -1.0787e-02,  8.2892e-03,  4.9663e-03,
          -3.3887e-02,  1.3211e-02, -2.1901e-02,  2.5977e-03,  7.6766e-03,
          -2.4967e-02,  2.3227e-02, -8.6733e-03, -1.7382e-02, -9.7377e-04,
           2.7782e-02, -2.5608e-02, -2.4135e-02, -1.5157e-02, -4.2427e-03,
           1.0138e-02,  1.4692e-02, -2.2115e-02,  5.8505e-03,  5.6795e-02,
          -5.4732e-04,  2.4815e-03,  3.6399e-02, -6.6594e-03, -4.9714e-03,
           1.9785e-03, -2.3596e-02, -2.1045e-02, -3.4315e-02, -3.7492e-02,
          -2.1608e-02,  1.1981e-02,  1.3046e-03, -4.2548e-03, -7.2033e-03,
          -2.4176e-02,  1.8907e-02,  1.0676e-02,  7.2588e-03, -2.4366e-02,
           8.4272e-03,  5.1596e-02,  1.6143e-02, -3.3589e-02,  6.9769e-03,
          -1.2822e-02, -1.3887e-02,  1.2846e-02,  6.5019e-03,  1.9068e-02,
          -2.7137e-02, -4.7578e-03, -2.4528e-02,  1.2613e-02, -3.4359e-02,
          -1.6676e-02, -7.0383e-03,  2.4654e-02, -2.2453e-02,  2.0432e-02,
           1.6441e-02, -8.3194e-03, -1.6412e-02,  6.8104e-03,  7.6395e-04,
          -1.4775e-02,  1.3332e-02, -1.0271e-02]]], requires_grad=True)), ('pos_embed', Parameter containing:
tensor([[[ 0.0269, -0.0080,  0.0002,  ..., -0.0065, -0.0255, -0.0216],
         [-0.0363, -0.0129, -0.0053,  ..., -0.0011,  0.0074,  0.0050],
         [ 0.0366,  0.0087,  0.0017,  ...,  0.0117, -0.0005, -0.0181],
         ...,
         [ 0.0008, -0.0066,  0.0195,  ...,  0.0042,  0.0212, -0.0002],
         [-0.0176, -0.0311,  0.0208,  ..., -0.0351, -0.0233, -0.0046],
         [ 0.0053,  0.0590, -0.0189,  ..., -0.0142, -0.0118, -0.0195]]],
       requires_grad=True)), ('dist_token', Parameter containing:
tensor([[[-3.9131e-02, -1.8104e-03, -5.5998e-04,  1.9649e-02, -5.5193e-03,
          -1.3567e-02,  5.0326e-03,  5.0267e-03, -4.2721e-03,  1.9343e-02,
          -5.4978e-03, -1.5717e-02, -1.2636e-02,  3.2179e-03,  1.1225e-02,
           1.1928e-02,  4.7859e-02, -1.3567e-02,  2.8095e-02, -2.1872e-02,
          -1.3306e-02, -3.2040e-02, -6.2992e-03,  2.9704e-02,  1.4176e-02,
          -1.1455e-02,  3.2730e-02,  3.0912e-02,  1.6469e-02,  2.2616e-03,
           6.8288e-03, -5.5289e-03, -7.7153e-04, -3.7411e-03, -1.3900e-02,
          -3.0262e-02,  3.4565e-02,  1.3038e-02,  1.8826e-02, -7.9752e-03,
          -7.6852e-03,  5.5720e-02, -2.5669e-02,  8.9671e-03,  6.5598e-03,
           1.2872e-02,  4.1859e-04, -4.5049e-02, -2.1309e-02, -1.4646e-02,
          -4.5024e-03, -5.5180e-03,  4.9791e-02,  2.0433e-02, -6.0836e-03,
          -3.1025e-04,  1.1856e-02,  2.8671e-03,  1.3759e-02, -8.2283e-03,
           3.9213e-02,  2.0953e-02, -3.4943e-02, -1.6632e-02, -1.7673e-02,
           2.1534e-03, -4.5705e-02,  8.7671e-03, -1.2870e-02,  2.9879e-02,
           1.6188e-02, -3.6487e-02, -1.7891e-02, -3.4651e-03,  2.1221e-02,
           2.4233e-02,  4.8462e-05, -3.1396e-03, -5.1462e-03,  9.3173e-03,
          -2.9209e-02,  6.4901e-02,  7.7658e-03, -2.7950e-03, -1.3330e-02,
          -1.1425e-02, -3.3290e-02, -8.4739e-03,  9.5970e-03, -1.8412e-02,
           3.6683e-02,  9.6200e-03, -3.3826e-02, -2.1747e-02,  7.0271e-03,
          -1.1671e-02, -1.3497e-02,  1.3806e-02, -1.1121e-02, -9.4440e-03,
           2.8577e-02, -3.1458e-02,  6.6416e-03, -8.6500e-03, -1.9988e-02,
           5.5322e-04,  1.2176e-02, -1.0070e-02,  3.2412e-03, -2.1068e-02,
           1.1362e-02,  6.8869e-03,  6.3932e-03,  1.7436e-02, -2.3498e-02,
          -1.3885e-02,  1.9668e-02, -2.0231e-02, -1.7646e-02,  3.9869e-02,
           5.1098e-03,  1.0982e-02, -1.8938e-02,  3.6213e-02, -2.7732e-03,
           3.0460e-02, -3.7260e-02, -1.7624e-02, -1.4476e-02, -1.7640e-02,
          -1.8934e-02, -1.6976e-02,  2.4222e-02,  3.7449e-03,  9.0185e-03,
          -1.7760e-02,  3.0804e-02,  1.5391e-03,  1.7233e-02,  1.2265e-02,
          -1.4706e-02, -9.9077e-03, -1.8849e-02, -2.4674e-02, -2.1494e-02,
          -1.9175e-02, -1.5280e-03,  1.6622e-02, -1.2773e-02, -1.6329e-02,
          -8.5376e-04, -1.5725e-02, -4.3903e-02,  1.0091e-02, -1.5766e-03,
          -1.1321e-02,  1.7756e-02, -1.8798e-02,  1.3179e-02,  1.8286e-02,
           1.3825e-02, -1.0216e-02, -9.6804e-05,  2.9554e-03, -3.6850e-02,
          -2.5418e-02, -3.4188e-02,  1.7695e-03, -2.3898e-02, -2.7900e-02,
          -2.2683e-02,  8.4362e-03,  2.9123e-02,  2.7739e-02,  2.6842e-02,
           2.9613e-02,  3.6965e-03, -2.8013e-04,  2.9703e-02,  6.4980e-04,
           1.6410e-02,  7.5560e-03,  6.5579e-04, -5.5757e-03,  2.6138e-02,
           6.9180e-03, -1.1405e-02,  6.2056e-03, -1.0588e-02, -1.2512e-02,
          -2.4792e-02, -4.6680e-02,  8.0520e-03,  2.1435e-02,  2.0921e-02,
          -1.2897e-02, -1.1952e-02, -2.1290e-02,  4.2027e-02,  4.7361e-02,
          -2.7068e-02, -2.8265e-02,  1.8653e-02,  1.6888e-02, -1.1531e-02,
           2.3391e-02,  1.7414e-02, -1.5481e-02, -1.9633e-02, -2.1439e-02,
          -4.6830e-02,  3.5460e-02, -2.9547e-02,  1.4718e-02, -5.2430e-02,
           9.3631e-03,  2.5703e-02, -1.2990e-02,  2.0608e-03, -2.9798e-03,
          -7.2522e-04, -9.9631e-03,  1.7608e-02, -5.5390e-03, -5.7736e-02,
          -1.5028e-02, -2.6655e-03, -2.5483e-03,  9.7143e-03,  4.3329e-02,
          -2.0903e-02,  2.8231e-03, -2.1213e-02,  9.4223e-03, -4.0187e-03,
           1.0069e-02,  2.7068e-02, -6.6290e-03, -1.9668e-02, -1.2746e-02,
           1.7776e-03, -1.1314e-02,  2.6753e-02, -2.4046e-02,  1.2204e-02,
          -1.9227e-02, -2.2262e-02, -1.7779e-02, -6.5104e-02, -3.0698e-02,
           1.3034e-02, -1.4923e-02,  6.6601e-03, -4.5524e-03, -3.1833e-02,
          -3.7405e-03, -7.6025e-03,  1.9294e-02, -7.5155e-03,  2.8884e-02,
          -2.5276e-02,  3.5178e-02, -2.4325e-02, -3.4545e-03,  1.9742e-02,
          -2.0595e-02,  1.4058e-02,  2.0745e-03,  3.3594e-02,  1.4677e-02,
           1.6102e-02,  1.6483e-02,  3.9216e-02, -8.1015e-03,  1.1181e-02,
          -3.4346e-02,  7.3302e-03, -3.3318e-02,  1.0457e-02,  3.7898e-02,
          -2.4703e-02, -5.2108e-03, -3.5279e-03,  8.5652e-03, -7.7363e-03,
          -8.6605e-03,  1.8631e-03, -1.5451e-02, -4.9313e-03, -7.3663e-03,
           1.8218e-02,  1.8869e-02,  6.4272e-03, -3.2880e-02,  1.4637e-02,
          -8.1654e-03,  1.4857e-02, -2.7618e-02,  4.2407e-03,  3.5798e-02,
          -4.4419e-03,  7.1363e-03, -2.3346e-03, -2.5902e-03, -4.5873e-02,
          -1.1678e-04, -7.9922e-03,  5.7055e-03,  2.4761e-02, -1.9796e-02,
           3.4642e-03, -2.7505e-02,  5.7901e-03,  6.0140e-03, -4.3976e-03,
          -8.1245e-03, -5.3333e-04,  1.3285e-02,  5.0928e-02, -3.0881e-02,
           6.8166e-03, -3.0959e-03,  4.0954e-02, -1.7339e-02,  1.1429e-02,
           5.9423e-04,  1.6543e-03,  2.8710e-02, -6.0929e-03, -1.0315e-03,
           1.2939e-02,  3.0370e-04, -1.2754e-02,  6.3292e-03,  1.3209e-02,
          -1.0683e-02, -9.6863e-04,  5.0008e-02,  4.8787e-03, -3.5011e-03,
           1.1519e-02, -3.2798e-03, -5.1770e-03,  1.7526e-02, -2.2779e-02,
          -2.1996e-02,  6.0902e-03,  6.6466e-02,  2.1047e-02,  1.3976e-02,
           2.3833e-02, -1.7325e-02, -4.1740e-02,  5.7862e-03,  3.3881e-03,
           2.9625e-02,  2.9128e-05,  5.3331e-03, -2.2535e-02,  4.4693e-02,
          -5.0478e-02,  4.5911e-03,  2.3704e-03, -2.8780e-02, -4.9839e-03,
          -1.3770e-02, -3.3491e-02, -2.3122e-03, -2.7996e-02, -5.2395e-03,
          -1.5665e-02, -3.7588e-02, -1.9093e-02, -1.6677e-03,  2.8186e-02,
          -1.7157e-02,  1.3026e-02, -7.5992e-03,  6.1455e-03, -1.5777e-02,
           2.0064e-02,  1.4836e-02, -1.7852e-02, -3.4361e-03,  2.0883e-02,
          -3.0168e-02, -5.0551e-03, -8.5157e-03, -2.8927e-02,  1.2731e-03,
           5.4156e-03,  6.2472e-02, -7.8938e-03,  2.7932e-02,  6.3231e-03,
           2.5089e-02, -3.0693e-03,  4.1854e-02, -2.0155e-02, -4.9196e-03,
          -1.7309e-02, -8.4935e-03, -9.0850e-03, -7.8001e-03, -1.2278e-02,
          -3.2259e-02, -1.0582e-02,  2.0964e-03,  5.8397e-04, -2.0798e-02,
          -1.6570e-02, -5.7119e-03,  4.1223e-03, -1.6870e-02, -1.1812e-03,
           5.8648e-03, -2.7560e-02,  2.8906e-02,  8.4186e-03,  1.2977e-02,
           1.3470e-02,  2.9317e-02,  1.4329e-02, -1.6852e-04,  1.6715e-02,
           6.7852e-03,  4.3249e-02, -1.9784e-02, -1.6712e-02, -5.5389e-03,
           1.9642e-02, -5.7026e-03, -2.4967e-02, -1.5751e-02,  6.5836e-03,
           6.4402e-03, -3.1818e-02,  2.9009e-02, -3.5889e-02, -2.6445e-02,
           1.8933e-02, -5.1184e-04,  1.0928e-02, -1.7876e-02,  6.5745e-03,
          -2.7561e-02,  9.4719e-03, -7.2211e-03, -5.5313e-03, -8.2943e-03,
           4.9328e-02, -1.7113e-02, -2.2446e-02, -5.4512e-03,  2.1959e-03,
           2.8614e-02, -2.9008e-02,  1.1525e-02,  2.1621e-03,  7.0866e-03,
           7.7441e-05,  1.2419e-02, -2.5228e-02, -2.4306e-02,  4.5689e-03,
           3.0740e-03,  3.9417e-02,  1.9844e-02,  3.5324e-02, -4.1016e-02,
          -4.4129e-03,  1.0424e-02, -3.1559e-03, -1.1463e-02, -5.6569e-03,
           4.3438e-03, -1.7165e-03,  1.6908e-02, -2.5010e-02,  1.7812e-02,
           3.2925e-02, -1.9261e-03, -1.1659e-02, -9.5679e-03,  8.1719e-03,
          -9.2354e-04,  1.1076e-02, -2.0520e-02, -7.4014e-03, -1.7554e-02,
          -1.1524e-02,  1.8084e-02, -4.1930e-03,  2.3800e-02,  3.9526e-02,
          -2.6953e-02,  2.2044e-02, -2.5967e-02,  3.4588e-02,  2.3198e-02,
          -5.0424e-04, -1.2519e-02, -4.3685e-02, -2.8448e-03,  5.7649e-03,
          -4.2615e-03, -4.5921e-03, -1.6075e-02,  7.8878e-03,  1.4906e-03,
           4.6118e-03,  2.7626e-03,  4.2493e-03,  2.3243e-02,  7.5372e-03,
           2.0580e-03,  1.0591e-02,  1.9544e-02,  5.2236e-03,  3.2111e-02,
          -2.9862e-03, -1.2370e-02,  4.3322e-02, -4.1842e-03, -1.8887e-02,
           1.0069e-02, -2.7736e-02,  2.0958e-02,  2.3358e-02, -2.5185e-02,
          -5.3389e-03,  9.4181e-03,  7.4652e-04, -7.8701e-03, -2.3949e-03,
          -5.4138e-03, -9.8454e-03,  2.9671e-03, -9.4668e-03,  5.0122e-02,
           7.0056e-03,  1.3552e-02,  5.5847e-03, -2.0335e-02, -4.0839e-02,
           1.3679e-02, -1.2504e-03, -1.7625e-02,  6.9834e-03,  4.7479e-03,
           6.0969e-03,  1.6380e-03,  2.4423e-02, -1.0624e-03,  4.1112e-03,
           3.3744e-02,  1.1770e-02,  3.5402e-02, -1.0156e-02,  1.7909e-02,
          -1.4453e-02, -4.6746e-02, -1.8975e-02,  8.8282e-03,  3.0785e-02,
           1.5254e-03,  1.4265e-02,  2.3479e-02, -1.7238e-02, -4.0061e-02,
          -4.4191e-02, -3.3653e-03,  7.8074e-03, -3.6222e-02,  4.6063e-03,
          -2.5857e-02, -1.0912e-03, -9.2147e-03,  3.2788e-04,  7.7422e-03,
          -3.5131e-02,  5.7541e-03,  1.2339e-03,  2.6293e-02, -4.0902e-02,
          -2.2630e-02,  8.2320e-03,  9.0619e-03, -1.2898e-02,  2.0574e-02,
          -1.8171e-02, -1.6533e-03, -2.9307e-02,  3.4406e-02,  5.1623e-02,
           3.4792e-02,  4.3100e-02,  1.0235e-02, -2.6875e-04,  2.2054e-03,
          -3.6836e-02, -5.3717e-03,  1.8617e-02,  2.2342e-02, -1.0173e-02,
          -2.1195e-02, -3.3203e-03,  7.5114e-03, -1.0800e-02, -2.1703e-02,
          -3.7619e-02, -1.8005e-02, -2.3744e-02,  4.2982e-03,  3.5957e-02,
           2.3819e-02, -7.8494e-03, -5.2274e-02, -1.0606e-02, -2.0174e-02,
           1.9458e-02, -1.9378e-02, -8.4101e-03,  1.5766e-02,  3.2777e-02,
          -2.6773e-02, -2.8828e-02,  6.8524e-03, -1.6986e-02,  1.6211e-02,
           1.0704e-02, -4.7617e-02, -1.1119e-02,  9.9279e-03,  3.4956e-02,
          -1.9794e-02,  2.2848e-03, -1.4333e-02,  4.4320e-03, -1.9422e-02,
           2.5271e-02, -7.7813e-03,  1.4842e-02, -6.0016e-03, -8.8058e-03,
           3.3967e-02,  1.2326e-02,  1.9844e-02, -2.1693e-02,  9.6982e-03,
           1.9367e-02, -2.1329e-02, -9.8136e-03,  5.5668e-02,  5.6544e-03,
           2.5118e-02,  1.8040e-03, -6.9434e-03,  5.8782e-02,  2.5503e-02,
          -2.2535e-02,  1.2662e-02, -1.2616e-02,  4.1476e-03, -2.6883e-02,
           1.1895e-02, -3.9619e-03, -6.9526e-03, -4.0540e-03, -8.8994e-03,
           2.3838e-02, -2.6851e-02,  1.9770e-02, -7.3028e-03, -2.2049e-02,
          -1.8573e-02, -1.1862e-02,  4.8643e-02,  3.9500e-02, -2.6235e-02,
          -1.6071e-02, -1.1407e-02, -9.6816e-03, -4.2387e-02,  4.1080e-02,
           2.6129e-02, -2.8884e-02,  1.3455e-02, -2.2068e-02, -4.7978e-03,
           6.8770e-03, -1.2988e-02,  3.1375e-02,  2.1772e-02, -4.8664e-02,
           2.8295e-02, -2.2516e-02,  5.8207e-03, -1.5059e-02, -1.2412e-02,
          -3.5596e-03, -1.7517e-02,  9.7176e-03, -2.2187e-02, -1.8386e-03,
          -9.4083e-03, -1.3292e-02, -7.4118e-04,  2.1049e-02, -1.6868e-02,
           1.2916e-03, -1.5786e-02,  4.9570e-03, -1.8353e-02,  1.3171e-02,
           1.2215e-02, -1.4749e-02,  4.0997e-03,  1.5487e-03,  4.9202e-02,
          -3.3631e-03, -1.5654e-02,  6.2077e-04, -2.2738e-02, -2.0132e-02,
          -2.4359e-02, -8.7642e-03,  8.3052e-03, -1.5443e-02, -3.2313e-02,
          -4.6022e-02,  2.4182e-03, -3.5116e-02,  5.6377e-02,  1.3269e-02,
          -1.5999e-02, -7.5068e-03,  2.6665e-02,  1.2976e-02, -1.2113e-02,
           3.0330e-02, -7.2721e-04,  2.0119e-02,  2.0549e-02, -3.3742e-02,
           2.3601e-02,  1.5907e-02,  1.8399e-03,  2.5925e-02,  6.1675e-03,
          -2.6074e-02,  1.5770e-03, -5.1190e-03,  8.4019e-03, -2.9160e-02,
          -4.3307e-02,  1.3121e-02, -1.2662e-03,  1.2261e-02,  2.5854e-02,
          -2.1899e-02, -6.2405e-03,  2.7373e-02, -3.8452e-04, -2.5566e-03,
           2.6383e-02,  1.4824e-02,  3.6024e-02]]], requires_grad=True))])
_buffers=OrderedDict()
_non_persistent_buffers_set=set()
_backward_hooks=OrderedDict()
_is_full_backward_hook=None
_forward_hooks=OrderedDict()
_forward_pre_hooks=OrderedDict()
_state_dict_hooks=OrderedDict()
_load_state_dict_pre_hooks=OrderedDict()
_modules=OrderedDict([('patch_embed', PatchEmbed(
  (proj): Conv2d(3, 768, kernel_size=(16, 16), stride=(16, 16))
)), ('pos_drop', Dropout(p=0.0, inplace=False)), ('blocks', ModuleList(
  (0): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (1): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (2): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (3): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (4): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (5): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (6): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (7): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (8): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (9): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (10): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
  (11): Block(
    (norm1): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (attn): Attention(
      (qkv): Linear(in_features=768, out_features=2304, bias=True)
      (attn_drop): Dropout(p=0.0, inplace=False)
      (proj): Linear(in_features=768, out_features=768, bias=True)
      (proj_drop): Dropout(p=0.0, inplace=False)
    )
    (drop_path): Identity()
    (norm2): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
    (mlp): Mlp(
      (fc1): Linear(in_features=768, out_features=3072, bias=True)
      (act): GELU()
      (fc2): Linear(in_features=3072, out_features=768, bias=True)
      (drop): Dropout(p=0.0, inplace=False)
    )
  )
)), ('norm', LayerNorm((768,), eps=1e-06, elementwise_affine=True)), ('pre_logits', Identity()), ('head', Linear(in_features=768, out_features=1000, bias=True)), ('head_dist', Linear(in_features=768, out_features=1000, bias=True))])
num_classes=1000
num_features=768
embed_dim=768
default_cfg={'url': 'https://dl.fbaipublicfiles.com/deit/deit_base_distilled_patch16_384-d0272ac0.pth', 'num_classes': 1000, 'input_size': (3, 384, 384), 'pool_size': None, 'crop_pct': 1.0, 'interpolation': 'bicubic', 'mean': (0.485, 0.456, 0.406), 'std': (0.229, 0.224, 0.225), 'first_conv': 'patch_embed.proj', 'classifier': 'head'}
